
AVRASM ver. 2.1.17  C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm Fri Feb 08 17:14:27 2013

C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1026): warning: Register r7 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1027): warning: Register r6 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1028): warning: Register r9 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1029): warning: Register r8 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1030): warning: Register r11 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1031): warning: Register r10 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1032): warning: Register r13 already defined by the .DEF directive
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1033): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.03.4 Standard
                 ;(C) Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type              : ATmega16L
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote char to int    : No
                 ;char is unsigned       : Yes
                 ;global const stored in FLASH  : No
                 ;8 bit enums            : Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16L
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	LDI  R30,0
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+@1)
                 	LDI  R31,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	LDI  R22,BYTE3(2*@0+@1)
                 	LDI  R23,BYTE4(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+@2)
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+@3)
                 	LDI  R@1,HIGH(@2+@3)
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+@3)
                 	LDI  R@1,HIGH(@2*2+@3)
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	LDS  R22,@0+@1+2
                 	LDS  R23,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+@2
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+@3
                 	LDS  R@1,@2+@3+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	LDS  R24,@0+@1+2
                 	LDS  R25,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	STS  @0+@1+2,R22
                 	STS  @0+@1+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+@1,R0
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+@1,R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+@1,R@2
                 	STS  @0+@1+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _CRCLow=R7
                 	.DEF _rx_counter=R6
                 	.DEF _mod_time=R9
                 	.DEF _mod_time_s=R8
                 	.DEF _rx_wr_index=R11
                 	.DEF _CRCHigh=R10
                 	.DEF _tx_buffer_begin=R13
                 	.DEF _tx_buffer_end=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 013f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0335 	JMP  _timer2_comp_isr
000008 940c 0214 	JMP  _timer2_ovf_isr
00000a 940c 0211 	JMP  _timer1_capt_isr
00000c 940c 0212 	JMP  _timer1_compa_isr
00000e 940c 0213 	JMP  _timer1_compb_isr
000010 940c 020a 	JMP  _timer1_ovf_isr
000012 940c 01bf 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 016f 	JMP  _usart_rx_isr
000018 940c 0000 	JMP  0x00
00001a 940c 019f 	JMP  _usart_tx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0209 	JMP  _timer0_comp_isr
000028 940c 0000 	JMP  0x00
                 
                 _crctable:
00002a 0000
00002b c1c0
00002c 81c1
00002d 4001      	.DB  0x0,0x0,0xC0,0xC1,0xC1,0x81,0x1,0x40
00002e 01c3
00002f c003
000030 8002
000031 41c2      	.DB  0xC3,0x1,0x3,0xC0,0x2,0x80,0xC2,0x41
000032 01c6
000033 c006
000034 8007
000035 41c7      	.DB  0xC6,0x1,0x6,0xC0,0x7,0x80,0xC7,0x41
000036 0005
000037 c1c5
000038 81c4
000039 4004      	.DB  0x5,0x0,0xC5,0xC1,0xC4,0x81,0x4,0x40
00003a 01cc
00003b c00c
00003c 800d
00003d 41cd      	.DB  0xCC,0x1,0xC,0xC0,0xD,0x80,0xCD,0x41
00003e 000f
00003f c1cf
000040 81ce
000041 400e      	.DB  0xF,0x0,0xCF,0xC1,0xCE,0x81,0xE,0x40
000042 000a
000043 c1ca
000044 81cb
000045 400b      	.DB  0xA,0x0,0xCA,0xC1,0xCB,0x81,0xB,0x40
000046 01c9
000047 c009
000048 8008
000049 41c8      	.DB  0xC9,0x1,0x9,0xC0,0x8,0x80,0xC8,0x41
00004a 01d8
00004b c018
00004c 8019
00004d 41d9      	.DB  0xD8,0x1,0x18,0xC0,0x19,0x80,0xD9,0x41
00004e 001b
00004f c1db
000050 81da
000051 401a      	.DB  0x1B,0x0,0xDB,0xC1,0xDA,0x81,0x1A,0x40
000052 001e
000053 c1de
000054 81df
000055 401f      	.DB  0x1E,0x0,0xDE,0xC1,0xDF,0x81,0x1F,0x40
000056 01dd
000057 c01d
000058 801c
000059 41dc      	.DB  0xDD,0x1,0x1D,0xC0,0x1C,0x80,0xDC,0x41
00005a 0014
00005b c1d4
00005c 81d5
00005d 4015      	.DB  0x14,0x0,0xD4,0xC1,0xD5,0x81,0x15,0x40
00005e 01d7
00005f c017
000060 8016
000061 41d6      	.DB  0xD7,0x1,0x17,0xC0,0x16,0x80,0xD6,0x41
000062 01d2
000063 c012
000064 8013
000065 41d3      	.DB  0xD2,0x1,0x12,0xC0,0x13,0x80,0xD3,0x41
000066 0011
000067 c1d1
000068 81d0
000069 4010      	.DB  0x11,0x0,0xD1,0xC1,0xD0,0x81,0x10,0x40
00006a 01f0
00006b c030
00006c 8031
00006d 41f1      	.DB  0xF0,0x1,0x30,0xC0,0x31,0x80,0xF1,0x41
00006e 0033
00006f c1f3
000070 81f2
000071 4032      	.DB  0x33,0x0,0xF3,0xC1,0xF2,0x81,0x32,0x40
000072 0036
000073 c1f6
000074 81f7
000075 4037      	.DB  0x36,0x0,0xF6,0xC1,0xF7,0x81,0x37,0x40
000076 01f5
000077 c035
000078 8034
000079 41f4      	.DB  0xF5,0x1,0x35,0xC0,0x34,0x80,0xF4,0x41
00007a 003c
00007b c1fc
00007c 81fd
00007d 403d      	.DB  0x3C,0x0,0xFC,0xC1,0xFD,0x81,0x3D,0x40
00007e 01ff
00007f c03f
000080 803e
000081 41fe      	.DB  0xFF,0x1,0x3F,0xC0,0x3E,0x80,0xFE,0x41
000082 01fa
000083 c03a
000084 803b
000085 41fb      	.DB  0xFA,0x1,0x3A,0xC0,0x3B,0x80,0xFB,0x41
000086 0039
000087 c1f9
000088 81f8
000089 4038      	.DB  0x39,0x0,0xF9,0xC1,0xF8,0x81,0x38,0x40
00008a 0028
00008b c1e8
00008c 81e9
00008d 4029      	.DB  0x28,0x0,0xE8,0xC1,0xE9,0x81,0x29,0x40
00008e 01eb
00008f c02b
000090 802a
000091 41ea      	.DB  0xEB,0x1,0x2B,0xC0,0x2A,0x80,0xEA,0x41
000092 01ee
000093 c02e
000094 802f
000095 41ef      	.DB  0xEE,0x1,0x2E,0xC0,0x2F,0x80,0xEF,0x41
000096 002d
000097 c1ed
000098 81ec
000099 402c      	.DB  0x2D,0x0,0xED,0xC1,0xEC,0x81,0x2C,0x40
00009a 01e4
00009b c024
00009c 8025
00009d 41e5      	.DB  0xE4,0x1,0x24,0xC0,0x25,0x80,0xE5,0x41
00009e 0027
00009f c1e7
0000a0 81e6
0000a1 4026      	.DB  0x27,0x0,0xE7,0xC1,0xE6,0x81,0x26,0x40
0000a2 0022
0000a3 c1e2
0000a4 81e3
0000a5 4023      	.DB  0x22,0x0,0xE2,0xC1,0xE3,0x81,0x23,0x40
0000a6 01e1
0000a7 c021
0000a8 8020
0000a9 41e0      	.DB  0xE1,0x1,0x21,0xC0,0x20,0x80,0xE0,0x41
0000aa 01a0
0000ab c060
0000ac 8061
0000ad 41a1      	.DB  0xA0,0x1,0x60,0xC0,0x61,0x80,0xA1,0x41
0000ae 0063
0000af c1a3
0000b0 81a2
0000b1 4062      	.DB  0x63,0x0,0xA3,0xC1,0xA2,0x81,0x62,0x40
0000b2 0066
0000b3 c1a6
0000b4 81a7
0000b5 4067      	.DB  0x66,0x0,0xA6,0xC1,0xA7,0x81,0x67,0x40
0000b6 01a5
0000b7 c065
0000b8 8064
0000b9 41a4      	.DB  0xA5,0x1,0x65,0xC0,0x64,0x80,0xA4,0x41
0000ba 006c
0000bb c1ac
0000bc 81ad
0000bd 406d      	.DB  0x6C,0x0,0xAC,0xC1,0xAD,0x81,0x6D,0x40
0000be 01af
0000bf c06f
0000c0 806e
0000c1 41ae      	.DB  0xAF,0x1,0x6F,0xC0,0x6E,0x80,0xAE,0x41
0000c2 01aa
0000c3 c06a
0000c4 806b
0000c5 41ab      	.DB  0xAA,0x1,0x6A,0xC0,0x6B,0x80,0xAB,0x41
0000c6 0069
0000c7 c1a9
0000c8 81a8
0000c9 4068      	.DB  0x69,0x0,0xA9,0xC1,0xA8,0x81,0x68,0x40
0000ca 0078
0000cb c1b8
0000cc 81b9
0000cd 4079      	.DB  0x78,0x0,0xB8,0xC1,0xB9,0x81,0x79,0x40
0000ce 01bb
0000cf c07b
0000d0 807a
0000d1 41ba      	.DB  0xBB,0x1,0x7B,0xC0,0x7A,0x80,0xBA,0x41
0000d2 01be
0000d3 c07e
0000d4 807f
0000d5 41bf      	.DB  0xBE,0x1,0x7E,0xC0,0x7F,0x80,0xBF,0x41
0000d6 007d
0000d7 c1bd
0000d8 81bc
0000d9 407c      	.DB  0x7D,0x0,0xBD,0xC1,0xBC,0x81,0x7C,0x40
0000da 01b4
0000db c074
0000dc 8075
0000dd 41b5      	.DB  0xB4,0x1,0x74,0xC0,0x75,0x80,0xB5,0x41
0000de 0077
0000df c1b7
0000e0 81b6
0000e1 4076      	.DB  0x77,0x0,0xB7,0xC1,0xB6,0x81,0x76,0x40
0000e2 0072
0000e3 c1b2
0000e4 81b3
0000e5 4073      	.DB  0x72,0x0,0xB2,0xC1,0xB3,0x81,0x73,0x40
0000e6 01b1
0000e7 c071
0000e8 8070
0000e9 41b0      	.DB  0xB1,0x1,0x71,0xC0,0x70,0x80,0xB0,0x41
0000ea 0050
0000eb c190
0000ec 8191
0000ed 4051      	.DB  0x50,0x0,0x90,0xC1,0x91,0x81,0x51,0x40
0000ee 0193
0000ef c053
0000f0 8052
0000f1 4192      	.DB  0x93,0x1,0x53,0xC0,0x52,0x80,0x92,0x41
0000f2 0196
0000f3 c056
0000f4 8057
0000f5 4197      	.DB  0x96,0x1,0x56,0xC0,0x57,0x80,0x97,0x41
0000f6 0055
0000f7 c195
0000f8 8194
0000f9 4054      	.DB  0x55,0x0,0x95,0xC1,0x94,0x81,0x54,0x40
0000fa 019c
0000fb c05c
0000fc 805d
0000fd 419d      	.DB  0x9C,0x1,0x5C,0xC0,0x5D,0x80,0x9D,0x41
0000fe 005f
0000ff c19f
000100 819e
000101 405e      	.DB  0x5F,0x0,0x9F,0xC1,0x9E,0x81,0x5E,0x40
000102 005a
000103 c19a
000104 819b
000105 405b      	.DB  0x5A,0x0,0x9A,0xC1,0x9B,0x81,0x5B,0x40
000106 0199
000107 c059
000108 8058
000109 4198      	.DB  0x99,0x1,0x59,0xC0,0x58,0x80,0x98,0x41
00010a 0188
00010b c048
00010c 8049
00010d 4189      	.DB  0x88,0x1,0x48,0xC0,0x49,0x80,0x89,0x41
00010e 004b
00010f c18b
000110 818a
000111 404a      	.DB  0x4B,0x0,0x8B,0xC1,0x8A,0x81,0x4A,0x40
000112 004e
000113 c18e
000114 818f
000115 404f      	.DB  0x4E,0x0,0x8E,0xC1,0x8F,0x81,0x4F,0x40
000116 018d
000117 c04d
000118 804c
000119 418c      	.DB  0x8D,0x1,0x4D,0xC0,0x4C,0x80,0x8C,0x41
00011a 0044
00011b c184
00011c 8185
00011d 4045      	.DB  0x44,0x0,0x84,0xC1,0x85,0x81,0x45,0x40
00011e 0187
00011f c047
000120 8046
000121 4186      	.DB  0x87,0x1,0x47,0xC0,0x46,0x80,0x86,0x41
000122 0182
000123 c042
000124 8043
000125 4183      	.DB  0x82,0x1,0x42,0xC0,0x43,0x80,0x83,0x41
000126 0041
000127 c181
000128 8180
000129 4040      	.DB  0x41,0x0,0x81,0xC1,0x80,0x81,0x40,0x40
                 
                 _0x122:
00012a 0000
00012b 0000
00012c 0000
00012d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00012e 0000
00012f 0000
000130 0000
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1129): warning: .cseg .db misalignment - padding zero byte
000131 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x3E1:
000132 00ff
000133 ff00      	.DB  0xFF,0x0,0x0,0xFF
                 _0x200005F:
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1133): warning: .cseg .db misalignment - padding zero byte
000134 0001      	.DB  0x1
                 _0x2000000:
000135 4e2d
000136 4e41
C:\Documents and Settings\Metelkin\Рабочий стол\ВТ-101\vt-101\VT101_29_10_2012\prog1.asm(1135): warning: .cseg .db misalignment - padding zero byte
000137 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
000138 0004      	.DW  0x04
000139 0007      	.DW  0x07
00013a 0264      	.DW  _0x3E1*2
                 
00013b 0001      	.DW  0x01
00013c 023a      	.DW  __seed_G100
00013d 0268      	.DW  _0x200005F*2
                 
                 _0xFFFFFFFF:
00013e 0000      	.DW  0
                 
                 __RESET:
00013f 94f8      	CLI
000140 27ee      	CLR  R30
000141 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000142 e0f1      	LDI  R31,1
000143 bffb      	OUT  GICR,R31
000144 bfeb      	OUT  GICR,R30
000145 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000146 e1f8      	LDI  R31,0x18
000147 bdf1      	OUT  WDTCR,R31
000148 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000149 e08d      	LDI  R24,(14-2)+1
00014a e0a2      	LDI  R26,2
00014b 27bb      	CLR  R27
                 __CLEAR_REG:
00014c 93ed      	ST   X+,R30
00014d 958a      	DEC  R24
00014e f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00014f e080      	LDI  R24,LOW(0x400)
000150 e094      	LDI  R25,HIGH(0x400)
000151 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000152 93ed      	ST   X+,R30
000153 9701      	SBIW R24,1
000154 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000155 e7e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000156 e0f2      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000157 9185      	LPM  R24,Z+
000158 9195      	LPM  R25,Z+
000159 9700      	SBIW R24,0
00015a f061      	BREQ __GLOBAL_INI_END
00015b 91a5      	LPM  R26,Z+
00015c 91b5      	LPM  R27,Z+
00015d 9005      	LPM  R0,Z+
00015e 9015      	LPM  R1,Z+
00015f 01bf      	MOVW R22,R30
000160 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000161 9005      	LPM  R0,Z+
000162 920d      	ST   X+,R0
000163 9701      	SBIW R24,1
000164 f7e1      	BRNE __GLOBAL_INI_LOOP
000165 01fb      	MOVW R30,R22
000166 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
000167 e5ef      	LDI  R30,LOW(0x45F)
000168 bfed      	OUT  SPL,R30
000169 e0e4      	LDI  R30,HIGH(0x45F)
00016a bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00016b e6c0      	LDI  R28,LOW(0x160)
00016c e0d1      	LDI  R29,HIGH(0x160)
                 
00016d 940c 0780 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : ТКБ ВИБРО-Т
                 ;Version : 3.0.00
                 ;Date    : 02.07.2008
                 ;Author  : Метелкин Евгений
                 ;Comments: V1.24.5 Standard
                 ;
                 ;Program type        : Application
                 ;Clock frequency     : 8,000000 MHz
                 ;*****************************************************/
                 ;#include <define.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;//#define cc
                 ;//#define ca
                 ;//--------------------------------------//
                 ;//	USART Receiver buffer
                 ;//--------------------------------------//
                 ;
                 ;#define RX_BUFFER_SIZE 64
                 ;
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;unsigned char CRCLow = 0xff,rx_counter,mod_time,mod_time_s,rx_wr_index,CRCHigh=0xff;
                 ;bit rx_c,ti_en,rx_m;
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 0018         {
                 
                 	.CSEG
                 _usart_rx_isr:
00016f 93aa      	ST   -Y,R26
000170 93ea      	ST   -Y,R30
000171 93fa      	ST   -Y,R31
000172 b7ef      	IN   R30,SREG
000173 93ea      	ST   -Y,R30
                 ; 0000 0019 	char status,d;
                 ; 0000 001A 	status=UCSRA;d=UDR;
000174 931a      	ST   -Y,R17
000175 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	d -> R16
000176 b11b      	IN   R17,11
000177 b10c      	IN   R16,12
                 ; 0000 001B 	if (((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)&&((ti_en==0)&&(rx_c==0)))
000178 2fe1      	MOV  R30,R17
000179 71ec      	ANDI R30,LOW(0x1C)
00017a f461      	BRNE _0x4
00017b e0a0      	LDI  R26,0
00017c fc21      	SBRC R2,1
00017d e0a1      	LDI  R26,1
00017e 30a0      	CPI  R26,LOW(0x0)
00017f f429      	BRNE _0x5
000180 e0a0      	LDI  R26,0
000181 fc20      	SBRC R2,0
000182 e0a1      	LDI  R26,1
000183 30a0      	CPI  R26,LOW(0x0)
000184 f009      	BREQ _0x6
                 _0x5:
000185 c001      	RJMP _0x4
                 _0x6:
000186 c001      	RJMP _0x7
                 _0x4:
000187 c006      	RJMP _0x3
                 _0x7:
                 ; 0000 001C 		{if (mod_time==0){rx_m=1;rx_wr_index=0;}mod_time=mod_time_s;}
000188 2099      	TST  R9
000189 f419      	BRNE _0x8
00018a 9468      	SET
00018b f822      	BLD  R2,2
00018c 24bb      	CLR  R11
                 _0x8:
00018d 2c98      	MOV  R9,R8
                 ; 0000 001D 	rx_buffer[rx_wr_index]=d;
                 _0x3:
00018e 2deb      	MOV  R30,R11
00018f 940e 1815 	CALL SUBOPT_0x0
000191 8300      	ST   Z,R16
                 ; 0000 001E 	if (++rx_wr_index >= RX_BUFFER_SIZE) rx_wr_index=0;
000192 94b3      	INC  R11
000193 e4e0      	LDI  R30,LOW(64)
000194 16be      	CP   R11,R30
000195 f008      	BRLO _0x9
000196 24bb      	CLR  R11
                 ; 0000 001F 	if (++rx_counter >= RX_BUFFER_SIZE) rx_counter=0;
                 _0x9:
000197 9463      	INC  R6
000198 e4e0      	LDI  R30,LOW(64)
000199 166e      	CP   R6,R30
00019a f008      	BRLO _0xA
00019b 2466      	CLR  R6
                 ; 0000 0020 	}
                 _0xA:
00019c 9109      	LD   R16,Y+
00019d 9119      	LD   R17,Y+
00019e c01a      	RJMP _0x3E0
                 ;//--------------------------------------//
                 ;// USART Transmitter buffer
                 ;//--------------------------------------//
                 ;#define TX_BUFFER_SIZE 64
                 ;unsigned char tx_buffer_begin,tx_buffer_end,tx_buffer[TX_BUFFER_SIZE];
                 ;interrupt [USART_TXC] void usart_tx_isr(void)
                 ; 0000 0027         {
                 _usart_tx_isr:
00019f 93aa      	ST   -Y,R26
0001a0 93ea      	ST   -Y,R30
0001a1 93fa      	ST   -Y,R31
0001a2 b7ef      	IN   R30,SREG
0001a3 93ea      	ST   -Y,R30
                 ; 0000 0028         if (ti_en==1)
0001a4 e0a0      	LDI  R26,0
0001a5 fc21      	SBRC R2,1
0001a6 e0a1      	LDI  R26,1
0001a7 30a1      	CPI  R26,LOW(0x1)
0001a8 f481      	BRNE _0xB
                 ; 0000 0029 	        {
                 ; 0000 002A         	if (++tx_buffer_begin>=TX_BUFFER_SIZE) tx_buffer_begin=0;
0001a9 94d3      	INC  R13
0001aa e4e0      	LDI  R30,LOW(64)
0001ab 16de      	CP   R13,R30
0001ac f008      	BRLO _0xC
0001ad 24dd      	CLR  R13
                 ; 0000 002B 	        if (tx_buffer_begin!=tx_buffer_end) {UDR=tx_buffer[tx_buffer_begin];}
                 _0xC:
0001ae 14cd      	CP   R12,R13
0001af f019      	BREQ _0xD
0001b0 940e 1819 	CALL SUBOPT_0x1
                 ; 0000 002C         	else {ti_en=0;rx_c=0;rx_m=0;rx_tx=0;rx_counter=0;}
0001b2 c006      	RJMP _0xE
                 _0xD:
0001b3 94e8      	CLT
0001b4 f821      	BLD  R2,1
0001b5 f820      	BLD  R2,0
0001b6 f822      	BLD  R2,2
0001b7 9892      	CBI  0x12,2
0001b8 2466      	CLR  R6
                 _0xE:
                 ; 0000 002D 	        }
                 ; 0000 002E         }
                 _0xB:
                 _0x3E0:
0001b9 91e9      	LD   R30,Y+
0001ba bfef      	OUT  SREG,R30
0001bb 91f9      	LD   R31,Y+
0001bc 91e9      	LD   R30,Y+
0001bd 91a9      	LD   R26,Y+
0001be 9518      	RETI
                 ;//-------------------------------------------------------------------//
                 ;bit buzer_en,buzer,pik_en,buzer_buzer_en;
                 ;char pik_count;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0033         {//прерывание для бузера
                 _timer0_ovf_isr:
0001bf 93aa      	ST   -Y,R26
0001c0 93ea      	ST   -Y,R30
0001c1 b7ef      	IN   R30,SREG
0001c2 93ea      	ST   -Y,R30
                 ; 0000 0034         TCNT0=TCNT0_reload;
0001c3 e6ef      	LDI  R30,LOW(111)
0001c4 bfe2      	OUT  0x32,R30
                 ; 0000 0035         #asm("wdr");
0001c5 95a8      	wdr
                 ; 0000 0036         if ((buzer_en==1)&&(buzer_buzer_en==1)){if (buzer==1) {buzerp=1;buzer=0;}else {buzerp=0;buzer=1;}}
0001c6 e0a0      	LDI  R26,0
0001c7 fc23      	SBRC R2,3
0001c8 e0a1      	LDI  R26,1
0001c9 30a1      	CPI  R26,LOW(0x1)
0001ca f429      	BRNE _0x12
0001cb e0a0      	LDI  R26,0
0001cc fc26      	SBRC R2,6
0001cd e0a1      	LDI  R26,1
0001ce 30a1      	CPI  R26,LOW(0x1)
0001cf f009      	BREQ _0x13
                 _0x12:
0001d0 c00c      	RJMP _0x11
                 _0x13:
0001d1 e0a0      	LDI  R26,0
0001d2 fc24      	SBRC R2,4
0001d3 e0a1      	LDI  R26,1
0001d4 30a1      	CPI  R26,LOW(0x1)
0001d5 f419      	BRNE _0x14
0001d6 9a95      	SBI  0x12,5
0001d7 94e8      	CLT
0001d8 c002      	RJMP _0x384
                 _0x14:
0001d9 9895      	CBI  0x12,5
0001da 9468      	SET
                 _0x384:
0001db f824      	BLD  R2,4
                 ; 0000 0037         else if (pik_en==1){if (++pik_count>200) {pik_en=0;pik_count=0;}if (buzer==1) {buzerp=1;buzer=0;}else {buzerp=0;buzer=1;}}
0001dc c01a      	RJMP _0x1A
                 _0x11:
0001dd e0a0      	LDI  R26,0
0001de fc25      	SBRC R2,5
0001df e0a1      	LDI  R26,1
0001e0 30a1      	CPI  R26,LOW(0x1)
0001e1 f4a1      	BRNE _0x1B
0001e2 940e 1820 	CALL SUBOPT_0x2
0001e4 f028      	BRLO _0x1C
0001e5 94e8      	CLT
0001e6 f825      	BLD  R2,5
0001e7 e0e0      	LDI  R30,LOW(0)
0001e8 93e0 01e0 	STS  _pik_count,R30
                 _0x1C:
0001ea e0a0      	LDI  R26,0
0001eb fc24      	SBRC R2,4
0001ec e0a1      	LDI  R26,1
0001ed 30a1      	CPI  R26,LOW(0x1)
0001ee f419      	BRNE _0x1D
0001ef 9a95      	SBI  0x12,5
0001f0 94e8      	CLT
0001f1 c002      	RJMP _0x385
                 _0x1D:
0001f2 9895      	CBI  0x12,5
0001f3 9468      	SET
                 _0x385:
0001f4 f824      	BLD  R2,4
                 ; 0000 0038         else buzerp=0;
0001f5 c001      	RJMP _0x23
                 _0x1B:
0001f6 9895      	CBI  0x12,5
                 ; 0000 0039         if (pik_en==1){if (++pik_count>200) {pik_en=0;pik_count=0;}}
                 _0x23:
                 _0x1A:
0001f7 e0a0      	LDI  R26,0
0001f8 fc25      	SBRC R2,5
0001f9 e0a1      	LDI  R26,1
0001fa 30a1      	CPI  R26,LOW(0x1)
0001fb f441      	BRNE _0x26
0001fc 940e 1820 	CALL SUBOPT_0x2
0001fe f028      	BRLO _0x27
0001ff 94e8      	CLT
000200 f825      	BLD  R2,5
000201 e0e0      	LDI  R30,LOW(0)
000202 93e0 01e0 	STS  _pik_count,R30
                 _0x27:
                 ; 0000 003A         }
                 _0x26:
000204 91e9      	LD   R30,Y+
000205 bfef      	OUT  SREG,R30
000206 91e9      	LD   R30,Y+
000207 91a9      	LD   R26,Y+
000208 9518      	RETI
                 ;char led_byte[5][2];
                 ;interrupt [TIM0_COMP] void timer0_comp_isr(void){}
                 ; 0000 003C interrupt [20] void timer0_comp_isr(void){}
                 _timer0_comp_isr:
000209 9518      	RETI
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void){TCNT1H=0x05;TCNT1L=0x01;}
                 ; 0000 003D interrupt [9] void timer1_ovf_isr(void){TCNT1H=0x05;TCNT1L=0x01;}
                 _timer1_ovf_isr:
00020a 93ea      	ST   -Y,R30
00020b e0e5      	LDI  R30,LOW(5)
00020c bded      	OUT  0x2D,R30
00020d e0e1      	LDI  R30,LOW(1)
00020e bdec      	OUT  0x2C,R30
00020f 91e9      	LD   R30,Y+
000210 9518      	RETI
                 ;interrupt [TIM1_CAPT] void timer1_capt_isr(void){}
                 ; 0000 003E interrupt [6] void timer1_capt_isr(void){}
                 _timer1_capt_isr:
000211 9518      	RETI
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void){}
                 ; 0000 003F interrupt [7] void timer1_compa_isr(void){}
                 _timer1_compa_isr:
000212 9518      	RETI
                 ;interrupt [TIM1_COMPB] void timer1_compb_isr(void){}
                 ; 0000 0040 interrupt [8] void timer1_compb_isr(void){}
                 _timer1_compb_isr:
000213 9518      	RETI
                 ;//-------------------------------------------------------------------//
                 ;// прерывание каждые 500 мкс
                 ;//-------------------------------------------------------------------//
                 ;long sys_time,whait_time;
                 ;bit key_mode,key_plus,key_mines,key_enter,key_mode_press,key_plus_press,key_mines_press,key_enter_press,key_mode_press_switch;
                 ;bit key_plus_press_switch,key_minus_press_switch,key_enter_press_switch;
                 ;char count_led,count_led1,drebezg;
                 ;bit avaria,alarm1,alarm2,alarm_alarm1,alarm_alarm2;
                 ;int count_blink,crc;
                 ;//-------------------------------------------------------------------//
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 004C         {//прерывание 500мкс
                 _timer2_ovf_isr:
000214 936a      	ST   -Y,R22
000215 937a      	ST   -Y,R23
000216 93aa      	ST   -Y,R26
000217 93ba      	ST   -Y,R27
000218 93ea      	ST   -Y,R30
000219 93fa      	ST   -Y,R31
00021a b7ef      	IN   R30,SREG
00021b 93ea      	ST   -Y,R30
                 ; 0000 004D         char n;
                 ; 0000 004E         TCNT2=TCNT2_reload;
00021c 931a      	ST   -Y,R17
                 ;	n -> R17
00021d e5ee      	LDI  R30,LOW(94)
00021e bde4      	OUT  0x24,R30
                 ; 0000 004F         #asm("sei");
00021f 9478      	sei
                 ; 0000 0050         sys_time=sys_time+1;
000220 940e 1827 	CALL SUBOPT_0x3
                +
000222 5fef     +SUBI R30 , LOW ( - 1 )
000223 4fff     +SBCI R31 , HIGH ( - 1 )
000224 4f6f     +SBCI R22 , BYTE3 ( - 1 )
000225 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
000226 93e0 01eb 	STS  _sys_time,R30
000228 93f0 01ec 	STS  _sys_time+1,R31
00022a 9360 01ed 	STS  _sys_time+2,R22
00022c 9370 01ee 	STS  _sys_time+3,R23
                 ; 0000 0051 
                 ; 0000 0052 	if (mod_time==0){if (rx_m==1) rx_c=1;}
00022e 2099      	TST  R9
00022f f441      	BRNE _0x28
000230 e0a0      	LDI  R26,0
000231 fc22      	SBRC R2,2
000232 e0a1      	LDI  R26,1
000233 30a1      	CPI  R26,LOW(0x1)
000234 f411      	BRNE _0x29
000235 9468      	SET
000236 f820      	BLD  R2,0
                 _0x29:
                 ; 0000 0053 	else 	mod_time--;
000237 c001      	RJMP _0x2A
                 _0x28:
000238 949a      	DEC  R9
                 ; 0000 0054 
                 ; 0000 0055 
                 ; 0000 0056         if (key_1==0){key_mode=1;if ((key_mode_press==0)&&(pik_en==0)){key_mode_press_switch=1;pik_en=1;drebezg=0;}key_mode_press=1;}
                 _0x2A:
000239 9998      	SBIC 0x13,0
00023a c011      	RJMP _0x2B
00023b 9468      	SET
00023c f827      	BLD  R2,7
00023d e0a0      	LDI  R26,0
00023e fc33      	SBRC R3,3
00023f e0a1      	LDI  R26,1
000240 30a0      	CPI  R26,LOW(0x0)
000241 f419      	BRNE _0x2D
000242 940e 1830 	CALL SUBOPT_0x4
000244 f009      	BREQ _0x2E
                 _0x2D:
000245 c004      	RJMP _0x2C
                 _0x2E:
000246 9468      	SET
000247 f837      	BLD  R3,7
000248 940e 1835 	CALL SUBOPT_0x5
                 _0x2C:
00024a 9468      	SET
00024b c00f      	RJMP _0x386
                 ; 0000 0057         else if ((key_2==1)&&(key_3==1)&&(key_4==1)&&(++drebezg>DREBEZG_TIME)){key_mode=0;key_mode_press=0;}
                 _0x2B:
00024c 940e 183b 	CALL SUBOPT_0x6
00024e f449      	BRNE _0x31
00024f 940e 1840 	CALL SUBOPT_0x7
000251 f431      	BRNE _0x31
000252 940e 1845 	CALL SUBOPT_0x8
000254 f419      	BRNE _0x31
000255 940e 184a 	CALL SUBOPT_0x9
000257 f408      	BRSH _0x32
                 _0x31:
000258 c003      	RJMP _0x30
                 _0x32:
000259 94e8      	CLT
00025a f827      	BLD  R2,7
                 _0x386:
00025b f833      	BLD  R3,3
                 ; 0000 0058 
                 ; 0000 0059         if (key_2==0){key_plus=1;if ((key_plus_press==0)&&(pik_en==0)){key_plus_press_switch=1;pik_en=1;drebezg=0;}key_plus_press=1;}
                 _0x30:
00025c 9999      	SBIC 0x13,1
00025d c00f      	RJMP _0x33
00025e 9468      	SET
00025f f830      	BLD  R3,0
000260 940e 1851 	CALL SUBOPT_0xA
000262 f419      	BRNE _0x35
000263 940e 1830 	CALL SUBOPT_0x4
000265 f009      	BREQ _0x36
                 _0x35:
000266 c004      	RJMP _0x34
                 _0x36:
000267 9468      	SET
000268 f840      	BLD  R4,0
000269 940e 1835 	CALL SUBOPT_0x5
                 _0x34:
00026b 9468      	SET
00026c c011      	RJMP _0x387
                 ; 0000 005A         else if ((key_1==1)&&(key_3==1)&&(key_4==1)&&(++drebezg>DREBEZG_TIME)){key_plus=0;key_plus_press=0;}
                 _0x33:
00026d e0a0      	LDI  R26,0
00026e 9998      	SBIC 0x13,0
00026f e0a1      	LDI  R26,1
000270 30a1      	CPI  R26,LOW(0x1)
000271 f449      	BRNE _0x39
000272 940e 1840 	CALL SUBOPT_0x7
000274 f431      	BRNE _0x39
000275 940e 1845 	CALL SUBOPT_0x8
000277 f419      	BRNE _0x39
000278 940e 184a 	CALL SUBOPT_0x9
00027a f408      	BRSH _0x3A
                 _0x39:
00027b c003      	RJMP _0x38
                 _0x3A:
00027c 94e8      	CLT
00027d f830      	BLD  R3,0
                 _0x387:
00027e f834      	BLD  R3,4
                 ; 0000 005B 
                 ; 0000 005C         if (key_3==0){key_mines=1;if ((key_mines_press==0)&&(pik_en==0)){key_minus_press_switch=1;pik_en=1;drebezg=0;}key_mines_press=1;}
                 _0x38:
00027f 9986      	SBIC 0x10,6
000280 c00f      	RJMP _0x3B
000281 9468      	SET
000282 f831      	BLD  R3,1
000283 940e 1856 	CALL SUBOPT_0xB
000285 f419      	BRNE _0x3D
000286 940e 1830 	CALL SUBOPT_0x4
000288 f009      	BREQ _0x3E
                 _0x3D:
000289 c004      	RJMP _0x3C
                 _0x3E:
00028a 9468      	SET
00028b f841      	BLD  R4,1
00028c 940e 1835 	CALL SUBOPT_0x5
                 _0x3C:
00028e 9468      	SET
00028f c011      	RJMP _0x388
                 ; 0000 005D         else if ((key_2==1)&&(key_1==1)&&(key_4==1)&&(++drebezg>DREBEZG_TIME)){key_mines=0;key_mines_press=0;}
                 _0x3B:
000290 940e 183b 	CALL SUBOPT_0x6
000292 f459      	BRNE _0x41
000293 e0a0      	LDI  R26,0
000294 9998      	SBIC 0x13,0
000295 e0a1      	LDI  R26,1
000296 30a1      	CPI  R26,LOW(0x1)
000297 f431      	BRNE _0x41
000298 940e 1845 	CALL SUBOPT_0x8
00029a f419      	BRNE _0x41
00029b 940e 184a 	CALL SUBOPT_0x9
00029d f408      	BRSH _0x42
                 _0x41:
00029e c003      	RJMP _0x40
                 _0x42:
00029f 94e8      	CLT
0002a0 f831      	BLD  R3,1
                 _0x388:
0002a1 f835      	BLD  R3,5
                 ; 0000 005E 
                 ; 0000 005F         if (key_4==0){key_enter=1;if (key_enter_press==0){key_enter_press_switch=1;pik_en=1;whait_time=sys_time;}key_enter_press=1;alarm_alarm1=0;alarm_alarm2=0;}
                 _0x40:
0002a2 9987      	SBIC 0x10,7
0002a3 c016      	RJMP _0x43
0002a4 9468      	SET
0002a5 f832      	BLD  R3,2
0002a6 fc36      	SBRC R3,6
0002a7 c00c      	RJMP _0x44
0002a8 f842      	BLD  R4,2
0002a9 f825      	BLD  R2,5
0002aa 940e 1827 	CALL SUBOPT_0x3
0002ac 93e0 01ef 	STS  _whait_time,R30
0002ae 93f0 01f0 	STS  _whait_time+1,R31
0002b0 9360 01f1 	STS  _whait_time+2,R22
0002b2 9370 01f2 	STS  _whait_time+3,R23
                 _0x44:
0002b4 9468      	SET
0002b5 f836      	BLD  R3,6
0002b6 94e8      	CLT
0002b7 f846      	BLD  R4,6
0002b8 f847      	BLD  R4,7
                 ; 0000 0060         else {key_enter=0;key_enter_press=0;}
0002b9 c003      	RJMP _0x45
                 _0x43:
0002ba 94e8      	CLT
0002bb f832      	BLD  R3,2
0002bc f836      	BLD  R3,6
                 _0x45:
                 ; 0000 0061 
                 ; 0000 0062         if (++count_blink>2000) count_blink=0;
0002bd efa5      	LDI  R26,LOW(_count_blink)
0002be e0b1      	LDI  R27,HIGH(_count_blink)
0002bf 91ed      	LD   R30,X+
0002c0 91fd      	LD   R31,X+
0002c1 9631      	ADIW R30,1
0002c2 93fe      	ST   -X,R31
0002c3 93ee      	ST   -X,R30
0002c4 3de1      	CPI  R30,LOW(0x7D1)
0002c5 e0a7      	LDI  R26,HIGH(0x7D1)
0002c6 07fa      	CPC  R31,R26
0002c7 f034      	BRLT _0x46
0002c8 e0e0      	LDI  R30,LOW(0)
0002c9 e0f0      	LDI  R31,HIGH(0)
0002ca 93e0 01f5 	STS  _count_blink,R30
0002cc 93f0 01f6 	STS  _count_blink+1,R31
                 ; 0000 0063         if (count_blink<300) {n=1;buzer_en=0;if ((alarm_alarm1==1)||(alarm_alarm2==1))buzer_en=1;else buzer_en=0;}
                 _0x46:
0002ce 91a0 01f5 	LDS  R26,_count_blink
0002d0 91b0 01f6 	LDS  R27,_count_blink+1
0002d2 32ac      	CPI  R26,LOW(0x12C)
0002d3 e0e1      	LDI  R30,HIGH(0x12C)
0002d4 07be      	CPC  R27,R30
0002d5 f474      	BRGE _0x47
0002d6 e011      	LDI  R17,LOW(1)
0002d7 94e8      	CLT
0002d8 f823      	BLD  R2,3
0002d9 940e 185b 	CALL SUBOPT_0xC
0002db f019      	BREQ _0x49
0002dc 940e 1860 	CALL SUBOPT_0xD
0002de f411      	BRNE _0x48
                 _0x49:
0002df 9468      	SET
0002e0 c001      	RJMP _0x389
                 _0x48:
0002e1 94e8      	CLT
                 _0x389:
0002e2 f823      	BLD  R2,3
                 ; 0000 0064         else {n=0;if ((alarm1==1)||(alarm2==1))buzer_en=1;}
0002e3 c009      	RJMP _0x4C
                 _0x47:
0002e4 e010      	LDI  R17,LOW(0)
0002e5 940e 1865 	CALL SUBOPT_0xE
0002e7 f019      	BREQ _0x4E
0002e8 940e 186a 	CALL SUBOPT_0xF
0002ea f411      	BRNE _0x4D
                 _0x4E:
0002eb 9468      	SET
0002ec f823      	BLD  R2,3
                 _0x4D:
                 _0x4C:
                 ; 0000 0065 //#ifdef ca
                 ; 0000 0066          katode=0xFF;anode=anode&0b00000111;
0002ed efef      	LDI  R30,LOW(255)
0002ee bbeb      	OUT  0x1B,R30
0002ef b3e5      	IN   R30,0x15
0002f0 70e7      	ANDI R30,LOW(0x7)
0002f1 bbe5      	OUT  0x15,R30
                 ; 0000 0067 /*#else
                 ; 0000 0068         katode=0x00;anode=anode|0b01111000;anode5=0;
                 ; 0000 0069 #endif*/
                 ; 0000 006A         switch (count_led)
0002f2 91e0 01f3 	LDS  R30,_count_led
                 ; 0000 006B                 {
                 ; 0000 006C //#ifdef ca
                 ; 0000 006D                  case 4: count_led=0;anode1=1;DDRC.3=1;katode=led_byte[0][n];break;
0002f4 30e4      	CPI  R30,LOW(0x4)
0002f5 f459      	BRNE _0x53
0002f6 e0e0      	LDI  R30,LOW(0)
0002f7 93e0 01f3 	STS  _count_led,R30
0002f9 9aab      	SBI  0x15,3
0002fa 9aa3      	SBI  0x14,3
0002fb 940e 186f 	CALL SUBOPT_0x10
0002fd 51ef      	SUBI R30,LOW(-_led_byte)
0002fe 4ffe      	SBCI R31,HIGH(-_led_byte)
0002ff 81e0      	LD   R30,Z
000300 c029      	RJMP _0x38A
                 ; 0000 006E                  case 3: count_led=4;anode2=1;DDRC.4=1;katode=led_byte[1][n];break;
                 _0x53:
000301 30e3      	CPI  R30,LOW(0x3)
000302 f441      	BRNE _0x58
000303 e0e4      	LDI  R30,LOW(4)
000304 93e0 01f3 	STS  _count_led,R30
000306 9aac      	SBI  0x15,4
000307 9aa4      	SBI  0x14,4
                +
000308 eea3     +LDI R26 , LOW ( _led_byte + 2 )
000309 e0b1     +LDI R27 , HIGH ( _led_byte + 2 )
                 	__POINTW2MN _led_byte,2
00030a c01b      	RJMP _0x38B
                 ; 0000 006F                  case 2: count_led=3;anode3=1;DDRC.5=1;katode=led_byte[2][n];break;
                 _0x58:
00030b 30e2      	CPI  R30,LOW(0x2)
00030c f441      	BRNE _0x5D
00030d e0e3      	LDI  R30,LOW(3)
00030e 93e0 01f3 	STS  _count_led,R30
000310 9aad      	SBI  0x15,5
000311 9aa5      	SBI  0x14,5
                +
000312 eea5     +LDI R26 , LOW ( _led_byte + 4 )
000313 e0b1     +LDI R27 , HIGH ( _led_byte + 4 )
                 	__POINTW2MN _led_byte,4
000314 c011      	RJMP _0x38B
                 ; 0000 0070                  case 1: count_led=2;anode4=1;DDRC.6=1;katode=led_byte[3][n];break;
                 _0x5D:
000315 30e1      	CPI  R30,LOW(0x1)
000316 f441      	BRNE _0x67
000317 e0e2      	LDI  R30,LOW(2)
000318 93e0 01f3 	STS  _count_led,R30
00031a 9aae      	SBI  0x15,6
00031b 9aa6      	SBI  0x14,6
                +
00031c eea7     +LDI R26 , LOW ( _led_byte + 6 )
00031d e0b1     +LDI R27 , HIGH ( _led_byte + 6 )
                 	__POINTW2MN _led_byte,6
00031e c007      	RJMP _0x38B
                 ; 0000 0071                  default:count_led=1;anode5=1;DDRC.7=1;katode=led_byte[4][n];break;
                 _0x67:
00031f e0e1      	LDI  R30,LOW(1)
000320 93e0 01f3 	STS  _count_led,R30
000322 9aaf      	SBI  0x15,7
000323 9aa7      	SBI  0x14,7
                +
000324 eea9     +LDI R26 , LOW ( _led_byte + 8 )
000325 e0b1     +LDI R27 , HIGH ( _led_byte + 8 )
                 	__POINTW2MN _led_byte,8
                 _0x38B:
000326 27ee      	CLR  R30
000327 0fa1      	ADD  R26,R17
000328 1fbe      	ADC  R27,R30
000329 91ec      	LD   R30,X
                 _0x38A:
00032a bbeb      	OUT  0x1B,R30
                 ; 0000 0072 /*#else
                 ; 0000 0073 
                 ; 0000 0074                 case 4: count_led=0;katode=led_byte[0,n];anode1=0;DDRC.3=1;break;
                 ; 0000 0075                 case 3: count_led=4;katode=led_byte[1,n];anode2=0;DDRC.4=1;break;
                 ; 0000 0076                 case 2: count_led=3;katode=led_byte[2,n];anode3=0;DDRC.5=1;break;
                 ; 0000 0077                 case 1: count_led=2;katode=led_byte[3,n];anode4=0;DDRC.6=1;break;
                 ; 0000 0078                 default:
                 ; 0000 0079                         {count_led=1;
                 ; 0000 007A                         if (++count_led1>5)
                 ; 0000 007B                                 {count_led1=0;katode=led_byte[4,n];anode5=1;DDRC.7=1;}*/
                 ; 0000 007C                     //    break;
                 ; 0000 007D                         }
                 ; 0000 007E 
                 ; 0000 007F 
                 ; 0000 0080 //#endif
                 ; 0000 0081  //               }
                 ; 0000 0082         }
00032b 9119      	LD   R17,Y+
00032c 91e9      	LD   R30,Y+
00032d bfef      	OUT  SREG,R30
00032e 91f9      	LD   R31,Y+
00032f 91e9      	LD   R30,Y+
000330 91b9      	LD   R27,Y+
000331 91a9      	LD   R26,Y+
000332 9179      	LD   R23,Y+
000333 9169      	LD   R22,Y+
000334 9518      	RETI
                 ;//-------------------------------------------------------------------//
                 ;interrupt [TIM2_COMP] void timer2_comp_isr(void){}
                 ; 0000 0084 interrupt [4] void timer2_comp_isr(void){}
                 _timer2_comp_isr:
000335 9518      	RETI
                 ;#include <spi.h>
                 ;
                 ;eeprom float reg[4][27]=
                 ; {{0, 4.6, 7.1,   0,   5,   0,   1,   0,   1,   0,   0,   1,0.00,20.0,   2,   2,   0,  10,   2,   5,   0,   0,   1,   0,1.00,11.09,    1},
                 ;  {0, 4.6, 7.1,   0,   5,   0,   1,   0,   1,   0,   0,   1,0.00,20.0,   2,   2,   0,  10,   2,   5,   0,   0,   1,   0,1.00,11.09,    1},
                 ;  {0,9999,9999,  30,  30,   1,   1,  10,   2,   1,   1,   2,9999,9999,  10,  10,   5,  30,   4,  10,   1,   1, 1.8,   1,99.99,12.99,  247},
                 ;  {0,-999,-999,   0,   0,   0,   0,   0,   1,   0,   0,   0,-999,-999,   0,   0,   0,   0,   0,   0,   0,   0, 0.2,   0,0,1.00,    0}};
                 ;  //|уст1|уст2|зад1|зад2|маск|звук|гист|звук|рел1|рел2|едиз| нпи| впи|дсну|дсву|врус|вбпв|диап|ввим|зал1|зал2| кал|заву|верс|дата|адрес|
                 ;  // Y_01,Y_02,Z_01,Z_02,P___,C___,A_01,A_02,A_03,A_04,A_05,A_06,A_07,A_08,A_09,A_10,A_11,A_12,A_13,A_14,A_15,A_16,A_17,A_18,A_19,Adres;
                 ;
                 ;eeprom char ee_point=3;
                 ;eeprom int crceep = 0x0000;
                 ;eeprom const int crcstatic = 0x45cb;
                 ;eeprom char crc1digit = 3, crc2digit = 'c', crc3digit =2 , crc4digit = 1;
                 ;
                 ;
                 ;//eeprom const
                 ;char mode,point,work_point,save_point;
                 ;#include <function_led.h>
                 _led_calk:
                 ;	a -> Y+0
000336 81e8      	LD   R30,Y
000337 30e0      	CPI  R30,0
000338 f411      	BRNE _0x6F
000339 e4e0      	LDI  R30,LOW(64)
00033a c075      	RJMP _0x38C
                 _0x6F:
00033b 30e1      	CPI  R30,LOW(0x1)
00033c f411      	BRNE _0x70
00033d e7e9      	LDI  R30,LOW(121)
00033e c071      	RJMP _0x38C
                 _0x70:
00033f 30e2      	CPI  R30,LOW(0x2)
000340 f411      	BRNE _0x71
000341 e2e4      	LDI  R30,LOW(36)
000342 c06d      	RJMP _0x38C
                 _0x71:
000343 30e3      	CPI  R30,LOW(0x3)
000344 f411      	BRNE _0x72
000345 e3e0      	LDI  R30,LOW(48)
000346 c069      	RJMP _0x38C
                 _0x72:
000347 30e4      	CPI  R30,LOW(0x4)
000348 f411      	BRNE _0x73
000349 e1e9      	LDI  R30,LOW(25)
00034a c065      	RJMP _0x38C
                 _0x73:
00034b 30e5      	CPI  R30,LOW(0x5)
00034c f411      	BRNE _0x74
00034d e1e2      	LDI  R30,LOW(18)
00034e c061      	RJMP _0x38C
                 _0x74:
00034f 30e6      	CPI  R30,LOW(0x6)
000350 f411      	BRNE _0x75
000351 e0e2      	LDI  R30,LOW(2)
000352 c05d      	RJMP _0x38C
                 _0x75:
000353 30e7      	CPI  R30,LOW(0x7)
000354 f411      	BRNE _0x76
000355 e7e8      	LDI  R30,LOW(120)
000356 c059      	RJMP _0x38C
                 _0x76:
000357 30e8      	CPI  R30,LOW(0x8)
000358 f411      	BRNE _0x77
000359 e0e0      	LDI  R30,LOW(0)
00035a c055      	RJMP _0x38C
                 _0x77:
00035b 30e9      	CPI  R30,LOW(0x9)
00035c f411      	BRNE _0x78
00035d e1e0      	LDI  R30,LOW(16)
00035e c051      	RJMP _0x38C
                 _0x78:
00035f 32e0      	CPI  R30,LOW(0x20)
000360 f411      	BRNE _0x79
000361 e7ef      	LDI  R30,LOW(127)
000362 c04d      	RJMP _0x38C
                 _0x79:
000363 35ef      	CPI  R30,LOW(0x5F)
000364 f411      	BRNE _0x7A
000365 e7e7      	LDI  R30,LOW(119)
000366 c049      	RJMP _0x38C
                 _0x7A:
000367 3de3      	CPI  R30,LOW(0xD3)
000368 f411      	BRNE _0x7B
000369 e1e1      	LDI  R30,LOW(17)
00036a c045      	RJMP _0x38C
                 _0x7B:
00036b 36e1      	CPI  R30,LOW(0x61)
00036c f411      	BRNE _0x7C
00036d e0e8      	LDI  R30,LOW(8)
00036e c041      	RJMP _0x38C
                 _0x7C:
00036f 3eef      	CPI  R30,LOW(0xEF)
000370 f411      	BRNE _0x7D
000371 e4e8      	LDI  R30,LOW(72)
000372 c03d      	RJMP _0x38C
                 _0x7D:
000373 36e3      	CPI  R30,LOW(0x63)
000374 f411      	BRNE _0x7E
000375 e4e6      	LDI  R30,LOW(70)
000376 c039      	RJMP _0x38C
                 _0x7E:
000377 37e0      	CPI  R30,LOW(0x70)
000378 f411      	BRNE _0x7F
000379 e0ec      	LDI  R30,LOW(12)
00037a c035      	RJMP _0x38C
                 _0x7F:
00037b 32ed      	CPI  R30,LOW(0x2D)
00037c f411      	BRNE _0x80
00037d e3ef      	LDI  R30,LOW(63)
00037e c031      	RJMP _0x38C
                 _0x80:
00037f 37e2      	CPI  R30,LOW(0x72)
000380 f411      	BRNE _0x81
000381 e2ef      	LDI  R30,LOW(47)
000382 c02d      	RJMP _0x38C
                 _0x81:
000383 37e4      	CPI  R30,LOW(0x74)
000384 f411      	BRNE _0x82
000385 e0e7      	LDI  R30,LOW(7)
000386 c029      	RJMP _0x38C
                 _0x82:
000387 36e2      	CPI  R30,LOW(0x62)
000388 f411      	BRNE _0x83
000389 e0e3      	LDI  R30,LOW(3)
00038a c025      	RJMP _0x38C
                 _0x83:
00038b 36e4      	CPI  R30,LOW(0x64)
00038c f411      	BRNE _0x84
00038d e2e1      	LDI  R30,LOW(33)
00038e c021      	RJMP _0x38C
                 _0x84:
00038f 36e5      	CPI  R30,LOW(0x65)
000390 f411      	BRNE _0x85
000391 e0e6      	LDI  R30,LOW(6)
000392 c01d      	RJMP _0x38C
                 _0x85:
000393 36e6      	CPI  R30,LOW(0x66)
000394 f411      	BRNE _0x86
000395 e0ee      	LDI  R30,LOW(14)
000396 c019      	RJMP _0x38C
                 _0x86:
000397 36e7      	CPI  R30,LOW(0x67)
000398 f411      	BRNE _0x87
000399 e4e2      	LDI  R30,LOW(66)
00039a c015      	RJMP _0x38C
                 _0x87:
00039b 36e8      	CPI  R30,LOW(0x68)
00039c f411      	BRNE _0x88
00039d e6e5      	LDI  R30,LOW(101)
00039e c011      	RJMP _0x38C
                 _0x88:
00039f 36eb      	CPI  R30,LOW(0x6B)
0003a0 f411      	BRNE _0x89
0003a1 e0ea      	LDI  R30,LOW(10)
0003a2 c00d      	RJMP _0x38C
                 _0x89:
0003a3 36e9      	CPI  R30,LOW(0x69)
0003a4 f411      	BRNE _0x8A
0003a5 e4ef      	LDI  R30,LOW(79)
0003a6 c009      	RJMP _0x38C
                 _0x8A:
0003a7 36ec      	CPI  R30,LOW(0x6C)
0003a8 f411      	BRNE _0x8B
0003a9 e4e7      	LDI  R30,LOW(71)
0003aa c005      	RJMP _0x38C
                 _0x8B:
0003ab 37e6      	CPI  R30,LOW(0x76)
0003ac f411      	BRNE _0x8D
0003ad e4e1      	LDI  R30,LOW(65)
0003ae c001      	RJMP _0x38C
                 _0x8D:
0003af e7e2      	LDI  R30,LOW(114)
                 _0x38C:
0003b0 83e8      	ST   Y,R30
0003b1 c141      	RJMP _0x20A0006
                 _set_led_on:
0003b2 931a      	ST   -Y,R17
                 ;	a -> Y+8
                 ;	b -> Y+7
                 ;	c -> Y+6
                 ;	d -> Y+5
                 ;	p1 -> Y+4
                 ;	p2 -> Y+3
                 ;	p3 -> Y+2
                 ;	p4 -> Y+1
                 ;	i -> R17
0003b3 940e 1872 	CALL SUBOPT_0x11
0003b5 f411      	BRNE _0x8E
0003b6 e0e0      	LDI  R30,LOW(0)
0003b7 83ed      	STD  Y+5,R30
                 _0x8E:
0003b8 81ec      	LDD  R30,Y+4
0003b9 30e0      	CPI  R30,0
0003ba f421      	BRNE _0x8F
0003bb 9110 01e1 	LDS  R17,_led_byte
0003bd 6810      	ORI  R17,LOW(128)
0003be c003      	RJMP _0x38D
                 _0x8F:
0003bf 9110 01e1 	LDS  R17,_led_byte
0003c1 771f      	ANDI R17,LOW(127)
                 _0x38D:
0003c2 9310 01e1 	STS  _led_byte,R17
0003c4 81eb      	LDD  R30,Y+3
0003c5 30e0      	CPI  R30,0
0003c6 f421      	BRNE _0x91
                +
0003c7 9110 01e3+LDS R17 , _led_byte + 2
                 	__GETBRMN 17,_led_byte,2
0003c9 6810      	ORI  R17,LOW(128)
0003ca c003      	RJMP _0x38E
                 _0x91:
                +
0003cb 9110 01e3+LDS R17 , _led_byte + 2
                 	__GETBRMN 17,_led_byte,2
0003cd 771f      	ANDI R17,LOW(127)
                 _0x38E:
                +
0003ce 9310 01e3+STS _led_byte + 2 , R17
                 	__PUTBMRN _led_byte,2,17
0003d0 81ea      	LDD  R30,Y+2
0003d1 30e0      	CPI  R30,0
0003d2 f421      	BRNE _0x93
                +
0003d3 9110 01e5+LDS R17 , _led_byte + 4
                 	__GETBRMN 17,_led_byte,4
0003d5 6810      	ORI  R17,LOW(128)
0003d6 c003      	RJMP _0x38F
                 _0x93:
                +
0003d7 9110 01e5+LDS R17 , _led_byte + 4
                 	__GETBRMN 17,_led_byte,4
0003d9 771f      	ANDI R17,LOW(127)
                 _0x38F:
                +
0003da 9310 01e5+STS _led_byte + 4 , R17
                 	__PUTBMRN _led_byte,4,17
0003dc 81e9      	LDD  R30,Y+1
0003dd 30e0      	CPI  R30,0
0003de f421      	BRNE _0x95
                +
0003df 9110 01e7+LDS R17 , _led_byte + 6
                 	__GETBRMN 17,_led_byte,6
0003e1 6810      	ORI  R17,LOW(128)
0003e2 c003      	RJMP _0x390
                 _0x95:
                +
0003e3 9110 01e7+LDS R17 , _led_byte + 6
                 	__GETBRMN 17,_led_byte,6
0003e5 771f      	ANDI R17,LOW(127)
                 _0x390:
                +
0003e6 9310 01e7+STS _led_byte + 6 , R17
                 	__PUTBMRN _led_byte,6,17
0003e8 85a8      	LDD  R26,Y+8
0003e9 30a0      	CPI  R26,LOW(0x0)
0003ea f429      	BRNE _0x98
0003eb e0a0      	LDI  R26,0
0003ec fc43      	SBRC R4,3
0003ed e0a1      	LDI  R26,1
0003ee 30a0      	CPI  R26,LOW(0x0)
0003ef f009      	BREQ _0x99
                 _0x98:
0003f0 c004      	RJMP _0x97
                 _0x99:
                +
0003f1 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
0003f3 60e1      	ORI  R30,1
0003f4 c003      	RJMP _0x391
                 _0x97:
                +
0003f5 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
0003f7 7fee      	ANDI R30,0xFE
                 _0x391:
                +
0003f8 93e0 01e9+STS _led_byte + 8 , R30
                 	__PUTB1MN _led_byte,8
0003fa 81af      	LDD  R26,Y+7
0003fb 30a0      	CPI  R26,LOW(0x0)
0003fc f429      	BRNE _0x9C
0003fd e0a0      	LDI  R26,0
0003fe fc45      	SBRC R4,5
0003ff e0a1      	LDI  R26,1
000400 30a0      	CPI  R26,LOW(0x0)
000401 f009      	BREQ _0x9D
                 _0x9C:
000402 c004      	RJMP _0x9B
                 _0x9D:
                +
000403 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
000405 60e2      	ORI  R30,2
000406 c003      	RJMP _0x392
                 _0x9B:
                +
000407 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
000409 7fed      	ANDI R30,0xFD
                 _0x392:
                +
00040a 93e0 01e9+STS _led_byte + 8 , R30
                 	__PUTB1MN _led_byte,8
00040c 81ae      	LDD  R26,Y+6
00040d 30a0      	CPI  R26,LOW(0x0)
00040e f429      	BRNE _0xA0
00040f e0a0      	LDI  R26,0
000410 fc44      	SBRC R4,4
000411 e0a1      	LDI  R26,1
000412 30a0      	CPI  R26,LOW(0x0)
000413 f009      	BREQ _0xA1
                 _0xA0:
000414 c004      	RJMP _0x9F
                 _0xA1:
                +
000415 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
000417 60e4      	ORI  R30,4
000418 c003      	RJMP _0x393
                 _0x9F:
                +
000419 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
00041b 7feb      	ANDI R30,0xFB
                 _0x393:
                +
00041c 93e0 01e9+STS _led_byte + 8 , R30
                 	__PUTB1MN _led_byte,8
00041e 81ed      	LDD  R30,Y+5
00041f 30e0      	CPI  R30,0
000420 f421      	BRNE _0xA3
                +
000421 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
000423 60e8      	ORI  R30,8
000424 c003      	RJMP _0x394
                 _0xA3:
                +
000425 91e0 01e9+LDS R30 , _led_byte + 8
                 	__GETB1MN _led_byte,8
000427 7fe7      	ANDI R30,0XF7
                 _0x394:
                +
000428 93e0 01e9+STS _led_byte + 8 , R30
                 	__PUTB1MN _led_byte,8
00042a c074      	RJMP _0x20A0008
                 _set_led_off:
00042b 931a      	ST   -Y,R17
                 ;	a -> Y+8
                 ;	b -> Y+7
                 ;	c -> Y+6
                 ;	d -> Y+5
                 ;	p1 -> Y+4
                 ;	p2 -> Y+3
                 ;	p3 -> Y+2
                 ;	p4 -> Y+1
                 ;	i -> R17
00042c 940e 1872 	CALL SUBOPT_0x11
00042e f411      	BRNE _0xA5
00042f e0e0      	LDI  R30,LOW(0)
000430 83ed      	STD  Y+5,R30
                 _0xA5:
000431 81ec      	LDD  R30,Y+4
000432 30e0      	CPI  R30,0
000433 f421      	BRNE _0xA6
                +
000434 9110 01e2+LDS R17 , _led_byte + 1
                 	__GETBRMN 17,_led_byte,1
000436 6810      	ORI  R17,LOW(128)
000437 c003      	RJMP _0x395
                 _0xA6:
                +
000438 9110 01e2+LDS R17 , _led_byte + 1
                 	__GETBRMN 17,_led_byte,1
00043a 771f      	ANDI R17,LOW(127)
                 _0x395:
                +
00043b 9310 01e2+STS _led_byte + 1 , R17
                 	__PUTBMRN _led_byte,1,17
00043d 81eb      	LDD  R30,Y+3
00043e 30e0      	CPI  R30,0
00043f f421      	BRNE _0xA8
                +
000440 9110 01e4+LDS R17 , _led_byte + 3
                 	__GETBRMN 17,_led_byte,3
000442 6810      	ORI  R17,LOW(128)
000443 c003      	RJMP _0x396
                 _0xA8:
                +
000444 9110 01e4+LDS R17 , _led_byte + 3
                 	__GETBRMN 17,_led_byte,3
000446 771f      	ANDI R17,LOW(127)
                 _0x396:
                +
000447 9310 01e4+STS _led_byte + 3 , R17
                 	__PUTBMRN _led_byte,3,17
000449 81ea      	LDD  R30,Y+2
00044a 30e0      	CPI  R30,0
00044b f421      	BRNE _0xAA
                +
00044c 9110 01e6+LDS R17 , _led_byte + 5
                 	__GETBRMN 17,_led_byte,5
00044e 6810      	ORI  R17,LOW(128)
00044f c003      	RJMP _0x397
                 _0xAA:
                +
000450 9110 01e6+LDS R17 , _led_byte + 5
                 	__GETBRMN 17,_led_byte,5
000452 771f      	ANDI R17,LOW(127)
                 _0x397:
                +
000453 9310 01e6+STS _led_byte + 5 , R17
                 	__PUTBMRN _led_byte,5,17
000455 81e9      	LDD  R30,Y+1
000456 30e0      	CPI  R30,0
000457 f421      	BRNE _0xAC
                +
000458 9110 01e8+LDS R17 , _led_byte + 7
                 	__GETBRMN 17,_led_byte,7
00045a 6810      	ORI  R17,LOW(128)
00045b c003      	RJMP _0x398
                 _0xAC:
                +
00045c 9110 01e8+LDS R17 , _led_byte + 7
                 	__GETBRMN 17,_led_byte,7
00045e 771f      	ANDI R17,LOW(127)
                 _0x398:
                +
00045f 9310 01e8+STS _led_byte + 7 , R17
                 	__PUTBMRN _led_byte,7,17
000461 85a8      	LDD  R26,Y+8
000462 30a0      	CPI  R26,LOW(0x0)
000463 f429      	BRNE _0xAF
000464 e0a0      	LDI  R26,0
000465 fc43      	SBRC R4,3
000466 e0a1      	LDI  R26,1
000467 30a0      	CPI  R26,LOW(0x0)
000468 f009      	BREQ _0xB0
                 _0xAF:
000469 c004      	RJMP _0xAE
                 _0xB0:
                +
00046a 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
00046c 60e1      	ORI  R30,1
00046d c003      	RJMP _0x399
                 _0xAE:
                +
00046e 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
000470 7fee      	ANDI R30,0xFE
                 _0x399:
                +
000471 93e0 01ea+STS _led_byte + 9 , R30
                 	__PUTB1MN _led_byte,9
000473 81af      	LDD  R26,Y+7
000474 30a0      	CPI  R26,LOW(0x0)
000475 f419      	BRNE _0xB3
000476 940e 1877 	CALL SUBOPT_0x12
000478 f009      	BREQ _0xB4
                 _0xB3:
000479 c004      	RJMP _0xB2
                 _0xB4:
                +
00047a 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
00047c 60e2      	ORI  R30,2
00047d c003      	RJMP _0x39A
                 _0xB2:
                +
00047e 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
000480 7fed      	ANDI R30,0xFD
                 _0x39A:
                +
000481 93e0 01ea+STS _led_byte + 9 , R30
                 	__PUTB1MN _led_byte,9
000483 81ae      	LDD  R26,Y+6
000484 30a0      	CPI  R26,LOW(0x0)
000485 f419      	BRNE _0xB7
000486 940e 187c 	CALL SUBOPT_0x13
000488 f009      	BREQ _0xB8
                 _0xB7:
000489 c004      	RJMP _0xB6
                 _0xB8:
                +
00048a 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
00048c 60e4      	ORI  R30,4
00048d c003      	RJMP _0x39B
                 _0xB6:
                +
00048e 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
000490 7feb      	ANDI R30,0xFB
                 _0x39B:
                +
000491 93e0 01ea+STS _led_byte + 9 , R30
                 	__PUTB1MN _led_byte,9
000493 81ed      	LDD  R30,Y+5
000494 30e0      	CPI  R30,0
000495 f421      	BRNE _0xBA
                +
000496 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
000498 60e8      	ORI  R30,8
000499 c003      	RJMP _0x39C
                 _0xBA:
                +
00049a 91e0 01ea+LDS R30 , _led_byte + 9
                 	__GETB1MN _led_byte,9
00049c 7fe7      	ANDI R30,0XF7
                 _0x39C:
                +
00049d 93e0 01ea+STS _led_byte + 9 , R30
                 	__PUTB1MN _led_byte,9
                 _0x20A0008:
00049f 8118      	LDD  R17,Y+0
0004a0 9629      	ADIW R28,9
0004a1 9508      	RET
                 _set_digit_on:
0004a2 931a      	ST   -Y,R17
                 ;	a -> Y+4
                 ;	b -> Y+3
                 ;	c -> Y+2
                 ;	d -> Y+1
                 ;	i -> R17
0004a3 9110 01e1 	LDS  R17,_led_byte
0004a5 940e 1881 	CALL SUBOPT_0x14
0004a7 9310 01e1 	STS  _led_byte,R17
                +
0004a9 9110 01e3+LDS R17 , _led_byte + 2
                 	__GETBRMN 17,_led_byte,2
0004ab 940e 1888 	CALL SUBOPT_0x15
                +
0004ad 9310 01e3+STS _led_byte + 2 , R17
                 	__PUTBMRN _led_byte,2,17
                +
0004af 9110 01e5+LDS R17 , _led_byte + 4
                 	__GETBRMN 17,_led_byte,4
0004b1 940e 188f 	CALL SUBOPT_0x16
                +
0004b3 9310 01e5+STS _led_byte + 4 , R17
                 	__PUTBMRN _led_byte,4,17
                +
0004b5 9110 01e7+LDS R17 , _led_byte + 6
                 	__GETBRMN 17,_led_byte,6
0004b7 940e 1896 	CALL SUBOPT_0x17
                +
0004b9 9310 01e7+STS _led_byte + 6 , R17
                 	__PUTBMRN _led_byte,6,17
0004bb c019      	RJMP _0x20A0007
                 _set_digit_off:
0004bc 931a      	ST   -Y,R17
                 ;	a -> Y+4
                 ;	b -> Y+3
                 ;	c -> Y+2
                 ;	d -> Y+1
                 ;	i -> R17
                +
0004bd 9110 01e2+LDS R17 , _led_byte + 1
                 	__GETBRMN 17,_led_byte,1
0004bf 940e 1881 	CALL SUBOPT_0x14
                +
0004c1 9310 01e2+STS _led_byte + 1 , R17
                 	__PUTBMRN _led_byte,1,17
                +
0004c3 9110 01e4+LDS R17 , _led_byte + 3
                 	__GETBRMN 17,_led_byte,3
0004c5 940e 1888 	CALL SUBOPT_0x15
                +
0004c7 9310 01e4+STS _led_byte + 3 , R17
                 	__PUTBMRN _led_byte,3,17
                +
0004c9 9110 01e6+LDS R17 , _led_byte + 5
                 	__GETBRMN 17,_led_byte,5
0004cb 940e 188f 	CALL SUBOPT_0x16
                +
0004cd 9310 01e6+STS _led_byte + 5 , R17
                 	__PUTBMRN _led_byte,5,17
                +
0004cf 9110 01e8+LDS R17 , _led_byte + 7
                 	__GETBRMN 17,_led_byte,7
0004d1 940e 1896 	CALL SUBOPT_0x17
                +
0004d3 9310 01e8+STS _led_byte + 7 , R17
                 	__PUTBMRN _led_byte,7,17
                 _0x20A0007:
0004d5 8118      	LDD  R17,Y+0
0004d6 9625      	ADIW R28,5
0004d7 9508      	RET
                 ;
                 ;char ed,des,sot,tis,count_filter,count_filter1,i,count_key,count_key1;
                 ;long filter_value;
                 ;unsigned int adc_buf;
                 ;flash  int crctable[256]= {
                 ;        0x0000, 0xC1C0, 0x81C1, 0x4001, 0x01C3, 0xC003, 0x8002, 0x41C2, 0x01C6, 0xC006,
                 ;        0x8007, 0x41C7, 0x0005, 0xC1C5, 0x81C4, 0x4004, 0x01CC, 0xC00C, 0x800D, 0x41CD,
                 ;        0x000F, 0xC1CF, 0x81CE, 0x400E, 0x000A, 0xC1CA, 0x81CB, 0x400B, 0x01C9, 0xC009,
                 ;        0x8008, 0x41C8, 0x01D8, 0xC018, 0x8019, 0x41D9, 0x001B, 0xC1DB, 0x81DA, 0x401A,
                 ;        0x001E, 0xC1DE, 0x81DF, 0x401F, 0x01DD, 0xC01D, 0x801C, 0x41DC, 0x0014, 0xC1D4,
                 ;        0x81D5, 0x4015, 0x01D7, 0xC017, 0x8016, 0x41D6, 0x01D2, 0xC012, 0x8013, 0x41D3,
                 ;        0x0011, 0xC1D1, 0x81D0, 0x4010, 0x01F0, 0xC030, 0x8031, 0x41F1, 0x0033, 0xC1F3,
                 ;        0x81F2, 0x4032, 0x0036, 0xC1F6, 0x81F7, 0x4037, 0x01F5, 0xC035, 0x8034, 0x41F4,
                 ;        0x003C, 0xC1FC, 0x81FD, 0x403D, 0x01FF, 0xC03F, 0x803E, 0x41FE, 0x01FA, 0xC03A,
                 ;        0x803B, 0x41FB, 0x0039, 0xC1F9, 0x81F8, 0x4038, 0x0028, 0xC1E8, 0x81E9, 0x4029,
                 ;        0x01EB, 0xC02B, 0x802A, 0x41EA, 0x01EE, 0xC02E, 0x802F, 0x41EF, 0x002D, 0xC1ED,
                 ;        0x81EC, 0x402C, 0x01E4, 0xC024, 0x8025, 0x41E5, 0x0027, 0xC1E7, 0x81E6, 0x4026,
                 ;        0x0022, 0xC1E2, 0x81E3, 0x4023, 0x01E1, 0xC021, 0x8020, 0x41E0, 0x01A0, 0xC060,
                 ;        0x8061, 0x41A1, 0x0063, 0xC1A3, 0x81A2, 0x4062, 0x0066, 0xC1A6, 0x81A7, 0x4067,
                 ;        0x01A5, 0xC065, 0x8064, 0x41A4, 0x006C, 0xC1AC, 0x81AD, 0x406D, 0x01AF, 0xC06F,
                 ;        0x806E, 0x41AE, 0x01AA, 0xC06A, 0x806B, 0x41AB, 0x0069, 0xC1A9, 0x81A8, 0x4068,
                 ;        0x0078, 0xC1B8, 0x81B9, 0x4079, 0x01BB, 0xC07B, 0x807A, 0x41BA, 0x01BE, 0xC07E,
                 ;        0x807F, 0x41BF, 0x007D, 0xC1BD, 0x81BC, 0x407C, 0x01B4, 0xC074, 0x8075, 0x41B5,
                 ;        0x0077, 0xC1B7, 0x81B6, 0x4076, 0x0072, 0xC1B2, 0x81B3, 0x4073, 0x01B1, 0xC071,
                 ;        0x8070, 0x41B0, 0x0050, 0xC190, 0x8191, 0x4051, 0x0193, 0xC053, 0x8052, 0x4192,
                 ;        0x0196, 0xC056, 0x8057, 0x4197, 0x0055, 0xC195, 0x8194, 0x4054, 0x019C, 0xC05C,
                 ;	0x805D, 0x419D, 0x005F, 0xC19F, 0x819E, 0x405E, 0x005A, 0xC19A, 0x819B, 0x405B,
                 ;	0x0199, 0xC059, 0x8058, 0x4198, 0x0188, 0xC048, 0x8049, 0x4189, 0x004B, 0xC18B,
                 ;	0x818A, 0x404A, 0x004E, 0xC18E, 0x818F, 0x404F, 0x018D, 0xC04D, 0x804C, 0x418C,
                 ;	0x0044, 0xC184, 0x8185, 0x4045, 0x0187, 0xC047, 0x8046, 0x4186, 0x0182, 0xC042,
                 ;	0x8043, 0x4183, 0x0041, 0xC181, 0x8180, 0x4040
                 ;};
                 ;
                 ;void  CRC_update(unsigned char d)
                 ; 0000 00BA {
                 _CRC_update:
                 ; 0000 00BB   //unsigned char uindex;
                 ; 0000 00BC   //uindex = CRCHigh^d;
                 ; 0000 00BD   //CRCHigh=CRCLow^((int)crctable[uindex]>>8);
                 ; 0000 00BE   //CRCLow=crctable[uindex];
                 ; 0000 00BF   //crc = CRCHigh;
                 ; 0000 00C0   //crc = ((int)crc)<<8+CRCLow;
                 ; 0000 00C1   crc = crctable[((crc>>8)^d)&0xFF] ^ (crc<<8);
                 ;	d -> Y+0
0004d8 940e 189d 	CALL SUBOPT_0x18
0004da 940e 1ca1 	CALL __ASRW8
0004dc 01df      	MOVW R26,R30
0004dd 81e8      	LD   R30,Y
0004de e0f0      	LDI  R31,0
0004df 27ae      	EOR  R26,R30
0004e0 27bf      	EOR  R27,R31
0004e1 efef      	LDI  R30,LOW(255)
0004e2 e0f0      	LDI  R31,HIGH(255)
0004e3 23ea      	AND  R30,R26
0004e4 23fb      	AND  R31,R27
0004e5 e5a4      	LDI  R26,LOW(_crctable*2)
0004e6 e0b0      	LDI  R27,HIGH(_crctable*2)
0004e7 0fee      	LSL  R30
0004e8 1fff      	ROL  R31
0004e9 0fea      	ADD  R30,R26
0004ea 1ffb      	ADC  R31,R27
0004eb 940e 1ccb 	CALL __GETW1PF
0004ed 01df      	MOVW R26,R30
0004ee 91f0 01f7 	LDS  R31,_crc
0004f0 e0e0      	LDI  R30,LOW(0)
0004f1 940e 18a2 	CALL SUBOPT_0x19
                 ; 0000 00C2 }
                 _0x20A0006:
0004f3 9621      	ADIW R28,1
0004f4 9508      	RET
                 ;void hex2dec(float x)		// подпрограмма преобразования кода в ASCII
                 ; 0000 00C4  	{				//
                 _hex2dec:
                 ; 0000 00C5  	char str[9],str1[9];
                 ; 0000 00C6  	signed char a,b;
                 ; 0000 00C7  	if (x<-999) x=-999;
0004f5 9762      	SBIW R28,18
0004f6 931a      	ST   -Y,R17
0004f7 930a      	ST   -Y,R16
                 ;	x -> Y+20
                 ;	str -> Y+11
                 ;	str1 -> Y+2
                 ;	a -> R17
                 ;	b -> R16
                +
0004f8 89ac     +LDD R26 , Y + 20
0004f9 89bd     +LDD R27 , Y + 20 + 1
0004fa 898e     +LDD R24 , Y + 20 + 2
0004fb 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
                +
0004fc e0e0     +LDI R30 , LOW ( 0xC479C000 )
0004fd ecf0     +LDI R31 , HIGH ( 0xC479C000 )
0004fe e769     +LDI R22 , BYTE3 ( 0xC479C000 )
0004ff ec74     +LDI R23 , BYTE4 ( 0xC479C000 )
                 	__GETD1N 0xC479C000
000500 940e 1ea2 	CALL __CMPF12
000502 f420      	BRSH _0xBC
                +
000503 8bec     +STD Y + 20 , R30
000504 8bfd     +STD Y + 20 + 1 , R31
000505 8b6e     +STD Y + 20 + 2 , R22
000506 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
                 ; 0000 00C8  	if (x>9999) x=9999;
                 _0xBC:
                +
000507 89ac     +LDD R26 , Y + 20
000508 89bd     +LDD R27 , Y + 20 + 1
000509 898e     +LDD R24 , Y + 20 + 2
00050a 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
                +
00050b e0e0     +LDI R30 , LOW ( 0x461C3C00 )
00050c e3fc     +LDI R31 , HIGH ( 0x461C3C00 )
00050d e16c     +LDI R22 , BYTE3 ( 0x461C3C00 )
00050e e476     +LDI R23 , BYTE4 ( 0x461C3C00 )
                 	__GETD1N 0x461C3C00
00050f 940e 1ea2 	CALL __CMPF12
000511 f009      	BREQ PC+2
000512 f410      	BRCC PC+3
000513 940c 0519 	JMP  _0xBD
                +
000515 8bec     +STD Y + 20 , R30
000516 8bfd     +STD Y + 20 + 1 , R31
000517 8b6e     +STD Y + 20 + 2 , R22
000518 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
                 ; 0000 00C9  	ftoa(x,5,str1);
                 _0xBD:
                +
000519 89ec     +LDD R30 , Y + 20
00051a 89fd     +LDD R31 , Y + 20 + 1
00051b 896e     +LDD R22 , Y + 20 + 2
00051c 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00051d 940e 1ccf 	CALL __PUTPARD1
00051f e0e5      	LDI  R30,LOW(5)
000520 93ea      	ST   -Y,R30
000521 01fe      	MOVW R30,R28
000522 9637      	ADIW R30,7
000523 93fa      	ST   -Y,R31
000524 93ea      	ST   -Y,R30
000525 940e 16f8 	CALL _ftoa
                 ; 0000 00CA  	for (a=0;a<9;a++){if (str1[a]=='.') goto p1;}
000527 e010      	LDI  R17,LOW(0)
                 _0xBF:
000528 3019      	CPI  R17,9
000529 f44c      	BRGE _0xC0
00052a 940e 186f 	CALL SUBOPT_0x10
00052c 940e 18a9 	CALL SUBOPT_0x1A
00052e 91ac      	LD   R26,X
00052f 32ae      	CPI  R26,LOW(0x2E)
000530 f011      	BREQ _0xC2
000531 5f1f      	SUBI R17,-1
000532 cff5      	RJMP _0xBF
                 _0xC0:
                 ; 0000 00CB p1:
                 _0xC2:
                 ; 0000 00CC         b=4;
000533 e004      	LDI  R16,LOW(4)
                 ; 0000 00CD         while ((a>=0)&&(b>=0)){str[b]=str1[a];a--;b--;}
                 _0xC3:
000534 3010      	CPI  R17,0
000535 f014      	BRLT _0xC6
000536 3000      	CPI  R16,0
000537 f40c      	BRGE _0xC7
                 _0xC6:
000538 c00f      	RJMP _0xC5
                 _0xC7:
000539 940e 18ae 	CALL SUBOPT_0x1B
00053b 0fea      	ADD  R30,R26
00053c 1ffb      	ADC  R31,R27
00053d 010f      	MOVW R0,R30
00053e 940e 186f 	CALL SUBOPT_0x10
000540 940e 18a9 	CALL SUBOPT_0x1A
000542 91ec      	LD   R30,X
000543 01d0      	MOVW R26,R0
000544 93ec      	ST   X,R30
000545 5011      	SUBI R17,1
000546 5001      	SUBI R16,1
000547 cfec      	RJMP _0xC3
                 _0xC5:
                 ; 0000 00CE         a=3-b;
000548 e0e3      	LDI  R30,LOW(3)
000549 1be0      	SUB  R30,R16
00054a 2f1e      	MOV  R17,R30
                 ; 0000 00CF         while (b>=0) {str[b]='0';b--;}
                 _0xC8:
00054b 3000      	CPI  R16,0
00054c f044      	BRLT _0xCA
00054d 940e 18ae 	CALL SUBOPT_0x1B
00054f 0fae      	ADD  R26,R30
000550 1fbf      	ADC  R27,R31
000551 e3e0      	LDI  R30,LOW(48)
000552 93ec      	ST   X,R30
000553 5001      	SUBI R16,1
000554 cff6      	RJMP _0xC8
                 _0xCA:
                 ; 0000 00D0         b=4;
000555 e004      	LDI  R16,LOW(4)
                 ; 0000 00D1         while ((a<9)&&(b<9)){str[b]=str1[a];a++;b++;}
                 _0xCB:
000556 3019      	CPI  R17,9
000557 f414      	BRGE _0xCE
000558 3009      	CPI  R16,9
000559 f00c      	BRLT _0xCF
                 _0xCE:
00055a c00f      	RJMP _0xCD
                 _0xCF:
00055b 940e 18ae 	CALL SUBOPT_0x1B
00055d 0fea      	ADD  R30,R26
00055e 1ffb      	ADC  R31,R27
00055f 010f      	MOVW R0,R30
000560 940e 186f 	CALL SUBOPT_0x10
000562 940e 18a9 	CALL SUBOPT_0x1A
000564 91ec      	LD   R30,X
000565 01d0      	MOVW R26,R0
000566 93ec      	ST   X,R30
000567 5f1f      	SUBI R17,-1
000568 5f0f      	SUBI R16,-1
000569 cfec      	RJMP _0xCB
                 _0xCD:
                 ; 0000 00D2         while (b<9) {str[b]='0';b++;}
                 _0xD0:
00056a 3009      	CPI  R16,9
00056b f444      	BRGE _0xD2
00056c 940e 18ae 	CALL SUBOPT_0x1B
00056e 0fae      	ADD  R26,R30
00056f 1fbf      	ADC  R27,R31
000570 e3e0      	LDI  R30,LOW(48)
000571 93ec      	ST   X,R30
000572 5f0f      	SUBI R16,-1
000573 cff6      	RJMP _0xD0
                 _0xD2:
                 ; 0000 00D3  	if (point==1)
000574 91a0 01fa 	LDS  R26,_point
000576 30a1      	CPI  R26,LOW(0x1)
000577 f539      	BRNE _0xD3
                 ; 0000 00D4  	        {
                 ; 0000 00D5                 if (str[0]=='-') tis='-';
000578 85ab      	LDD  R26,Y+11
000579 32ad      	CPI  R26,LOW(0x2D)
00057a f411      	BRNE _0xD4
00057b e2ed      	LDI  R30,LOW(45)
00057c c007      	RJMP _0x39D
                 ; 0000 00D6                 else if (str[0]==0)tis=0;
                 _0xD4:
00057d 85eb      	LDD  R30,Y+11
00057e 30e0      	CPI  R30,0
00057f f411      	BRNE _0xD6
000580 e0e0      	LDI  R30,LOW(0)
000581 c002      	RJMP _0x39D
                 ; 0000 00D7                 else tis=str[0]-0x30;
                 _0xD6:
000582 85eb      	LDD  R30,Y+11
000583 53e0      	SUBI R30,LOW(48)
                 _0x39D:
000584 93e0 01ff 	STS  _tis,R30
                 ; 0000 00D8                 sot=str[1]-0x30;
000586 85ec      	LDD  R30,Y+12
000587 53e0      	SUBI R30,LOW(48)
000588 93e0 01fe 	STS  _sot,R30
                 ; 0000 00D9                 des=str[2]-0x30;
00058a 85ed      	LDD  R30,Y+13
00058b 53e0      	SUBI R30,LOW(48)
00058c 93e0 01fd 	STS  _des,R30
                 ; 0000 00DA                 ed=str[3]-0x30;
00058e 85ee      	LDD  R30,Y+14
00058f 940e 18b3 	CALL SUBOPT_0x1C
                 ; 0000 00DB                 if (tis==0){tis=' ';if (sot==0){sot=' ';if(des==0) des=' ';}}
000591 f469      	BRNE _0xD8
000592 940e 18ba 	CALL SUBOPT_0x1D
000594 f451      	BRNE _0xD9
000595 e2e0      	LDI  R30,LOW(32)
000596 93e0 01fe 	STS  _sot,R30
000598 91e0 01fd 	LDS  R30,_des
00059a 30e0      	CPI  R30,0
00059b f419      	BRNE _0xDA
00059c e2e0      	LDI  R30,LOW(32)
00059d 93e0 01fd 	STS  _des,R30
                 _0xDA:
                 _0xD9:
                 ; 0000 00DC  	        }
                 _0xD8:
                 ; 0000 00DD  	if (point==2)
                 _0xD3:
00059f 91a0 01fa 	LDS  R26,_point
0005a1 30a2      	CPI  R26,LOW(0x2)
0005a2 f551      	BRNE _0xDB
                 ; 0000 00DE  	        {
                 ; 0000 00DF                 if (str[1]=='-') tis='-';
0005a3 85ac      	LDD  R26,Y+12
0005a4 32ad      	CPI  R26,LOW(0x2D)
0005a5 f411      	BRNE _0xDC
0005a6 e2ed      	LDI  R30,LOW(45)
0005a7 c007      	RJMP _0x39E
                 ; 0000 00E0                 else if (str[1]==0)tis=0;
                 _0xDC:
0005a8 85ec      	LDD  R30,Y+12
0005a9 30e0      	CPI  R30,0
0005aa f411      	BRNE _0xDE
0005ab e0e0      	LDI  R30,LOW(0)
0005ac c002      	RJMP _0x39E
                 ; 0000 00E1                 else tis=str[1]-0x30;
                 _0xDE:
0005ad 85ec      	LDD  R30,Y+12
0005ae 53e0      	SUBI R30,LOW(48)
                 _0x39E:
0005af 93e0 01ff 	STS  _tis,R30
                 ; 0000 00E2                 if (str[2]=='-') sot='-';
0005b1 85ad      	LDD  R26,Y+13
0005b2 32ad      	CPI  R26,LOW(0x2D)
0005b3 f411      	BRNE _0xE0
0005b4 e2ed      	LDI  R30,LOW(45)
0005b5 c007      	RJMP _0x39F
                 ; 0000 00E3                 else if (str[2]==0)sot=0;
                 _0xE0:
0005b6 85ed      	LDD  R30,Y+13
0005b7 30e0      	CPI  R30,0
0005b8 f411      	BRNE _0xE2
0005b9 e0e0      	LDI  R30,LOW(0)
0005ba c002      	RJMP _0x39F
                 ; 0000 00E4                 else sot=str[2]-0x30;
                 _0xE2:
0005bb 85ed      	LDD  R30,Y+13
0005bc 53e0      	SUBI R30,LOW(48)
                 _0x39F:
0005bd 93e0 01fe 	STS  _sot,R30
                 ; 0000 00E5                 des=str[3]-0x30;
0005bf 85ee      	LDD  R30,Y+14
0005c0 53e0      	SUBI R30,LOW(48)
0005c1 93e0 01fd 	STS  _des,R30
                 ; 0000 00E6                 ed=str[5]-0x30;
0005c3 89e8      	LDD  R30,Y+16
0005c4 940e 18b3 	CALL SUBOPT_0x1C
                 ; 0000 00E7                 if (tis==0){tis=' ';if (sot==0)sot=' ';}
0005c6 f431      	BRNE _0xE4
0005c7 940e 18ba 	CALL SUBOPT_0x1D
0005c9 f419      	BRNE _0xE5
0005ca e2e0      	LDI  R30,LOW(32)
0005cb 93e0 01fe 	STS  _sot,R30
                 _0xE5:
                 ; 0000 00E8  	        }
                 _0xE4:
                 ; 0000 00E9  	if (point==3)
                 _0xDB:
0005cd 91a0 01fa 	LDS  R26,_point
0005cf 30a3      	CPI  R26,LOW(0x3)
0005d0 f539      	BRNE _0xE6
                 ; 0000 00EA  	        {
                 ; 0000 00EB                 if (str[2]=='-') tis='-';
0005d1 85ad      	LDD  R26,Y+13
0005d2 32ad      	CPI  R26,LOW(0x2D)
0005d3 f411      	BRNE _0xE7
0005d4 e2ed      	LDI  R30,LOW(45)
0005d5 c007      	RJMP _0x3A0
                 ; 0000 00EC                 else if (str[2]==0)tis=0;
                 _0xE7:
0005d6 85ed      	LDD  R30,Y+13
0005d7 30e0      	CPI  R30,0
0005d8 f411      	BRNE _0xE9
0005d9 e0e0      	LDI  R30,LOW(0)
0005da c002      	RJMP _0x3A0
                 ; 0000 00ED                 else tis=str[2]-0x30;
                 _0xE9:
0005db 85ed      	LDD  R30,Y+13
0005dc 53e0      	SUBI R30,LOW(48)
                 _0x3A0:
0005dd 93e0 01ff 	STS  _tis,R30
                 ; 0000 00EE                 if (str[3]=='-') sot='-';
0005df 85ae      	LDD  R26,Y+14
0005e0 32ad      	CPI  R26,LOW(0x2D)
0005e1 f411      	BRNE _0xEB
0005e2 e2ed      	LDI  R30,LOW(45)
0005e3 c007      	RJMP _0x3A1
                 ; 0000 00EF                 else if (str[3]==0)sot=0;
                 _0xEB:
0005e4 85ee      	LDD  R30,Y+14
0005e5 30e0      	CPI  R30,0
0005e6 f411      	BRNE _0xED
0005e7 e0e0      	LDI  R30,LOW(0)
0005e8 c002      	RJMP _0x3A1
                 ; 0000 00F0                 else sot=str[3]-0x30;
                 _0xED:
0005e9 85ee      	LDD  R30,Y+14
0005ea 53e0      	SUBI R30,LOW(48)
                 _0x3A1:
0005eb 93e0 01fe 	STS  _sot,R30
                 ; 0000 00F1                 des=str[5]-0x30;
0005ed 89e8      	LDD  R30,Y+16
0005ee 53e0      	SUBI R30,LOW(48)
0005ef 93e0 01fd 	STS  _des,R30
                 ; 0000 00F2                 ed=str[6]-0x30;
0005f1 89e9      	LDD  R30,Y+17
0005f2 940e 18b3 	CALL SUBOPT_0x1C
                 ; 0000 00F3                 if (tis==0)tis=' ';
0005f4 f419      	BRNE _0xEF
0005f5 e2e0      	LDI  R30,LOW(32)
0005f6 93e0 01ff 	STS  _tis,R30
                 ; 0000 00F4  	        }
                 _0xEF:
                 ; 0000 00F5  	if (point==4)
                 _0xE6:
0005f8 91a0 01fa 	LDS  R26,_point
0005fa 30a4      	CPI  R26,LOW(0x4)
0005fb f521      	BRNE _0xF0
                 ; 0000 00F6  	        {
                 ; 0000 00F7                 if (str[3]=='-') tis='-';
0005fc 85ae      	LDD  R26,Y+14
0005fd 32ad      	CPI  R26,LOW(0x2D)
0005fe f411      	BRNE _0xF1
0005ff e2ed      	LDI  R30,LOW(45)
000600 c007      	RJMP _0x3A2
                 ; 0000 00F8                 else if (str[3]==0)tis=0;
                 _0xF1:
000601 85ee      	LDD  R30,Y+14
000602 30e0      	CPI  R30,0
000603 f411      	BRNE _0xF3
000604 e0e0      	LDI  R30,LOW(0)
000605 c002      	RJMP _0x3A2
                 ; 0000 00F9                 else tis=str[3]-0x30;
                 _0xF3:
000606 85ee      	LDD  R30,Y+14
000607 53e0      	SUBI R30,LOW(48)
                 _0x3A2:
000608 93e0 01ff 	STS  _tis,R30
                 ; 0000 00FA                 if (str[5]=='-') sot='-';
00060a 89a8      	LDD  R26,Y+16
00060b 32ad      	CPI  R26,LOW(0x2D)
00060c f411      	BRNE _0xF5
00060d e2ed      	LDI  R30,LOW(45)
00060e c007      	RJMP _0x3A3
                 ; 0000 00FB                 else if (str[5]==0)sot=0;
                 _0xF5:
00060f 89e8      	LDD  R30,Y+16
000610 30e0      	CPI  R30,0
000611 f411      	BRNE _0xF7
000612 e0e0      	LDI  R30,LOW(0)
000613 c002      	RJMP _0x3A3
                 ; 0000 00FC                 else sot=str[5]-0x30;
                 _0xF7:
000614 89e8      	LDD  R30,Y+16
000615 53e0      	SUBI R30,LOW(48)
                 _0x3A3:
000616 93e0 01fe 	STS  _sot,R30
                 ; 0000 00FD                 des=str[6]-0x30;
000618 89e9      	LDD  R30,Y+17
000619 53e0      	SUBI R30,LOW(48)
00061a 93e0 01fd 	STS  _des,R30
                 ; 0000 00FE                 ed=str[7]-0x30;
00061c 89ea      	LDD  R30,Y+18
00061d 53e0      	SUBI R30,LOW(48)
00061e 93e0 01fc 	STS  _ed,R30
                 ; 0000 00FF  	        }
                 ; 0000 0100  	}
                 _0xF0:
000620 8119      	LDD  R17,Y+1
000621 8108      	LDD  R16,Y+0
000622 9668      	ADIW R28,24
000623 9508      	RET
                 ;//-------------------------------------------------------------------//
                 ;// чтение из АЦП
                 ;void find_save_reg(unsigned int a,float b);
                 ;float find_reg(unsigned int a);
                 ;void response_m_err(char a);                     //
                 ;//-------------------------------------------------------------------//
                 ;int read_adc()
                 ; 0000 0108         {
                 _read_adc:
                 ; 0000 0109         int a;
                 ; 0000 010A         cs=0;
000624 931a      	ST   -Y,R17
000625 930a      	ST   -Y,R16
                 ;	a -> R16,R17
000626 98c4      	CBI  0x18,4
                 ; 0000 010B         SPCR=0b01010001;
000627 e5e1      	LDI  R30,LOW(81)
000628 b9ed      	OUT  0xD,R30
                 ; 0000 010C         i=reg[0][A_12];
000629 940e 18c1 	CALL SUBOPT_0x1E
                 ; 0000 010D         switch (i)
                 ; 0000 010E                 {
                 ; 0000 010F                 case 0: SPDR=0b10110001;break;//4-20mA 20=4.4   =3606 k=20/3606 AIN0
00062b f051      	BREQ _0x3A4
                 ; 0000 0110                 case 1: SPDR=0b10111001;break;//0-5mA   5=4.4   =3606 k= 5/3606 AIN1
00062c 30e1      	CPI  R30,LOW(0x1)
00062d f411      	BRNE _0xFF
00062e ebe9      	LDI  R30,LOW(185)
00062f c007      	RJMP _0x3A5
                 ; 0000 0111                 case 2: SPDR=0b10110001;break;//0-20mA 20=4.4   =3606 k=20/3606 AIN0
                 _0xFF:
000630 30e2      	CPI  R30,LOW(0x2)
000631 f021      	BREQ _0x3A4
                 ; 0000 0112                 case 3: SPDR=0b10111001;break;//0-10V  10=4.506 =3606 k=10/3691 AIN1
000632 30e3      	CPI  R30,LOW(0x3)
000633 f411      	BRNE _0x102
000634 ebe9      	LDI  R30,LOW(185)
000635 c001      	RJMP _0x3A5
                 ; 0000 0113                 default:SPDR=0b10110001;break;//0-5V    5=4.506 =3606 k= 5/3691 AIN0
                 _0x102:
                 _0x3A4:
000636 ebe1      	LDI  R30,LOW(177)
                 _0x3A5:
000637 b9ef      	OUT  0xF,R30
                 ; 0000 0114                 }
                 ; 0000 0115         while(SPSR.7==0);
                 _0x103:
000638 9b77      	SBIS 0xE,7
000639 cffe      	RJMP _0x103
                 ; 0000 0116         a=SPDR;
00063a b10f      	IN   R16,15
00063b 2711      	CLR  R17
                 ; 0000 0117         SPDR=0;
00063c e0e0      	LDI  R30,LOW(0)
00063d b9ef      	OUT  0xF,R30
                 ; 0000 0118         a=a<<8;
00063e 2f10      	MOV  R17,R16
00063f 2700      	CLR  R16
                 ; 0000 0119         while (SPSR.7 == 0);
                 _0x106:
000640 9b77      	SBIS 0xE,7
000641 cffe      	RJMP _0x106
                 ; 0000 011A         a = a + SPDR;
000642 b1ef      	IN   R30,0xF
000643 e0f0      	LDI  R31,0
                +
000644 0f0e     +ADD R16 , R30
000645 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 011B         cs=1;
000646 9ac4      	SBI  0x18,4
                 ; 0000 011C         return a;
000647 01f8      	MOVW R30,R16
000648 9109      	LD   R16,Y+
000649 9119      	LD   R17,Y+
00064a 9508      	RET
                 ; 0000 011D         }
                 ;//-------------------------------------------------------------------//
                 ;unsigned int buf[9],buf_m[9];
                 ;char buf_begin,buf_end,buf_n[9];
                 ;float x,adc_filter;
                 ;char j,k,count_register,count_key2;
                 ;long start_time,start_time_mode,time_key;
                 ;
                 ;#include <function.h>
                 _rekey:
00064b 91a0 0220 	LDS  R26,_count_key2
00064d 31a5      	CPI  R26,LOW(0x15)
00064e f040      	BRLO _0x10B
00064f 940e 18ce 	CALL SUBOPT_0x1F
000651 36a8      	CPI  R26,LOW(0x68)
000652 f018      	BRLO _0x10C
000653 e6e6      	LDI  R30,LOW(102)
000654 93e0 0202 	STS  _count_key1,R30
                 _0x10C:
000656 c046      	RJMP _0x10D
                 _0x10B:
000657 91a0 0202 	LDS  R26,_count_key1
000659 36a5      	CPI  R26,LOW(0x65)
00065a f068      	BRLO _0x10E
00065b 940e 18ce 	CALL SUBOPT_0x1F
00065d 36ab      	CPI  R26,LOW(0x6B)
00065e f040      	BRLO _0x10F
00065f e6e6      	LDI  R30,LOW(102)
000660 93e0 0202 	STS  _count_key1,R30
000662 91e0 0220 	LDS  R30,_count_key2
000664 5fef      	SUBI R30,-LOW(1)
000665 93e0 0220 	STS  _count_key2,R30
                 _0x10F:
000667 c035      	RJMP _0x110
                 _0x10E:
000668 91a0 0229 	LDS  R26,_time_key
00066a 91b0 022a 	LDS  R27,_time_key+1
00066c 9180 022b 	LDS  R24,_time_key+2
00066e 9190 022c 	LDS  R25,_time_key+3
000670 940e 18d4 	CALL SUBOPT_0x20
                +
000672 33e3     +CPI R30 , LOW ( 0x33 )
000673 e0a0     +LDI R26 , HIGH ( 0x33 )
000674 07fa     +CPC R31 , R26
000675 e0a0     +LDI R26 , BYTE3 ( 0x33 )
000676 076a     +CPC R22 , R26
000677 e0a0     +LDI R26 , BYTE4 ( 0x33 )
000678 077a     +CPC R23 , R26
                 	__CPD1N 0x33
000679 f024      	BRLT _0x112
00067a 91a0 0201 	LDS  R26,_count_key
00067c 30a1      	CPI  R26,LOW(0x1)
00067d f408      	BRSH _0x113
                 _0x112:
00067e c01e      	RJMP _0x111
                 _0x113:
00067f 940e 1827 	CALL SUBOPT_0x3
000681 93e0 0229 	STS  _time_key,R30
000683 93f0 022a 	STS  _time_key+1,R31
000685 9360 022b 	STS  _time_key+2,R22
000687 9370 022c 	STS  _time_key+3,R23
000689 91a0 0201 	LDS  R26,_count_key
00068b 50a1      	SUBI R26,LOW(1)
00068c 93a0 0201 	STS  _count_key,R26
00068e 31a4      	CPI  R26,LOW(0x14)
00068f f468      	BRSH _0x114
000690 e2e8      	LDI  R30,LOW(40)
000691 93e0 0201 	STS  _count_key,R30
000693 940e 18ce 	CALL SUBOPT_0x1F
000695 30a5      	CPI  R26,LOW(0x5)
000696 f030      	BRLO _0x115
000697 e6e6      	LDI  R30,LOW(102)
000698 93e0 0202 	STS  _count_key1,R30
00069a efea      	LDI  R30,LOW(250)
00069b 93e0 0201 	STS  _count_key,R30
                 _0x115:
                 _0x114:
                 _0x111:
                 _0x110:
                 _0x10D:
00069d 9508      	RET
                 ;
                 ;float izm()
                 ; 0000 0128         {
                 _izm:
                 ; 0000 0129         char min_r,min_n;
                 ; 0000 012A         signed char rang[9];
                 ; 0000 012B         float k_f;
                 ; 0000 012C         //-------------------------------------------------------------------//
                 ; 0000 012D         //измерение
                 ; 0000 012E         //-------------------------------------------------------------------//
                 ; 0000 012F         if (++buf_end>8) buf_end=0;
00069e 972d      	SBIW R28,13
00069f 931a      	ST   -Y,R17
0006a0 930a      	ST   -Y,R16
                 ;	min_r -> R17
                 ;	min_n -> R16
                 ;	rang -> Y+6
                 ;	k_f -> Y+2
0006a1 91a0 0215 	LDS  R26,_buf_end
0006a3 5faf      	SUBI R26,-LOW(1)
0006a4 93a0 0215 	STS  _buf_end,R26
0006a6 30a9      	CPI  R26,LOW(0x9)
0006a7 f018      	BRLO _0x116
0006a8 e0e0      	LDI  R30,LOW(0)
0006a9 93e0 0215 	STS  _buf_end,R30
                 ; 0000 0130         buf[buf_end]=read_adc();
                 _0x116:
0006ab 940e 18d8 	CALL SUBOPT_0x21
0006ad 0fea      	ADD  R30,R26
0006ae 1ffb      	ADC  R31,R27
0006af 93ff      	PUSH R31
0006b0 93ef      	PUSH R30
0006b1 df72      	RCALL _read_adc
0006b2 91af      	POP  R26
0006b3 91bf      	POP  R27
0006b4 93ed      	ST   X+,R30
0006b5 93fc      	ST   X,R31
                 ; 0000 0131         min_r=9;
0006b6 e019      	LDI  R17,LOW(9)
                 ; 0000 0132         //-------------------------------------------------------------------//
                 ; 0000 0133         //-------------------------------------------------------------------//
                 ; 0000 0134         //модальный фильтр *- нижепреведенный код не делает ничего, кроме выборки наименьшего значения из последних 9ти измерений*
                 ; 0000 0135         //-------------------------------------------------------------------//
                 ; 0000 0136         for (j=0;j<9;j++)
0006b7 e0e0      	LDI  R30,LOW(0)
0006b8 93e0 021e 	STS  _j,R30
                 _0x118:
0006ba 91a0 021e 	LDS  R26,_j
0006bc 30a9      	CPI  R26,LOW(0x9)
0006bd f010      	BRLO PC+3
0006be 940c 06fc 	JMP _0x119
                 ; 0000 0137                 {
                 ; 0000 0138                 rang[j]=0;
0006c0 940e 18e0 	CALL SUBOPT_0x22
0006c2 e0e0      	LDI  R30,LOW(0)
0006c3 93ec      	ST   X,R30
                 ; 0000 0139                 for (i=0;i<9;i++)
0006c4 93e0 0200 	STS  _i,R30
                 _0x11B:
0006c6 91a0 0200 	LDS  R26,_i
0006c8 30a9      	CPI  R26,LOW(0x9)
0006c9 f4d8      	BRSH _0x11C
                 ; 0000 013A                         {
                 ; 0000 013B                         if (i!=j)
0006ca 91e0 021e 	LDS  R30,_j
0006cc 17ea      	CP   R30,R26
0006cd f0a1      	BREQ _0x11D
                 ; 0000 013C                                 {
                 ; 0000 013D                                 if (buf[j]<buf[i]) rang[j]--;
0006ce 940e 18e8 	CALL SUBOPT_0x23
0006d0 160e      	CP   R0,R30
0006d1 061f      	CPC  R1,R31
0006d2 f428      	BRSH _0x11E
0006d3 940e 18e0 	CALL SUBOPT_0x22
0006d5 91ec      	LD   R30,X
0006d6 50e1      	SUBI R30,LOW(1)
0006d7 93ec      	ST   X,R30
                 ; 0000 013E                                 if (buf[j]>buf[i]) rang[j]++;
                 _0x11E:
0006d8 940e 18e8 	CALL SUBOPT_0x23
0006da 15e0      	CP   R30,R0
0006db 05f1      	CPC  R31,R1
0006dc f428      	BRSH _0x11F
0006dd 940e 18e0 	CALL SUBOPT_0x22
0006df 91ec      	LD   R30,X
0006e0 5fef      	SUBI R30,-LOW(1)
0006e1 93ec      	ST   X,R30
                 ; 0000 013F                                 }
                 _0x11F:
                 ; 0000 0140                         }
                 _0x11D:
0006e2 940e 18ff 	CALL SUBOPT_0x24
0006e4 cfe1      	RJMP _0x11B
                 _0x11C:
                 ; 0000 0141                 if (cabs(rang[j])<min_r)
0006e5 940e 18e0 	CALL SUBOPT_0x22
0006e7 91ec      	LD   R30,X
0006e8 93ea      	ST   -Y,R30
0006e9 940e 16f3 	CALL _cabs
0006eb 17e1      	CP   R30,R17
0006ec f448      	BRSH _0x120
                 ; 0000 0142                         {
                 ; 0000 0143                         min_r=cabs(rang[j]);
0006ed 940e 18e0 	CALL SUBOPT_0x22
0006ef 91ec      	LD   R30,X
0006f0 93ea      	ST   -Y,R30
0006f1 940e 16f3 	CALL _cabs
0006f3 2f1e      	MOV  R17,R30
                 ; 0000 0144                         min_n=j;
0006f4 9100 021e 	LDS  R16,_j
                 ; 0000 0145                         }
                 ; 0000 0146                 }
                 _0x120:
0006f6 91e0 021e 	LDS  R30,_j
0006f8 5fef      	SUBI R30,-LOW(1)
0006f9 93e0 021e 	STS  _j,R30
0006fb cfbe      	RJMP _0x118
                 _0x119:
                 ; 0000 0147         //-------------------------------------------------------------------//
                 ; 0000 0148         //ФНЧ *- есть некоторые сомнения, что это можно назвать фильтром низких частот, тупо усредняем значение измерения ацп в единицу времени усреднения*
                 ; 0000 0149         //-------------------------------------------------------------------//
                 ; 0000 014A         k_f=reg[0][A_10];
                +
0006fc e4a0     +LDI R26 , LOW ( _reg + 64 )
0006fd e0b0     +LDI R27 , HIGH ( _reg + 64 )
                 	__POINTW2MN _reg,64
0006fe 940e 1ce6 	CALL __EEPROMRDD
000700 940e 1905 	CALL SUBOPT_0x25
                 ; 0000 014B         if (k_f==0) k_f=0.001;
000702 940e 190a 	CALL SUBOPT_0x26
000704 940e 1ec2 	CALL __CPD10
000706 f431      	BRNE _0x121
                +
000707 e6ef     +LDI R30 , LOW ( 0x3A83126F )
000708 e1f2     +LDI R31 , HIGH ( 0x3A83126F )
000709 e863     +LDI R22 , BYTE3 ( 0x3A83126F )
00070a e37a     +LDI R23 , BYTE4 ( 0x3A83126F )
                 	__GETD1N 0x3A83126F
00070b 940e 1905 	CALL SUBOPT_0x25
                 ; 0000 014C         k_f=0.001/k_f;
                 _0x121:
00070d 940e 190a 	CALL SUBOPT_0x26
                +
00070f e6af     +LDI R26 , LOW ( 0x3A83126F )
000710 e1b2     +LDI R27 , HIGH ( 0x3A83126F )
000711 e883     +LDI R24 , BYTE3 ( 0x3A83126F )
000712 e39a     +LDI R25 , BYTE4 ( 0x3A83126F )
                 	__GETD2N 0x3A83126F
000713 940e 1e5d 	CALL __DIVF21
000715 940e 1905 	CALL SUBOPT_0x25
                 ; 0000 014D         adc_filter=k_f*buf[min_n]+(1-k_f)*adc_filter;
000717 2fe0      	MOV  R30,R16
000718 e0a3      	LDI  R26,LOW(_buf)
000719 e0b2      	LDI  R27,HIGH(_buf)
00071a e0f0      	LDI  R31,0
00071b 0fee      	LSL  R30
00071c 1fff      	ROL  R31
00071d 940e 190f 	CALL SUBOPT_0x27
00071f 940e 1914 	CALL SUBOPT_0x28
000721 940e 1919 	CALL SUBOPT_0x29
000723 940e 1e0f 	CALL __MULF12
000725 937f      	PUSH R23
000726 936f      	PUSH R22
000727 93ff      	PUSH R31
000728 93ef      	PUSH R30
000729 940e 1914 	CALL SUBOPT_0x28
00072b 940e 191e 	CALL SUBOPT_0x2A
00072d 940e 1dba 	CALL __SUBF12
00072f 91a0 021a 	LDS  R26,_adc_filter
000731 91b0 021b 	LDS  R27,_adc_filter+1
000733 9180 021c 	LDS  R24,_adc_filter+2
000735 9190 021d 	LDS  R25,_adc_filter+3
000737 940e 1e0f 	CALL __MULF12
000739 91af      	POP  R26
00073a 91bf      	POP  R27
00073b 918f      	POP  R24
00073c 919f      	POP  R25
00073d 940e 1dc1 	CALL __ADDF12
00073f 93e0 021a 	STS  _adc_filter,R30
000741 93f0 021b 	STS  _adc_filter+1,R31
000743 9360 021c 	STS  _adc_filter+2,R22
000745 9370 021d 	STS  _adc_filter+3,R23
                 ; 0000 014E         //-------------------------------------------------------------------//
                 ; 0000 014F         return adc_filter;
000747 8119      	LDD  R17,Y+1
000748 8108      	LDD  R16,Y+0
000749 962f      	ADIW R28,15
00074a 9508      	RET
                 ; 0000 0150         }
                 ;//-------------------------------------------------------------------//
                 ;char error;
                 ;//int crc;
                 ;float value[6],adc_value1,adc_value2,adc_value3;
                 ;bit blok1,blok2,signal;
                 ;void response_m_aa1();
                 ;void response_m_aa46();
                 ;void response_m_aa48();
                 ;void check_add_cr();
                 ;
                 ;void check_rx();
                 ;void mov_buf_mod(char a);		//
                 ;void mov_buf(char a);			//
                 ;void crc_end();				//
                 ;void crc_rtu(char a);			//
                 ;
                 ;//////////////////////////////////////////////////////////////////////
                 ;//
                 ;//      Считывание данных из Flash
                 ;//      The registers R0, R1, R22, R23, R24, R25, R26, R27, R30 and R31 can be freely used in assembly routines.
                 ;/////////////////////////////////////////////////////////////////////////////
                 ;int read_program_memory (int adr)
                 ; 0000 0167 {
                 _read_program_memory:
                 ; 0000 0168        #asm
                 ;	adr -> Y+0
                 ; 0000 0169        LPM R22,Z+;//     загрузка в регистр R23 содержимого флеш по адресу Z с постинкрементом (мл. байт)
00074b 9165             LPM R22,Z+;//     загрузка в регистр R23 содержимого флеш по адресу Z с постинкрементом (мл. байт)
                 ; 0000 016A        LPM R23,Z; //     загрузка в регистр R22 содержимого Flash  по адресу Z+1 (старший байт)
00074c 9174             LPM R23,Z; //     загрузка в регистр R22 содержимого Flash  по адресу Z+1 (старший байт)
                 ; 0000 016B        MOV R30, R22;
00074d 2fe6             MOV R30, R22;
                 ; 0000 016C        MOV R31, R23;
00074e 2ff7             MOV R31, R23;
                 ; 0000 016D        #endasm
                 ; 0000 016E }
00074f 9622      	ADIW R28,2
000750 9508      	RET
                 ;
                 ;void sys_init()
                 ; 0000 0171 {
                 _sys_init:
                 ; 0000 0172 PORTA=0b11111111;DDRA=0b11111111;
000751 efef      	LDI  R30,LOW(255)
000752 bbeb      	OUT  0x1B,R30
000753 bbea      	OUT  0x1A,R30
                 ; 0000 0173 PORTB=0b00000000;DDRB=0b10110011;
000754 e0e0      	LDI  R30,LOW(0)
000755 bbe8      	OUT  0x18,R30
000756 ebe3      	LDI  R30,LOW(179)
000757 bbe7      	OUT  0x17,R30
                 ; 0000 0174 PORTC=0b11111011;DDRC=0b11111000;
000758 efeb      	LDI  R30,LOW(251)
000759 bbe5      	OUT  0x15,R30
00075a efe8      	LDI  R30,LOW(248)
00075b bbe4      	OUT  0x14,R30
                 ; 0000 0175 PORTD=0b11000011;DDRD=0b00111110;
00075c ece3      	LDI  R30,LOW(195)
00075d bbe2      	OUT  0x12,R30
00075e e3ee      	LDI  R30,LOW(62)
00075f bbe1      	OUT  0x11,R30
                 ; 0000 0176 //UBRRH=0x00;UBRRL=0x5f;UCSRB=0xD8;UCSRC=0x86;
                 ; 0000 0177 
                 ; 0000 0178 
                 ; 0000 0179 
                 ; 0000 017A TCCR0=0x03;TCNT0=TCNT0_reload;OCR0=0x00;
000760 e0e3      	LDI  R30,LOW(3)
000761 bfe3      	OUT  0x33,R30
000762 e6ef      	LDI  R30,LOW(111)
000763 bfe2      	OUT  0x32,R30
000764 e0e0      	LDI  R30,LOW(0)
000765 bfec      	OUT  0x3C,R30
                 ; 0000 017B 
                 ; 0000 017C ASSR=0x00;TCCR2=0x04;TCNT2=TCNT2_reload;OCR2=0x00;
000766 bde2      	OUT  0x22,R30
000767 e0e4      	LDI  R30,LOW(4)
000768 bde5      	OUT  0x25,R30
000769 e5ee      	LDI  R30,LOW(94)
00076a bde4      	OUT  0x24,R30
00076b e0e0      	LDI  R30,LOW(0)
00076c bde3      	OUT  0x23,R30
                 ; 0000 017D //ASSR=0x00;TCCR2=0x07;TCNT2=TCNT2_reload;OCR2=0x00;
                 ; 0000 017E MCUCR=0x00;MCUCSR=0x00;TIMSK=0xFF;
00076d bfe5      	OUT  0x35,R30
00076e bfe4      	OUT  0x34,R30
00076f efef      	LDI  R30,LOW(255)
000770 bfe9      	OUT  0x39,R30
                 ; 0000 017F 
                 ; 0000 0180 //UBRRH=0x00;UBRRL=0x67;UCSRB=0xD8;UCSRC=0x86;
                 ; 0000 0181 ACSR=0x80;SFIOR=0x00;SPCR=0x52;SPSR=0x00;WDTCR=0x1F;WDTCR=0x0F;
000771 e8e0      	LDI  R30,LOW(128)
000772 b9e8      	OUT  0x8,R30
000773 e0e0      	LDI  R30,LOW(0)
000774 bfe0      	OUT  0x30,R30
000775 e5e2      	LDI  R30,LOW(82)
000776 b9ed      	OUT  0xD,R30
000777 e0e0      	LDI  R30,LOW(0)
000778 b9ee      	OUT  0xE,R30
000779 e1ef      	LDI  R30,LOW(31)
00077a bde1      	OUT  0x21,R30
00077b e0ef      	LDI  R30,LOW(15)
00077c bde1      	OUT  0x21,R30
                 ; 0000 0182 mod_time_s=60;
00077d e3ec      	LDI  R30,LOW(60)
00077e 2e8e      	MOV  R8,R30
                 ; 0000 0183 }
00077f 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 0186 {
                 _main:
                 ; 0000 0187 bit flag_start_pause1,flag_start_pause2,f_m1,key_enter_press_switch1;
                 ; 0000 0188 float time_pause1,time_pause2/*,adc_value1*/;
                 ; 0000 0189 float data_register,adc_filter/*,adc_value2*/;
                 ; 0000 018A float k_k,kk,bb,dop1,dop2;
                 ; 0000 018B float gis_val1=reg[0][Y_01];         //значение с учетом гистерезиса
                 ; 0000 018C float gis_val2=reg[0][Y_02];
                 ; 0000 018D char q1,q2,q3,q4,diap_val1=0,diap_val2=0,dataH,dataL,crcok_flag=0;//diap_val1,2 - это диапазон на 1м и на 2м шаге
                 ; 0000 018E float temp;
                 ; 0000 018F int  imin, imax, data, j = 0, j1=0;
                 ; 0000 0190 crc = 0xffff;
000780 97ed      	SBIW R28,61
000781 e08f      	LDI  R24,15
000782 e0a0      	LDI  R26,LOW(0)
000783 e0b0      	LDI  R27,HIGH(0)
000784 e5e4      	LDI  R30,LOW(_0x122*2)
000785 e0f2      	LDI  R31,HIGH(_0x122*2)
000786 940e 1ed6 	CALL __INITLOCB
                 ;	flag_start_pause1 -> R15.0
                 ;	flag_start_pause2 -> R15.1
                 ;	f_m1 -> R15.2
                 ;	key_enter_press_switch1 -> R15.3
                 ;	time_pause1 -> Y+57
                 ;	time_pause2 -> Y+53
                 ;	data_register -> Y+49
                 ;	adc_filter -> Y+45
                 ;	k_k -> Y+41
                 ;	kk -> Y+37
                 ;	bb -> Y+33
                 ;	dop1 -> Y+29
                 ;	dop2 -> Y+25
                 ;	gis_val1 -> Y+21
                 ;	gis_val2 -> Y+17
                 ;	q1 -> R17
                 ;	q2 -> R16
                 ;	q3 -> R19
                 ;	q4 -> R18
                 ;	diap_val1 -> R21
                 ;	diap_val2 -> R20
                 ;	dataH -> Y+16
                 ;	dataL -> Y+15
                 ;	crcok_flag -> Y+14
                 ;	temp -> Y+10
                 ;	imin -> Y+8
                 ;	imax -> Y+6
                 ;	data -> Y+4
                 ;	j -> Y+2
                 ;	j1 -> Y+0
000788 940e 1923 	CALL SUBOPT_0x2B
                +
00078a 8bed     +STD Y + 21 , R30
00078b 8bfe     +STD Y + 21 + 1 , R31
00078c 8b6f     +STD Y + 21 + 2 , R22
00078d 8f78     +STD Y + 21 + 3 , R23
                 	__PUTD1S 21
00078e 940e 1928 	CALL SUBOPT_0x2C
                +
000790 8be9     +STD Y + 17 , R30
000791 8bfa     +STD Y + 17 + 1 , R31
000792 8b6b     +STD Y + 17 + 2 , R22
000793 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
000794 e050      	LDI  R21,0
000795 e040      	LDI  R20,0
000796 940e 192d 	CALL SUBOPT_0x2D
                 ; 0000 0191 //if(high==0)
                 ; 0000 0192 //{
                 ; 0000 0193           // imin=0;
                 ; 0000 0194          //  imax=PAGESIZE*APP_PAGES;
                 ; 0000 0195 //}
                 ; 0000 0196 //else
                 ; 0000 0197 //{
                 ; 0000 0198 //   imin=PAGESIZE*APP_PAGES;
                 ; 0000 0199 //   imax=PAGESIZE*PAGES;
                 ; 0000 019A //}
                 ; 0000 019B //            for(i=imin; i<imax;  i+=2)
                 ; 0000 019C //            {
                 ; 0000 019D //               data= read_program_memory (i,0);
                 ; 0000 019E //               crc^=LOBYTE(data);
                 ; 0000 019F //               crc^=HIBYTE(data);
                 ; 0000 01A0 //            }
                 ; 0000 01A1 //
                 ; 0000 01A2 // while(1)
                 ; 0000 01A3 //         {
                 ; 0000 01A4 //         DDRC=0xFF;
                 ; 0000 01A5 //         DDRA=0xFF;
                 ; 0000 01A6 //         anode1=1;
                 ; 0000 01A7 //         anode2=1;
                 ; 0000 01A8 //         anode3=1;
                 ; 0000 01A9 //         anode4=0;
                 ; 0000 01AA //         anode5=0;
                 ; 0000 01AB //         q1++;
                 ; 0000 01AC //         if (q1>9)q1=0;
                 ; 0000 01AD //         katode=255-led_calk(q1);
                 ; 0000 01AE //         delay_ms(500);
                 ; 0000 01AF //
                 ; 0000 01B0 //
                 ; 0000 01B1 //         }
                 ; 0000 01B2 //
                 ; 0000 01B3 // temp=2345;
                 ; 0000 01B4 // reg[0,0]=temp;
                 ; 0000 01B5 //
                 ; 0000 01B6 // reg[0,0]=1234;
                 ; 0000 01B7 // temp=reg[0,0];
                 ; 0000 01B8 //
                 ; 0000 01B9 // q1=(*((unsigned char *)(&temp)+0));
                 ; 0000 01BA // q2=(*((unsigned char *)(&temp)+1));
                 ; 0000 01BB // q3=(*((unsigned char *)(&temp)+2));
                 ; 0000 01BC // q4=(*((unsigned char *)(&temp)+3));
                 ; 0000 01BD //
                 ; 0000 01BE //
                 ; 0000 01BF // q1=0;
                 ; 0000 01C0 // q2=1;
                 ; 0000 01C1 // q3=2;
                 ; 0000 01C2 // q4=0x44;
                 ; 0000 01C3 //
                 ; 0000 01C4 //
                 ; 0000 01C5 // *((unsigned char *)(&temp)+0)=q1;
                 ; 0000 01C6 // *((unsigned char *)(&temp)+1)=q2;
                 ; 0000 01C7 // *((unsigned char *)(&temp)+2)=q3;
                 ; 0000 01C8 // *((unsigned char *)(&temp)+3)=q4;
                 ; 0000 01C9 //
                 ; 0000 01CA // reg[0,0]=temp;
                 ; 0000 01CB // reg[0,0]=temp;
                 ; 0000 01CC // reg[0,0]=temp;
                 ; 0000 01CD //
                 ; 0000 01CE 
                 ; 0000 01CF point=ee_point;
000798 940e 1934 	CALL SUBOPT_0x2E
                 ; 0000 01D0 
                 ; 0000 01D1 sys_init();
00079a dfb6      	RCALL _sys_init
                 ; 0000 01D2 #asm("cli");
00079b 94f8      	cli
                 ; 0000 01D3 
                 ; 0000 01D4 
                 ; 0000 01D5 //goto a1;//test
                 ; 0000 01D6 //goto a2;//test
                 ; 0000 01D7 
                 ; 0000 01D8 //-------------------------------------------------------------------//
                 ; 0000 01D9 //Ожидание включения питания
                 ; 0000 01DA //-------------------------------------------------------------------//
                 ; 0000 01DB 
                 ; 0000 01DC while ((data<=65534)|(j<=16382))
                 _0x123:
00079c 81ac      	LDD  R26,Y+4
00079d 81bd      	LDD  R27,Y+4+1
00079e efee      	LDI  R30,LOW(65534)
00079f efff      	LDI  R31,HIGH(65534)
0007a0 940e 1cbc 	CALL __LEW12U
0007a2 2e0e      	MOV  R0,R30
0007a3 81aa      	LDD  R26,Y+2
0007a4 81bb      	LDD  R27,Y+2+1
0007a5 efee      	LDI  R30,LOW(16382)
0007a6 e3ff      	LDI  R31,HIGH(16382)
0007a7 940e 1cb6 	CALL __LEW12
0007a9 29e0      	OR   R30,R0
0007aa f0c1      	BREQ _0x125
                 ; 0000 01DD {
                 ; 0000 01DE     data= read_program_memory (j);
0007ab 81ea      	LDD  R30,Y+2
0007ac 81fb      	LDD  R31,Y+2+1
0007ad 93fa      	ST   -Y,R31
0007ae 93ea      	ST   -Y,R30
0007af df9b      	RCALL _read_program_memory
0007b0 83ec      	STD  Y+4,R30
0007b1 83fd      	STD  Y+4+1,R31
                 ; 0000 01DF     dataH = (int)data>>8;
0007b2 940e 1ca1 	CALL __ASRW8
0007b4 8be8      	STD  Y+16,R30
                 ; 0000 01E0     dataL = data;
0007b5 81ec      	LDD  R30,Y+4
0007b6 87ef      	STD  Y+15,R30
                 ; 0000 01E1     CRC_update(dataH);
0007b7 89e8      	LDD  R30,Y+16
0007b8 93ea      	ST   -Y,R30
0007b9 dd1e      	RCALL _CRC_update
                 ; 0000 01E2     CRC_update(dataL);
0007ba 85ef      	LDD  R30,Y+15
0007bb 93ea      	ST   -Y,R30
0007bc dd1b      	RCALL _CRC_update
                 ; 0000 01E3     //crc_rtu(data);
                 ; 0000 01E4     //j++;
                 ; 0000 01E5     j=j+2;
0007bd 81ea      	LDD  R30,Y+2
0007be 81fb      	LDD  R31,Y+2+1
0007bf 9632      	ADIW R30,2
0007c0 83ea      	STD  Y+2,R30
0007c1 83fb      	STD  Y+2+1,R31
                 ; 0000 01E6 }
0007c2 cfd9      	RJMP _0x123
                 _0x125:
                 ; 0000 01E7 crceep = crc;
0007c3 940e 189d 	CALL SUBOPT_0x18
0007c5 eba1      	LDI  R26,LOW(_crceep)
0007c6 e0b1      	LDI  R27,HIGH(_crceep)
0007c7 940e 1d02 	CALL __EEPROMWRW
                 ; 0000 01E8 i=0;
0007c9 e0e0      	LDI  R30,LOW(0)
0007ca 93e0 0200 	STS  _i,R30
                 ; 0000 01E9 #asm("sei")
0007cc 9478      	sei
                 ; 0000 01EA start_time=sys_time;count_register=1;
0007cd 940e 193b 	CALL SUBOPT_0x2F
                 ; 0000 01EB power = 1;
0007cf 9a93      	SBI  0x12,3
                 ; 0000 01EC for(j1=0;j1<2;j1++)
0007d0 e0e0      	LDI  R30,0
0007d1 83e8      	STD  Y+0,R30
0007d2 83e9      	STD  Y+0+1,R30
                 _0x129:
0007d3 81a8      	LD   R26,Y
0007d4 81b9      	LDD  R27,Y+1
0007d5 9712      	SBIW R26,2
0007d6 f014      	BRLT PC+3
0007d7 940c 0848 	JMP _0x12A
                 ; 0000 01ED {
                 ; 0000 01EE tis='v';sot=1;des= 0 ;ed=1;
0007d9 940e 1948 	CALL SUBOPT_0x30
                 ; 0000 01EF set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
0007db 940e 1955 	CALL SUBOPT_0x31
0007dd 940e 1962 	CALL SUBOPT_0x32
0007df 940e 1965 	CALL SUBOPT_0x33
                 ; 0000 01F0 set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
                 ; 0000 01F1 delay_ms(1500);
                 ; 0000 01F2 tis=1;sot=0;des= 0 ;ed=0;
0007e1 e0e1      	LDI  R30,LOW(1)
0007e2 93e0 01ff 	STS  _tis,R30
0007e4 e0e0      	LDI  R30,LOW(0)
0007e5 940e 1983 	CALL SUBOPT_0x34
0007e7 e0e0      	LDI  R30,LOW(0)
0007e8 940e 1989 	CALL SUBOPT_0x35
                 ; 0000 01F3 set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
0007ea 940e 1962 	CALL SUBOPT_0x32
0007ec 940e 1965 	CALL SUBOPT_0x33
                 ; 0000 01F4 set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
                 ; 0000 01F5 delay_ms(1500);
                 ; 0000 01F6 tis='c';sot='r';des= 'c' ;ed=' ';
0007ee e6e3      	LDI  R30,LOW(99)
0007ef 93e0 01ff 	STS  _tis,R30
0007f1 e7e2      	LDI  R30,LOW(114)
0007f2 93e0 01fe 	STS  _sot,R30
0007f4 e6e3      	LDI  R30,LOW(99)
0007f5 93e0 01fd 	STS  _des,R30
0007f7 e2e0      	LDI  R30,LOW(32)
0007f8 940e 1989 	CALL SUBOPT_0x35
                 ; 0000 01F7 set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
0007fa 940e 1962 	CALL SUBOPT_0x32
0007fc 940e 1965 	CALL SUBOPT_0x33
                 ; 0000 01F8 set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
                 ; 0000 01F9 delay_ms(1500);
                 ; 0000 01FA tis=3;sot='c';des= 2 ;ed=1;
0007fe e0e3      	LDI  R30,LOW(3)
0007ff 93e0 01ff 	STS  _tis,R30
000801 e6e3      	LDI  R30,LOW(99)
000802 940e 198c 	CALL SUBOPT_0x36
000804 e0e1      	LDI  R30,LOW(1)
000805 940e 1989 	CALL SUBOPT_0x35
                 ; 0000 01FB set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
000807 940e 1962 	CALL SUBOPT_0x32
000809 940e 1965 	CALL SUBOPT_0x33
                 ; 0000 01FC set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
                 ; 0000 01FD delay_ms(1500);
                 ; 0000 01FE tis=' ';sot=' ';des= ' ' ;ed = ' ';
00080b e2e0      	LDI  R30,LOW(32)
00080c 93e0 01ff 	STS  _tis,R30
00080e 940e 1992 	CALL SUBOPT_0x37
000810 940e 1989 	CALL SUBOPT_0x35
                 ; 0000 01FF set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
000812 940e 1962 	CALL SUBOPT_0x32
000814 dca7      	RCALL _set_digit_off
                 ; 0000 0200 if(crceep == crcstatic)
000815 eba1      	LDI  R26,LOW(_crceep)
000816 e0b1      	LDI  R27,HIGH(_crceep)
000817 940e 1cea 	CALL __EEPROMRDW
000819 010f      	MOVW R0,R30
00081a eba3      	LDI  R26,LOW(_crcstatic)
00081b e0b1      	LDI  R27,HIGH(_crcstatic)
00081c 940e 1cea 	CALL __EEPROMRDW
00081e 15e0      	CP   R30,R0
00081f 05f1      	CPC  R31,R1
000820 f451      	BRNE _0x12B
                 ; 0000 0201     {
                 ; 0000 0202     tis=0;
000821 e0e0      	LDI  R30,LOW(0)
000822 93e0 01ff 	STS  _tis,R30
                 ; 0000 0203     sot='k';
000824 e6eb      	LDI  R30,LOW(107)
000825 940e 1992 	CALL SUBOPT_0x37
                 ; 0000 0204     des=' ';
                 ; 0000 0205     ed = ' ';
000827 93e0 01fc 	STS  _ed,R30
                 ; 0000 0206     crcok_flag=1;
000829 e0e1      	LDI  R30,LOW(1)
00082a c00d      	RJMP _0x3A6
                 ; 0000 0207     }
                 ; 0000 0208 else
                 _0x12B:
                 ; 0000 0209     {
                 ; 0000 020A     tis='f';sot='a';des= 'i' ;ed = 'l';
00082b e6e6      	LDI  R30,LOW(102)
00082c 93e0 01ff 	STS  _tis,R30
00082e e6e1      	LDI  R30,LOW(97)
00082f 93e0 01fe 	STS  _sot,R30
000831 e6e9      	LDI  R30,LOW(105)
000832 93e0 01fd 	STS  _des,R30
000834 e6ec      	LDI  R30,LOW(108)
000835 93e0 01fc 	STS  _ed,R30
                 ; 0000 020B     crcok_flag = 0;
000837 e0e0      	LDI  R30,LOW(0)
                 _0x3A6:
000838 87ee      	STD  Y+14,R30
                 ; 0000 020C     }
                 ; 0000 020D set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
000839 940e 1955 	CALL SUBOPT_0x31
00083b 940e 1962 	CALL SUBOPT_0x32
00083d dc7e      	RCALL _set_digit_off
                 ; 0000 020E delay_ms(1500);
00083e edec      	LDI  R30,LOW(1500)
00083f e0f5      	LDI  R31,HIGH(1500)
000840 940e 1998 	CALL SUBOPT_0x38
                 ; 0000 020F 
                 ; 0000 0210 }
000842 81e8      	LD   R30,Y
000843 81f9      	LDD  R31,Y+1
000844 9631      	ADIW R30,1
000845 83e8      	ST   Y,R30
000846 83f9      	STD  Y+1,R31
000847 cf8b      	RJMP _0x129
                 _0x12A:
                 ; 0000 0211 power_off:
                 _0x12D:
                 ; 0000 0212 sys_init();
000848 df08      	RCALL _sys_init
                 ; 0000 0213 start_time =0;
000849 940e 199c 	CALL SUBOPT_0x39
00084b 940e 19a1 	CALL SUBOPT_0x3A
                 ; 0000 0214 #asm ("cli")
00084d 94f8      	cli
                 ; 0000 0215 power = 0;
00084e 9893      	CBI  0x12,3
                 ; 0000 0216 if(crcok_flag==1)
00084f 85ae      	LDD  R26,Y+14
000850 30a1      	CPI  R26,LOW(0x1)
000851 f011      	BREQ PC+3
000852 940c 12bc 	JMP _0x130
                 ; 0000 0217 {
                 ; 0000 0218 while ((key_1==0)&&(key_2==0)&&(key_3==0)&&(key_4==0));
                 _0x131:
000854 e0a0      	LDI  R26,0
000855 9998      	SBIC 0x13,0
000856 e0a1      	LDI  R26,1
000857 30a0      	CPI  R26,LOW(0x0)
000858 f479      	BRNE _0x134
000859 e0a0      	LDI  R26,0
00085a 9999      	SBIC 0x13,1
00085b e0a1      	LDI  R26,1
00085c 30a0      	CPI  R26,LOW(0x0)
00085d f451      	BRNE _0x134
00085e e0a0      	LDI  R26,0
00085f 9986      	SBIC 0x10,6
000860 e0a1      	LDI  R26,1
000861 30a0      	CPI  R26,LOW(0x0)
000862 f429      	BRNE _0x134
000863 e0a0      	LDI  R26,0
000864 9987      	SBIC 0x10,7
000865 e0a1      	LDI  R26,1
000866 30a0      	CPI  R26,LOW(0x0)
000867 f009      	BREQ _0x135
                 _0x134:
000868 c001      	RJMP _0x133
                 _0x135:
000869 cfea      	RJMP _0x131
                 _0x133:
                 ; 0000 0219 while (i<100)
                 _0x136:
00086a 91a0 0200 	LDS  R26,_i
00086c 36a4      	CPI  R26,LOW(0x64)
00086d f4e8      	BRSH _0x138
                 ; 0000 021A         {
                 ; 0000 021B         if ((key_1==0)&&(key_4==0)&&(key_2==1)&&(key_3==1)) i++;
00086e e0a0      	LDI  R26,0
00086f 9998      	SBIC 0x13,0
000870 e0a1      	LDI  R26,1
000871 30a0      	CPI  R26,LOW(0x0)
000872 f459      	BRNE _0x13A
000873 e0a0      	LDI  R26,0
000874 9987      	SBIC 0x10,7
000875 e0a1      	LDI  R26,1
000876 30a0      	CPI  R26,LOW(0x0)
000877 f431      	BRNE _0x13A
000878 940e 183b 	CALL SUBOPT_0x6
00087a f419      	BRNE _0x13A
00087b 940e 1840 	CALL SUBOPT_0x7
00087d f009      	BREQ _0x13B
                 _0x13A:
00087e c004      	RJMP _0x139
                 _0x13B:
00087f 91e0 0200 	LDS  R30,_i
000881 5fef      	SUBI R30,-LOW(1)
000882 c001      	RJMP _0x3A7
                 ; 0000 021C         else i=0;
                 _0x139:
000883 e0e0      	LDI  R30,LOW(0)
                 _0x3A7:
000884 93e0 0200 	STS  _i,R30
                 ; 0000 021D         delay_ms(20);
000886 e1e4      	LDI  R30,LOW(20)
000887 e0f0      	LDI  R31,HIGH(20)
000888 940e 1998 	CALL SUBOPT_0x38
                 ; 0000 021E         }
00088a cfdf      	RJMP _0x136
                 _0x138:
                 ; 0000 021F //-------------------------------------------------------------------//
                 ; 0000 0220 
                 ; 0000 0221 power=1;
00088b 9a93      	SBI  0x12,3
                 ; 0000 0222 data_register=reg[0][A_07];
00088c 940e 19aa 	CALL SUBOPT_0x3B
00088e 940e 19af 	CALL SUBOPT_0x3C
                 ; 0000 0223 if (data_register<0)
000890 a9ac      	LDD  R26,Y+52
000891 23aa      	TST  R26
000892 f49a      	BRPL _0x13F
                 ; 0000 0224         {
                 ; 0000 0225         if (data_register>=-1000)point=1;
000893 940e 19b4 	CALL SUBOPT_0x3D
000895 940e 19b9 	CALL SUBOPT_0x3E
000897 f010      	BRLO _0x140
000898 e0e1      	LDI  R30,LOW(1)
000899 c009      	RJMP _0x3A8
                 ; 0000 0226         else if (data_register>=-100)point=2;
                 _0x140:
00089a 940e 19c0 	CALL SUBOPT_0x3F
00089c f010      	BRLO _0x142
00089d e0e2      	LDI  R30,LOW(2)
00089e c004      	RJMP _0x3A8
                 ; 0000 0227         else if (data_register>=-10)point=3;
                 _0x142:
00089f 940e 19c8 	CALL SUBOPT_0x40
0008a1 f018      	BRLO _0x144
0008a2 e0e3      	LDI  R30,LOW(3)
                 _0x3A8:
0008a3 93e0 01fa 	STS  _point,R30
                 ; 0000 0228         }
                 _0x144:
                 ; 0000 0229 else
0008a5 c015      	RJMP _0x145
                 _0x13F:
                 ; 0000 022A         {
                 ; 0000 022B         if (data_register<10)point=4;
0008a6 940e 19d0 	CALL SUBOPT_0x41
0008a8 f410      	BRSH _0x146
0008a9 e0e4      	LDI  R30,LOW(4)
0008aa c00e      	RJMP _0x3A9
                 ; 0000 022C         else if (data_register<100)point=3;
                 _0x146:
0008ab 940e 19d8 	CALL SUBOPT_0x42
0008ad f410      	BRSH _0x148
0008ae e0e3      	LDI  R30,LOW(3)
0008af c009      	RJMP _0x3A9
                 ; 0000 022D         else if (data_register<1000)point=2;
                 _0x148:
0008b0 940e 19e0 	CALL SUBOPT_0x43
0008b2 f410      	BRSH _0x14A
0008b3 e0e2      	LDI  R30,LOW(2)
0008b4 c004      	RJMP _0x3A9
                 ; 0000 022E         else if (data_register>=1000)point=1;
                 _0x14A:
0008b5 940e 19e0 	CALL SUBOPT_0x43
0008b7 f018      	BRLO _0x14C
0008b8 e0e1      	LDI  R30,LOW(1)
                 _0x3A9:
0008b9 93e0 01fa 	STS  _point,R30
                 ; 0000 022F         }
                 _0x14C:
                 _0x145:
                 ; 0000 0230 
                 ; 0000 0231 work_point=point;
0008bb 940e 19e8 	CALL SUBOPT_0x44
                 ; 0000 0232 
                 ; 0000 0233 // a2:
                 ; 0000 0234 #asm("sei")
0008bd 9478      	sei
                 ; 0000 0235 //         tis=1;sot=2;des=3;ed=4;
                 ; 0000 0236 //         set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
                 ; 0000 0237 //         set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
                 ; 0000 0238 // //        delay_ms(500);
                 ; 0000 0239 //
                 ; 0000 023A // while (1);
                 ; 0000 023B //-------------------------------------------------------------------//
                 ; 0000 023C //Показать основные настройки
                 ; 0000 023D //блокировка по включению
                 ; 0000 023E //-------------------------------------------------------------------//
                 ; 0000 023F start_time=sys_time;count_register=1;
0008be 940e 193b 	CALL SUBOPT_0x2F
                 ; 0000 0240 set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
0008c0 940e 19ed 	CALL SUBOPT_0x45
0008c2 940e 19ed 	CALL SUBOPT_0x45
0008c4 940e 19f2 	CALL SUBOPT_0x46
0008c6 940e 19f6 	CALL SUBOPT_0x47
0008c8 940e 19ed 	CALL SUBOPT_0x45
0008ca 940e 19f2 	CALL SUBOPT_0x46
0008cc 940e 042b 	CALL _set_led_off
                 ; 0000 0241 while ((sys_time-start_time)<reg[0][A_11]*1000)
                 _0x14D:
0008ce 940e 19f9 	CALL SUBOPT_0x48
0008d0 937f      	PUSH R23
0008d1 936f      	PUSH R22
0008d2 93ff      	PUSH R31
0008d3 93ef      	PUSH R30
                +
0008d4 e4a4     +LDI R26 , LOW ( _reg + 68 )
0008d5 e0b0     +LDI R27 , HIGH ( _reg + 68 )
                 	__POINTW2MN _reg,68
0008d6 940e 1a02 	CALL SUBOPT_0x49
0008d8 91af      	POP  R26
0008d9 91bf      	POP  R27
0008da 918f      	POP  R24
0008db 919f      	POP  R25
0008dc 940e 1cd6 	CALL __CDF2
0008de 940e 1ea2 	CALL __CMPF12
0008e0 f010      	BRLO PC+3
0008e1 940c 099c 	JMP _0x14F
                 ; 0000 0242 //while (1)
                 ; 0000 0243         {
                 ; 0000 0244         ed=' ';
0008e3 940e 1a0b 	CALL SUBOPT_0x4A
                 ; 0000 0245         switch (count_register)
                 ; 0000 0246                 {
                 ; 0000 0247                 case 2: tis='У';sot='_';des= 2 ;break;
0008e5 f421      	BRNE _0x153
0008e6 ede3      	LDI  R30,LOW(211)
0008e7 940e 1a12 	CALL SUBOPT_0x4B
0008e9 c01b      	RJMP _0x3AA
                 ; 0000 0248                 case 3: tis= 3 ;sot='_';des= 1 ;break;
                 _0x153:
0008ea 30e3      	CPI  R30,LOW(0x3)
0008eb f411      	BRNE _0x154
0008ec e0e3      	LDI  R30,LOW(3)
0008ed c011      	RJMP _0x3AB
                 ; 0000 0249                 case 4: tis= 3 ;sot='_';des= 2 ;break;
                 _0x154:
0008ee 30e4      	CPI  R30,LOW(0x4)
0008ef f421      	BRNE _0x155
0008f0 e0e3      	LDI  R30,LOW(3)
0008f1 940e 1a12 	CALL SUBOPT_0x4B
0008f3 c011      	RJMP _0x3AA
                 ; 0000 024A                 case 5: tis='p';sot='_';des='_';break;
                 _0x155:
0008f4 30e5      	CPI  R30,LOW(0x5)
0008f5 f419      	BRNE _0x156
0008f6 940e 1a19 	CALL SUBOPT_0x4C
0008f8 c00c      	RJMP _0x3AA
                 ; 0000 024B                 case 6: tis='c';sot='_';des='_';break;
                 _0x156:
0008f9 30e6      	CPI  R30,LOW(0x6)
0008fa f419      	BRNE _0x157
0008fb 940e 1a20 	CALL SUBOPT_0x4D
0008fd c007      	RJMP _0x3AA
                 ; 0000 024C                 case 1: tis='У';sot='_';des= 1 ;break;
                 _0x157:
                 ; 0000 024D                 default:tis='У';sot='_';des= 1 ;break;
                 _0x3AC:
0008fe ede3      	LDI  R30,LOW(211)
                 _0x3AB:
0008ff 93e0 01ff 	STS  _tis,R30
000901 e5ef      	LDI  R30,LOW(95)
000902 93e0 01fe 	STS  _sot,R30
000904 e0e1      	LDI  R30,LOW(1)
                 _0x3AA:
000905 93e0 01fd 	STS  _des,R30
                 ; 0000 024E                 }
                 ; 0000 024F         set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
000907 940e 1955 	CALL SUBOPT_0x31
000909 940e 1962 	CALL SUBOPT_0x32
00090b dbb0      	RCALL _set_digit_off
                 ; 0000 0250         set_led_on(0,0,0,0,0,0,0,0);         set_led_off(0,0,0,0,0,0,0,0);
00090c 940e 19ed 	CALL SUBOPT_0x45
00090e 940e 19ed 	CALL SUBOPT_0x45
000910 940e 19f2 	CALL SUBOPT_0x46
000912 940e 19f6 	CALL SUBOPT_0x47
000914 940e 19ed 	CALL SUBOPT_0x45
000916 940e 19f2 	CALL SUBOPT_0x46
000918 940e 042b 	CALL _set_led_off
                 ; 0000 0251         delay_ms(500);
00091a efe4      	LDI  R30,LOW(500)
00091b e0f1      	LDI  R31,HIGH(500)
00091c 940e 1998 	CALL SUBOPT_0x38
                 ; 0000 0252 
                 ; 0000 0253         data_register=reg[0][count_register];
00091e 940e 1a27 	CALL SUBOPT_0x4E
000920 940e 1a2f 	CALL SUBOPT_0x4F
000922 940e 19af 	CALL SUBOPT_0x3C
                 ; 0000 0254 //        if ((data_register>MAX_MIN[count_register,1])||(data_register<MAX_MIN[count_register,0])) data_register=FAKTORY[count_register];//проверка граничных значений
                 ; 0000 0255 
                 ; 0000 0256 //        save_reg(data_register,count_register);
                 ; 0000 0257 
                 ; 0000 0258         switch (count_register)
000924 91e0 021f 	LDS  R30,_count_register
                 ; 0000 0259                 {
                 ; 0000 025A                 case 2: count_register=3;point=work_point;break;
000926 30e2      	CPI  R30,LOW(0x2)
000927 f411      	BRNE _0x15D
000928 e0e3      	LDI  R30,LOW(3)
000929 c01c      	RJMP _0x3AD
                 ; 0000 025B                 case 3: count_register=4;point=1;break;
                 _0x15D:
00092a 30e3      	CPI  R30,LOW(0x3)
00092b f429      	BRNE _0x15E
00092c e0e4      	LDI  R30,LOW(4)
00092d 93e0 021f 	STS  _count_register,R30
00092f e0e1      	LDI  R30,LOW(1)
000930 c019      	RJMP _0x3AE
                 ; 0000 025C                 case 4: count_register=5;point=1;break;
                 _0x15E:
000931 30e4      	CPI  R30,LOW(0x4)
000932 f429      	BRNE _0x15F
000933 e0e5      	LDI  R30,LOW(5)
000934 93e0 021f 	STS  _count_register,R30
000936 e0e1      	LDI  R30,LOW(1)
000937 c012      	RJMP _0x3AE
                 ; 0000 025D                 case 5: count_register=6;point=1;break;
                 _0x15F:
000938 30e5      	CPI  R30,LOW(0x5)
000939 f429      	BRNE _0x160
00093a e0e6      	LDI  R30,LOW(6)
00093b 93e0 021f 	STS  _count_register,R30
00093d e0e1      	LDI  R30,LOW(1)
00093e c00b      	RJMP _0x3AE
                 ; 0000 025E                 case 6: count_register=1;point=1;break;
                 _0x160:
00093f 30e6      	CPI  R30,LOW(0x6)
000940 f421      	BRNE _0x161
000941 e0e1      	LDI  R30,LOW(1)
000942 93e0 021f 	STS  _count_register,R30
000944 c005      	RJMP _0x3AE
                 ; 0000 025F                 case 1: count_register=2;point=work_point;break;
                 _0x161:
                 ; 0000 0260                 default:count_register=2;point=work_point;break;
                 _0x3AF:
000945 e0e2      	LDI  R30,LOW(2)
                 _0x3AD:
000946 93e0 021f 	STS  _count_register,R30
000948 91e0 01fb 	LDS  R30,_work_point
                 _0x3AE:
00094a 93e0 01fa 	STS  _point,R30
                 ; 0000 0261                 }
                 ; 0000 0262         hex2dec(data_register);
00094c 940e 1a34 	CALL SUBOPT_0x50
                 ; 0000 0263         set_digit_on(tis,sot,des,ed);        set_digit_off(tis,sot,des,ed);
00094e 940e 1955 	CALL SUBOPT_0x31
000950 940e 1962 	CALL SUBOPT_0x32
000952 940e 04bc 	CALL _set_digit_off
                 ; 0000 0264         if (point==1)       {set_led_on(0,0,0,0,0,0,0,0);set_led_off(0,0,0,0,0,0,0,0);}
000954 91a0 01fa 	LDS  R26,_point
000956 30a1      	CPI  R26,LOW(0x1)
000957 f459      	BRNE _0x164
000958 940e 19ed 	CALL SUBOPT_0x45
00095a 940e 19ed 	CALL SUBOPT_0x45
00095c 940e 19f2 	CALL SUBOPT_0x46
00095e 940e 19f6 	CALL SUBOPT_0x47
000960 e0e0      	LDI  R30,LOW(0)
000961 93ea      	ST   -Y,R30
000962 c02d      	RJMP _0x3B0
                 ; 0000 0265         else if (point==2)  {set_led_on(0,0,0,0,0,0,1,0);set_led_off(0,0,0,0,0,0,1,0);}
                 _0x164:
000963 91a0 01fa 	LDS  R26,_point
000965 30a2      	CPI  R26,LOW(0x2)
000966 f451      	BRNE _0x166
000967 940e 19ed 	CALL SUBOPT_0x45
000969 940e 19ed 	CALL SUBOPT_0x45
00096b 940e 1a3c 	CALL SUBOPT_0x51
00096d 940e 19ed 	CALL SUBOPT_0x45
00096f e0e1      	LDI  R30,LOW(1)
000970 c023      	RJMP _0x3B1
                 ; 0000 0266         else if (point==3)  {set_led_on(0,0,0,0,0,1,0,0);set_led_off(0,0,0,0,0,1,0,0);}
                 _0x166:
000971 91a0 01fa 	LDS  R26,_point
000973 30a3      	CPI  R26,LOW(0x3)
000974 f461      	BRNE _0x168
000975 940e 19ed 	CALL SUBOPT_0x45
000977 940e 19f2 	CALL SUBOPT_0x46
000979 940e 1a41 	CALL SUBOPT_0x52
00097b 940e 19f6 	CALL SUBOPT_0x47
00097d 940e 19f2 	CALL SUBOPT_0x46
00097f e0e1      	LDI  R30,LOW(1)
000980 c011      	RJMP _0x3B2
                 ; 0000 0267         else if (point==4)  {set_led_on(0,0,0,0,1,0,0,0);set_led_off(0,0,0,0,1,0,0,0);}
                 _0x168:
000981 91a0 01fa 	LDS  R26,_point
000983 30a4      	CPI  R26,LOW(0x4)
000984 f491      	BRNE _0x16A
000985 940e 19ed 	CALL SUBOPT_0x45
000987 940e 1a44 	CALL SUBOPT_0x53
000989 940e 19ed 	CALL SUBOPT_0x45
00098b 940e 19f6 	CALL SUBOPT_0x47
00098d e0e0      	LDI  R30,LOW(0)
00098e 93ea      	ST   -Y,R30
00098f e0e1      	LDI  R30,LOW(1)
                 _0x3B0:
000990 93ea      	ST   -Y,R30
000991 e0e0      	LDI  R30,LOW(0)
                 _0x3B2:
000992 93ea      	ST   -Y,R30
000993 e0e0      	LDI  R30,LOW(0)
                 _0x3B1:
000994 93ea      	ST   -Y,R30
000995 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 0268         delay_ms(500);
                 _0x16A:
000997 efe4      	LDI  R30,LOW(500)
000998 e0f1      	LDI  R31,HIGH(500)
000999 940e 1998 	CALL SUBOPT_0x38
                 ; 0000 0269         }
00099b cf32      	RJMP _0x14D
                 _0x14F:
                 ; 0000 026A a1:
                 ; 0000 026B UBRRH=0x00;UBRRL=0x5f;UCSRB=0xD8;UCSRC=0x86;UCSRA=0x02;
00099c e0e0      	LDI  R30,LOW(0)
00099d bde0      	OUT  0x20,R30
00099e e5ef      	LDI  R30,LOW(95)
00099f b9e9      	OUT  0x9,R30
0009a0 ede8      	LDI  R30,LOW(216)
0009a1 b9ea      	OUT  0xA,R30
0009a2 e8e6      	LDI  R30,LOW(134)
0009a3 bde0      	OUT  0x20,R30
0009a4 e0e2      	LDI  R30,LOW(2)
0009a5 b9eb      	OUT  0xB,R30
                 ; 0000 026C crc=0xffff;
0009a6 940e 192d 	CALL SUBOPT_0x2D
                 ; 0000 026D power=1;
0009a8 9a93      	SBI  0x12,3
                 ; 0000 026E 
                 ; 0000 026F 
                 ; 0000 0270 key_mode_press=0;
0009a9 94e8      	CLT
0009aa f833      	BLD  R3,3
                 ; 0000 0271 key_plus_press=0;
0009ab f834      	BLD  R3,4
                 ; 0000 0272 key_mines_press=0;
0009ac f835      	BLD  R3,5
                 ; 0000 0273 key_enter_press=0;
0009ad f836      	BLD  R3,6
                 ; 0000 0274 key_mode_press_switch=0;
0009ae f837      	BLD  R3,7
                 ; 0000 0275 key_plus_press_switch=0;
0009af f840      	BLD  R4,0
                 ; 0000 0276 key_minus_press_switch=0;
0009b0 f841      	BLD  R4,1
                 ; 0000 0277 
                 ; 0000 0278 #asm("sei")
0009b1 9478      	sei
                 ; 0000 0279 mode=0;
0009b2 e0e0      	LDI  R30,LOW(0)
0009b3 93e0 01f9 	STS  _mode,R30
                 ; 0000 027A x=0;
0009b5 940e 199c 	CALL SUBOPT_0x39
0009b7 93e0 0216 	STS  _x,R30
0009b9 93f0 0217 	STS  _x+1,R31
0009bb 9360 0218 	STS  _x+2,R22
0009bd 9370 0219 	STS  _x+3,R23
                 ; 0000 027B start_time=sys_time;
0009bf 940e 1a4d 	CALL SUBOPT_0x55
                 ; 0000 027C k_k=reg[0][A_16];
                +
0009c1 e5a8     +LDI R26 , LOW ( _reg + 88 )
0009c2 e0b0     +LDI R27 , HIGH ( _reg + 88 )
                 	__POINTW2MN _reg,88
0009c3 940e 1ce6 	CALL __EEPROMRDD
                +
0009c5 a7e9     +STD Y + 41 , R30
0009c6 a7fa     +STD Y + 41 + 1 , R31
0009c7 a76b     +STD Y + 41 + 2 , R22
0009c8 a77c     +STD Y + 41 + 3 , R23
                 	__PUTD1S 41
                 ; 0000 027D 
                 ; 0000 027E point=ee_point;
0009c9 940e 1934 	CALL SUBOPT_0x2E
                 ; 0000 027F work_point=point;
0009cb 940e 19e8 	CALL SUBOPT_0x44
                 ; 0000 0280 ti_en=0;
0009cd 94e8      	CLT
0009ce f821      	BLD  R2,1
                 ; 0000 0281 //tmpVal=UBRRL;
                 ; 0000 0282 rx_wr_index=0;
0009cf 24bb      	CLR  R11
                 ; 0000 0283 tx_buffer_begin=0;
0009d0 24dd      	CLR  R13
                 ; 0000 0284 tx_buffer_end=0;
0009d1 24cc      	CLR  R12
                 ; 0000 0285 //-------------------------------------------------------------------//
                 ; 0000 0286 while (1)
                 _0x16E:
                 ; 0000 0287         {
                 ; 0000 0288         #asm("wdr");
0009d2 95a8      	wdr
                 ; 0000 0289         adc_filter=izm();
0009d3 dcca      	RCALL _izm
                +
0009d4 a7ed     +STD Y + 45 , R30
0009d5 a7fe     +STD Y + 45 + 1 , R31
0009d6 a76f     +STD Y + 45 + 2 , R22
0009d7 ab78     +STD Y + 45 + 3 , R23
                 	__PUTD1S 45
                 ; 0000 028A //        adc_filter=1234;
                 ; 0000 028B         //-------------------------------------------------------------------//
                 ; 0000 028C         //абсолютная величина
                 ; 0000 028D         //-------------------------------------------------------------------//
                 ; 0000 028E         i=reg[0][A_12];
0009d8 940e 18c1 	CALL SUBOPT_0x1E
                 ; 0000 028F         switch (i)
                 ; 0000 0290                 {
                 ; 0000 0291                 case 0: adc_value1=adc_filter*k_k*20/3606;break;//4-20mA 20=4.4   =3606 k=20/3606
0009da f429      	BRNE _0x174
0009db 940e 1a4f 	CALL SUBOPT_0x56
0009dd 940e 1a5a 	CALL SUBOPT_0x57
0009df c02f      	RJMP _0x3B3
                 ; 0000 0292                 case 1: adc_value1=adc_filter*k_k* 5/3606;break;//0-5mA   5=4.4   =3606 k= 5/3606
                 _0x174:
0009e0 30e1      	CPI  R30,LOW(0x1)
0009e1 f479      	BRNE _0x175
0009e2 940e 1a4f 	CALL SUBOPT_0x56
                +
0009e4 e0a0     +LDI R26 , LOW ( 0x40A00000 )
0009e5 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
0009e6 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
0009e7 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
0009e8 940e 1e0f 	CALL __MULF12
0009ea 01df      	MOVW R26,R30
0009eb 01cb      	MOVW R24,R22
                +
0009ec e0e0     +LDI R30 , LOW ( 0x45616000 )
0009ed e6f0     +LDI R31 , HIGH ( 0x45616000 )
0009ee e661     +LDI R22 , BYTE3 ( 0x45616000 )
0009ef e475     +LDI R23 , BYTE4 ( 0x45616000 )
                 	__GETD1N 0x45616000
0009f0 c01e      	RJMP _0x3B3
                 ; 0000 0293                 case 2: adc_value1=adc_filter*k_k*20/3606;break;//0-20mA 20=4.4   =3606 k=20/3606
                 _0x175:
0009f1 30e2      	CPI  R30,LOW(0x2)
0009f2 f429      	BRNE _0x176
0009f3 940e 1a4f 	CALL SUBOPT_0x56
0009f5 940e 1a5a 	CALL SUBOPT_0x57
0009f7 c017      	RJMP _0x3B3
                 ; 0000 0294                 case 3: adc_value1=adc_filter*k_k*10/3691;break;//0-10V  10=4.506 =3606 k=10/3691
                 _0x176:
0009f8 30e3      	CPI  R30,LOW(0x3)
0009f9 f439      	BRNE _0x178
0009fa 940e 1a4f 	CALL SUBOPT_0x56
                +
0009fc e0a0     +LDI R26 , LOW ( 0x41200000 )
0009fd e0b0     +LDI R27 , HIGH ( 0x41200000 )
0009fe e280     +LDI R24 , BYTE3 ( 0x41200000 )
0009ff e491     +LDI R25 , BYTE4 ( 0x41200000 )
                 	__GETD2N 0x41200000
000a00 c006      	RJMP _0x3B4
                 ; 0000 0295                 default:adc_value1=adc_filter*k_k* 5/3691;break;//0-5V    5=4.506 =3606 k= 5/3691
                 _0x178:
000a01 940e 1a4f 	CALL SUBOPT_0x56
                +
000a03 e0a0     +LDI R26 , LOW ( 0x40A00000 )
000a04 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
000a05 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
000a06 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
                 _0x3B4:
000a07 940e 1e0f 	CALL __MULF12
000a09 01df      	MOVW R26,R30
000a0a 01cb      	MOVW R24,R22
                +
000a0b e0e0     +LDI R30 , LOW ( 0x4566B000 )
000a0c ebf0     +LDI R31 , HIGH ( 0x4566B000 )
000a0d e666     +LDI R22 , BYTE3 ( 0x4566B000 )
000a0e e475     +LDI R23 , BYTE4 ( 0x4566B000 )
                 	__GETD1N 0x4566B000
                 _0x3B3:
000a0f 940e 1e5d 	CALL __DIVF21
000a11 93e0 022e 	STS  _adc_value1,R30
000a13 93f0 022f 	STS  _adc_value1+1,R31
000a15 9360 0230 	STS  _adc_value1+2,R22
000a17 9370 0231 	STS  _adc_value1+3,R23
                 ; 0000 0296                 }
                 ; 0000 0297 
                 ; 0000 0298 
                 ; 0000 0299 
                 ; 0000 029A //        if (reg[0,A_12]<3) adc_value1=adc_filter*k_k/100;
                 ; 0000 029B //        else adc_value1=adc_filter*k_k/200;
                 ; 0000 029C         //-------------------------------------------------------------------//
                 ; 0000 029D         //относительная величина
                 ; 0000 029E         //-------------------------------------------------------------------//
                 ; 0000 029F         i=reg[0][A_12];
000a19 940e 18c1 	CALL SUBOPT_0x1E
                 ; 0000 02A0         switch (i)
                 ; 0000 02A1                 {
                 ; 0000 02A2                 case 0: kk=(reg[0][A_07]-reg[0][A_06])/(20-4);bb=reg[0][A_06]-kk*4;dop1=4;dop2=20;break;//4-20mA
000a1b f589      	BRNE _0x17C
000a1c 940e 19aa 	CALL SUBOPT_0x3B
000a1e 937f      	PUSH R23
000a1f 936f      	PUSH R22
000a20 93ff      	PUSH R31
000a21 93ef      	PUSH R30
000a22 940e 1a67 	CALL SUBOPT_0x58
000a24 91af      	POP  R26
000a25 91bf      	POP  R27
000a26 918f      	POP  R24
000a27 919f      	POP  R25
000a28 940e 1a6c 	CALL SUBOPT_0x59
000a2a 01df      	MOVW R26,R30
000a2b 01cb      	MOVW R24,R22
                +
000a2c e0e0     +LDI R30 , LOW ( 0x41800000 )
000a2d e0f0     +LDI R31 , HIGH ( 0x41800000 )
000a2e e860     +LDI R22 , BYTE3 ( 0x41800000 )
000a2f e471     +LDI R23 , BYTE4 ( 0x41800000 )
                 	__GETD1N 0x41800000
000a30 940e 1a71 	CALL SUBOPT_0x5A
000a32 937f      	PUSH R23
000a33 936f      	PUSH R22
000a34 93ff      	PUSH R31
000a35 93ef      	PUSH R30
000a36 940e 1a78 	CALL SUBOPT_0x5B
000a38 940e 1a7d 	CALL SUBOPT_0x5C
000a3a 940e 1e0f 	CALL __MULF12
000a3c 91af      	POP  R26
000a3d 91bf      	POP  R27
000a3e 918f      	POP  R24
000a3f 919f      	POP  R25
000a40 940e 1a6c 	CALL SUBOPT_0x59
000a42 940e 1a82 	CALL SUBOPT_0x5D
000a44 940e 1a7d 	CALL SUBOPT_0x5C
                +
000a46 8fed     +STD Y + 29 , R30
000a47 8ffe     +STD Y + 29 + 1 , R31
000a48 8f6f     +STD Y + 29 + 2 , R22
000a49 a378     +STD Y + 29 + 3 , R23
                 	__PUTD1S 29
000a4a 940e 1a87 	CALL SUBOPT_0x5E
000a4c c08f      	RJMP _0x3B5
                 ; 0000 02A3                 case 1: kk=(reg[0][A_07]-reg[0][A_06])/( 5-0);bb=reg[0][A_06]-kk*0;dop1=0;dop2= 5;break;//0-5mA
                 _0x17C:
000a4d 30e1      	CPI  R30,LOW(0x1)
000a4e f4d9      	BRNE _0x17D
000a4f 940e 19aa 	CALL SUBOPT_0x3B
000a51 937f      	PUSH R23
000a52 936f      	PUSH R22
000a53 93ff      	PUSH R31
000a54 93ef      	PUSH R30
000a55 940e 1a67 	CALL SUBOPT_0x58
000a57 91af      	POP  R26
000a58 91bf      	POP  R27
000a59 918f      	POP  R24
000a5a 919f      	POP  R25
000a5b 940e 1a6c 	CALL SUBOPT_0x59
000a5d 940e 1a8c 	CALL SUBOPT_0x5F
000a5f 937f      	PUSH R23
000a60 936f      	PUSH R22
000a61 93ff      	PUSH R31
000a62 93ef      	PUSH R30
000a63 940e 1a93 	CALL SUBOPT_0x60
000a65 91af      	POP  R26
000a66 91bf      	POP  R27
000a67 918f      	POP  R24
000a68 919f      	POP  R25
000a69 c068      	RJMP _0x3B6
                 ; 0000 02A4                 case 2: kk=(reg[0][A_07]-reg[0][A_06])/(20-0);bb=reg[0][A_06]-kk*0;dop1=0;dop2=20;break;//0-20mA
                 _0x17D:
000a6a 30e2      	CPI  R30,LOW(0x2)
000a6b f529      	BRNE _0x17E
000a6c 940e 19aa 	CALL SUBOPT_0x3B
000a6e 937f      	PUSH R23
000a6f 936f      	PUSH R22
000a70 93ff      	PUSH R31
000a71 93ef      	PUSH R30
000a72 940e 1a67 	CALL SUBOPT_0x58
000a74 91af      	POP  R26
000a75 91bf      	POP  R27
000a76 918f      	POP  R24
000a77 919f      	POP  R25
000a78 940e 1a6c 	CALL SUBOPT_0x59
000a7a 01df      	MOVW R26,R30
000a7b 01cb      	MOVW R24,R22
000a7c 940e 1a87 	CALL SUBOPT_0x5E
000a7e 940e 1a71 	CALL SUBOPT_0x5A
000a80 937f      	PUSH R23
000a81 936f      	PUSH R22
000a82 93ff      	PUSH R31
000a83 93ef      	PUSH R30
000a84 940e 1a93 	CALL SUBOPT_0x60
000a86 91af      	POP  R26
000a87 91bf      	POP  R27
000a88 918f      	POP  R24
000a89 919f      	POP  R25
000a8a 940e 1a6c 	CALL SUBOPT_0x59
000a8c 940e 1a98 	CALL SUBOPT_0x61
000a8e 940e 1a87 	CALL SUBOPT_0x5E
000a90 c04b      	RJMP _0x3B5
                 ; 0000 02A5                 case 3: kk=(reg[0][A_07]-reg[0][A_06])/(10-0);bb=reg[0][A_06]-kk*0;dop1=0;dop2=10;break;//0-10V
                 _0x17E:
000a91 30e3      	CPI  R30,LOW(0x3)
000a92 f529      	BRNE _0x180
000a93 940e 19aa 	CALL SUBOPT_0x3B
000a95 937f      	PUSH R23
000a96 936f      	PUSH R22
000a97 93ff      	PUSH R31
000a98 93ef      	PUSH R30
000a99 940e 1a67 	CALL SUBOPT_0x58
000a9b 91af      	POP  R26
000a9c 91bf      	POP  R27
000a9d 918f      	POP  R24
000a9e 919f      	POP  R25
000a9f 940e 1a6c 	CALL SUBOPT_0x59
000aa1 01df      	MOVW R26,R30
000aa2 01cb      	MOVW R24,R22
000aa3 940e 1a9f 	CALL SUBOPT_0x62
000aa5 940e 1a71 	CALL SUBOPT_0x5A
000aa7 937f      	PUSH R23
000aa8 936f      	PUSH R22
000aa9 93ff      	PUSH R31
000aaa 93ef      	PUSH R30
000aab 940e 1a93 	CALL SUBOPT_0x60
000aad 91af      	POP  R26
000aae 91bf      	POP  R27
000aaf 918f      	POP  R24
000ab0 919f      	POP  R25
000ab1 940e 1a6c 	CALL SUBOPT_0x59
000ab3 940e 1a98 	CALL SUBOPT_0x61
000ab5 940e 1a9f 	CALL SUBOPT_0x62
000ab7 c024      	RJMP _0x3B5
                 ; 0000 02A6                 default:kk=(reg[0][A_07]-reg[0][A_06])/( 5-0);bb=reg[0][A_06]-kk*0;dop1=0;dop2= 5;break;//0-5V
                 _0x180:
000ab8 940e 19aa 	CALL SUBOPT_0x3B
000aba 937f      	PUSH R23
000abb 936f      	PUSH R22
000abc 93ff      	PUSH R31
000abd 93ef      	PUSH R30
000abe 940e 1a67 	CALL SUBOPT_0x58
000ac0 91af      	POP  R26
000ac1 91bf      	POP  R27
000ac2 918f      	POP  R24
000ac3 919f      	POP  R25
000ac4 940e 1a6c 	CALL SUBOPT_0x59
000ac6 940e 1a8c 	CALL SUBOPT_0x5F
000ac8 937f      	PUSH R23
000ac9 936f      	PUSH R22
000aca 93ff      	PUSH R31
000acb 93ef      	PUSH R30
000acc 940e 1a93 	CALL SUBOPT_0x60
000ace 91af      	POP  R26
000acf 91bf      	POP  R27
000ad0 918f      	POP  R24
000ad1 919f      	POP  R25
                 _0x3B6:
000ad2 940e 1cd9 	CALL __SWAPD12
000ad4 940e 1dba 	CALL __SUBF12
000ad6 940e 1a98 	CALL SUBOPT_0x61
                +
000ad8 e0e0     +LDI R30 , LOW ( 0x40A00000 )
000ad9 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
000ada ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
000adb e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
                 _0x3B5:
                +
000adc 8fe9     +STD Y + 25 , R30
000add 8ffa     +STD Y + 25 + 1 , R31
000ade 8f6b     +STD Y + 25 + 2 , R22
000adf 8f7c     +STD Y + 25 + 3 , R23
                 	__PUTD1S 25
                 ; 0000 02A7                 }
                 ; 0000 02A8         adc_value2=adc_value1*kk+bb;
                +
000ae0 a1ed     +LDD R30 , Y + 37
000ae1 a1fe     +LDD R31 , Y + 37 + 1
000ae2 a16f     +LDD R22 , Y + 37 + 2
000ae3 a578     +LDD R23 , Y + 37 + 3
                 	__GETD1S 37
000ae4 940e 1aa4 	CALL SUBOPT_0x63
000ae6 940e 1aad 	CALL SUBOPT_0x64
                 ; 0000 02A9 
                 ; 0000 02AA         //-------------------------------------------------------------------//
                 ; 0000 02AB         //авария
                 ; 0000 02AC         //-------------------------------------------------------------------//
                 ; 0000 02AD 
                 ; 0000 02AE         if (adc_value1<(dop1*(1-reg[0][A_08]/100)))//потестить с adc_value2
000ae8 940e 1abe 	CALL SUBOPT_0x65
000aea 940e 1acf 	CALL SUBOPT_0x66
000aec 940e 1aa4 	CALL SUBOPT_0x63
000aee 940e 1ea2 	CALL __CMPF12
000af0 f458      	BRSH _0x181
                 ; 0000 02AF                 {
                 ; 0000 02B0                 avaria=1;
000af1 9468      	SET
000af2 f843      	BLD  R4,3
                 ; 0000 02B1                 adc_value2=(dop1*(1-reg[0][A_08]/100))*kk+bb;
000af3 940e 1abe 	CALL SUBOPT_0x65
000af5 940e 1acf 	CALL SUBOPT_0x66
000af7 940e 1a78 	CALL SUBOPT_0x5B
000af9 940e 1aad 	CALL SUBOPT_0x64
                 ; 0000 02B2                 }
                 ; 0000 02B3         else if (adc_value2>(dop2*(1+reg[0][A_09]/100)))
000afb c013      	RJMP _0x182
                 _0x181:
000afc 940e 1ad6 	CALL SUBOPT_0x67
000afe 940e 1aef 	CALL SUBOPT_0x68
000b00 f009      	BREQ PC+2
000b01 f410      	BRCC PC+3
000b02 940c 0b0d 	JMP  _0x183
                 ; 0000 02B4                 {
                 ; 0000 02B5                 avaria=1;
000b04 9468      	SET
000b05 f843      	BLD  R4,3
                 ; 0000 02B6                 adc_value2=(dop2*(1+reg[0][A_09]/100))*kk+bb;
000b06 940e 1ad6 	CALL SUBOPT_0x67
000b08 940e 1a78 	CALL SUBOPT_0x5B
000b0a 940e 1aad 	CALL SUBOPT_0x64
                 ; 0000 02B7                 }
                 ; 0000 02B8         else avaria=0;
000b0c c002      	RJMP _0x184
                 _0x183:
000b0d 94e8      	CLT
000b0e f843      	BLD  R4,3
                 ; 0000 02B9 
                 ; 0000 02BA 
                 ; 0000 02BB //         if (adc_value2<(reg[0,A_06]*(1-reg[0,A_08]/100)))
                 ; 0000 02BC //                 {avaria=1;adc_value2=reg[0,A_06]*(1-reg[0,A_08]/100);}
                 ; 0000 02BD //         else if (adc_value2>(reg[0,A_07]*(1+reg[0,A_09]/100)))
                 ; 0000 02BE //                 {avaria=1;adc_value2=reg[0,A_07]*(1+reg[0,A_09]/100);}
                 ; 0000 02BF //         else avaria=0;
                 ; 0000 02C0 
                 ; 0000 02C1         //-------------------------------------------------------------------//
                 ; 0000 02C2 
                 ; 0000 02C3 
                 ; 0000 02C4         //-------------------------------------------------------------------//
                 ; 0000 02C5         //уставка 1,2
                 ; 0000 02C6         //-------------------------------------------------------------------//
                 ; 0000 02C7         if ((alarm1==1)&&(alarm_alarm1==1)){
                 _0x184:
                 _0x182:
000b0f 940e 1865 	CALL SUBOPT_0xE
000b11 f419      	BRNE _0x186
000b12 940e 185b 	CALL SUBOPT_0xC
000b14 f009      	BREQ _0x187
                 _0x186:
000b15 c031      	RJMP _0x185
                 _0x187:
                 ; 0000 02C8         switch(key_enter_press){
000b16 e0e0      	LDI  R30,0
000b17 fc36      	SBRC R3,6
000b18 e0e1      	LDI  R30,1
                 ; 0000 02C9         case 1:
000b19 30e1      	CPI  R30,LOW(0x1)
000b1a f559      	BRNE _0x193
                 ; 0000 02CA                 if (adc_value2>gis_val1){//if (adc_value2>(reg[0,Y_01]*(1+reg[0,A_01]/100))) {
000b1b 940e 1afa 	CALL SUBOPT_0x69
000b1d f009      	BREQ PC+2
000b1e f410      	BRCC PC+3
000b1f 940c 0b32 	JMP  _0x18C
                 ; 0000 02CB                          alarm1=1;
000b21 9468      	SET
000b22 f844      	BLD  R4,4
                 ; 0000 02CC                         gis_val1=(reg[0][Y_01])*(1-reg[0][A_01]/100);}
000b23 940e 1923 	CALL SUBOPT_0x2B
000b25 937f      	PUSH R23
000b26 936f      	PUSH R22
000b27 93ff      	PUSH R31
000b28 93ef      	PUSH R30
000b29 940e 1aff 	CALL SUBOPT_0x6A
000b2b 91af      	POP  R26
000b2c 91bf      	POP  R27
000b2d 918f      	POP  R24
000b2e 919f      	POP  R25
000b2f 940e 1e0f 	CALL __MULF12
000b31 c00e      	RJMP _0x3B7
                 ; 0000 02CD                 else
                 _0x18C:
                 ; 0000 02CE                         {
                 ; 0000 02CF                          alarm1=0;flag_start_pause1=0;
000b32 940e 1b10 	CALL SUBOPT_0x6B
                 ; 0000 02D0                         if ((reg[0][P___]==0)||(reg[0][P___]==1)&&(reg[0][A_14]==0))alarm_alarm1=0;
000b34 f039      	BREQ _0x18F
000b35 940e 1b1a 	CALL SUBOPT_0x6C
000b37 f419      	BRNE _0x190
000b38 940e 1b22 	CALL SUBOPT_0x6D
000b3a f009      	BREQ _0x18F
                 _0x190:
000b3b c002      	RJMP _0x18E
                 _0x18F:
000b3c 94e8      	CLT
000b3d f846      	BLD  R4,6
                 ; 0000 02D1                         gis_val1=(reg[0][Y_01]);
                 _0x18E:
000b3e 940e 1923 	CALL SUBOPT_0x2B
                 _0x3B7:
                +
000b40 8bed     +STD Y + 21 , R30
000b41 8bfe     +STD Y + 21 + 1 , R31
000b42 8b6f     +STD Y + 21 + 2 , R22
000b43 8f78     +STD Y + 21 + 3 , R23
                 	__PUTD1S 21
                 ; 0000 02D2                         }
                 ; 0000 02D3                         key_enter_press=0;
000b44 94e8      	CLT
000b45 f836      	BLD  R3,6
                 ; 0000 02D4                 break;
                 ; 0000 02D5         default:      break;}}
                 _0x193:
                 ; 0000 02D6         else   {
000b46 c029      	RJMP _0x194
                 _0x185:
                 ; 0000 02D7                         if (adc_value2>gis_val1){//if (adc_value2>(reg[0,Y_01]*(1+reg[0,A_01]/100))) {
000b47 940e 1afa 	CALL SUBOPT_0x69
000b49 f009      	BREQ PC+2
000b4a f410      	BRCC PC+3
000b4b 940c 0b5e 	JMP  _0x195
                 ; 0000 02D8                          alarm1=1;
000b4d 9468      	SET
000b4e f844      	BLD  R4,4
                 ; 0000 02D9                         gis_val1=(reg[0][Y_01])*(1-reg[0][A_01]/100);}
000b4f 940e 1923 	CALL SUBOPT_0x2B
000b51 937f      	PUSH R23
000b52 936f      	PUSH R22
000b53 93ff      	PUSH R31
000b54 93ef      	PUSH R30
000b55 940e 1aff 	CALL SUBOPT_0x6A
000b57 91af      	POP  R26
000b58 91bf      	POP  R27
000b59 918f      	POP  R24
000b5a 919f      	POP  R25
000b5b 940e 1e0f 	CALL __MULF12
000b5d c00e      	RJMP _0x3B8
                 ; 0000 02DA                         else
                 _0x195:
                 ; 0000 02DB                         {
                 ; 0000 02DC                          alarm1=0;flag_start_pause1=0;
000b5e 940e 1b10 	CALL SUBOPT_0x6B
                 ; 0000 02DD                         if ((reg[0][P___]==0)||(reg[0][P___]==1)&&(reg[0][A_14]==0))alarm_alarm1=0;
000b60 f039      	BREQ _0x198
000b61 940e 1b1a 	CALL SUBOPT_0x6C
000b63 f419      	BRNE _0x199
000b64 940e 1b22 	CALL SUBOPT_0x6D
000b66 f009      	BREQ _0x198
                 _0x199:
000b67 c002      	RJMP _0x197
                 _0x198:
000b68 94e8      	CLT
000b69 f846      	BLD  R4,6
                 ; 0000 02DE                         gis_val1=(reg[0][Y_01]);
                 _0x197:
000b6a 940e 1923 	CALL SUBOPT_0x2B
                 _0x3B8:
                +
000b6c 8bed     +STD Y + 21 , R30
000b6d 8bfe     +STD Y + 21 + 1 , R31
000b6e 8b6f     +STD Y + 21 + 2 , R22
000b6f 8f78     +STD Y + 21 + 3 , R23
                 	__PUTD1S 21
                 ; 0000 02DF                         }
                 ; 0000 02E0                        // key_enter_press_switch1=0;
                 ; 0000 02E1                 }
                 _0x194:
                 ; 0000 02E2         if ((alarm2==1)&&(alarm_alarm2==1)){
000b70 940e 186a 	CALL SUBOPT_0xF
000b72 f419      	BRNE _0x19D
000b73 940e 1860 	CALL SUBOPT_0xD
000b75 f009      	BREQ _0x19E
                 _0x19D:
000b76 c031      	RJMP _0x19C
                 _0x19E:
                 ; 0000 02E3         switch(key_enter_press){
000b77 e0e0      	LDI  R30,0
000b78 fc36      	SBRC R3,6
000b79 e0e1      	LDI  R30,1
                 ; 0000 02E4         case 1:
000b7a 30e1      	CPI  R30,LOW(0x1)
000b7b f559      	BRNE _0x1AA
                 ; 0000 02E5                         if (adc_value2>gis_val2)//if (adc_value2>(reg[0,Y_02]*(1+reg[0,A_01]/100)))
000b7c 940e 1b29 	CALL SUBOPT_0x6E
000b7e f009      	BREQ PC+2
000b7f f410      	BRCC PC+3
000b80 940c 0b93 	JMP  _0x1A3
                 ; 0000 02E6                                 {alarm2=1;
000b82 9468      	SET
000b83 f845      	BLD  R4,5
                 ; 0000 02E7                                 gis_val2=(reg[0][Y_02])*(1-reg[0][A_01]/100);}
000b84 940e 1928 	CALL SUBOPT_0x2C
000b86 937f      	PUSH R23
000b87 936f      	PUSH R22
000b88 93ff      	PUSH R31
000b89 93ef      	PUSH R30
000b8a 940e 1aff 	CALL SUBOPT_0x6A
000b8c 91af      	POP  R26
000b8d 91bf      	POP  R27
000b8e 918f      	POP  R24
000b8f 919f      	POP  R25
000b90 940e 1e0f 	CALL __MULF12
000b92 c00e      	RJMP _0x3B9
                 ; 0000 02E8                         else
                 _0x1A3:
                 ; 0000 02E9                                 {
                 ; 0000 02EA                                 alarm2=0;flag_start_pause2=0;
000b93 940e 1b2e 	CALL SUBOPT_0x6F
                 ; 0000 02EB                                 if ((reg[0][P___]==0)||(reg[0][P___]==1)&&(reg[0][A_15]==0))alarm_alarm2=0;
000b95 f039      	BREQ _0x1A6
000b96 940e 1b1a 	CALL SUBOPT_0x6C
000b98 f419      	BRNE _0x1A7
000b99 940e 1b38 	CALL SUBOPT_0x70
000b9b f009      	BREQ _0x1A6
                 _0x1A7:
000b9c c002      	RJMP _0x1A5
                 _0x1A6:
000b9d 94e8      	CLT
000b9e f847      	BLD  R4,7
                 ; 0000 02EC                                 gis_val2=(reg[0][Y_02]);
                 _0x1A5:
000b9f 940e 1928 	CALL SUBOPT_0x2C
                 _0x3B9:
                +
000ba1 8be9     +STD Y + 17 , R30
000ba2 8bfa     +STD Y + 17 + 1 , R31
000ba3 8b6b     +STD Y + 17 + 2 , R22
000ba4 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
                 ; 0000 02ED                                 }
                 ; 0000 02EE                        key_enter_press=0;
000ba5 94e8      	CLT
000ba6 f836      	BLD  R3,6
                 ; 0000 02EF                 break;
                 ; 0000 02F0         default: break;}}
                 _0x1AA:
                 ; 0000 02F1         else {
000ba7 c029      	RJMP _0x1AB
                 _0x19C:
                 ; 0000 02F2                 if (adc_value2>gis_val2)//if (adc_value2>(reg[0,Y_02]*(1+reg[0,A_01]/100)))
000ba8 940e 1b29 	CALL SUBOPT_0x6E
000baa f009      	BREQ PC+2
000bab f410      	BRCC PC+3
000bac 940c 0bbf 	JMP  _0x1AC
                 ; 0000 02F3                    {alarm2=1;
000bae 9468      	SET
000baf f845      	BLD  R4,5
                 ; 0000 02F4                    gis_val2=(reg[0][Y_02])*(1-reg[0][A_01]/100);}
000bb0 940e 1928 	CALL SUBOPT_0x2C
000bb2 937f      	PUSH R23
000bb3 936f      	PUSH R22
000bb4 93ff      	PUSH R31
000bb5 93ef      	PUSH R30
000bb6 940e 1aff 	CALL SUBOPT_0x6A
000bb8 91af      	POP  R26
000bb9 91bf      	POP  R27
000bba 918f      	POP  R24
000bbb 919f      	POP  R25
000bbc 940e 1e0f 	CALL __MULF12
000bbe c00e      	RJMP _0x3BA
                 ; 0000 02F5                 else
                 _0x1AC:
                 ; 0000 02F6                    {
                 ; 0000 02F7                    alarm2=0;flag_start_pause2=0;
000bbf 940e 1b2e 	CALL SUBOPT_0x6F
                 ; 0000 02F8                    if ((reg[0][P___]==0)||(reg[0][P___]==1)&&(reg[0][A_15]==0))alarm_alarm2=0;
000bc1 f039      	BREQ _0x1AF
000bc2 940e 1b1a 	CALL SUBOPT_0x6C
000bc4 f419      	BRNE _0x1B0
000bc5 940e 1b38 	CALL SUBOPT_0x70
000bc7 f009      	BREQ _0x1AF
                 _0x1B0:
000bc8 c002      	RJMP _0x1AE
                 _0x1AF:
000bc9 94e8      	CLT
000bca f847      	BLD  R4,7
                 ; 0000 02F9                    gis_val2=(reg[0][Y_02]);
                 _0x1AE:
000bcb 940e 1928 	CALL SUBOPT_0x2C
                 _0x3BA:
                +
000bcd 8be9     +STD Y + 17 , R30
000bce 8bfa     +STD Y + 17 + 1 , R31
000bcf 8b6b     +STD Y + 17 + 2 , R22
000bd0 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
                 ; 0000 02FA                    }
                 ; 0000 02FB                // key_enter_press_switch1=0;
                 ; 0000 02FC               }
                 _0x1AB:
                 ; 0000 02FD         //-------------------------------------------------------------------//
                 ; 0000 02FE         //
                 ; 0000 02FF         //добавить маску и блокировку
                 ; 0000 0300         //
                 ; 0000 0301         //-------------------------------------------------------------------//
                 ; 0000 0302 
                 ; 0000 0303 
                 ; 0000 0304 
                 ; 0000 0305         //-------------------------------------------------------------------//
                 ; 0000 0306 
                 ; 0000 0307         //-------------------------------------------------------------------//
                 ; 0000 0308         //пауза 1,2
                 ; 0000 0309         //-------------------------------------------------------------------//
                 ; 0000 030A         if (alarm_alarm1==1){relay_alarm1=1;}
000bd1 940e 185b 	CALL SUBOPT_0xC
000bd3 f411      	BRNE _0x1B3
000bd4 9ac0      	SBI  0x18,0
                 ; 0000 030B         else relay_alarm1=0;
000bd5 c001      	RJMP _0x1B6
                 _0x1B3:
000bd6 98c0      	CBI  0x18,0
                 ; 0000 030C         if (alarm_alarm2==1){relay_alarm2=1;}
                 _0x1B6:
000bd7 940e 1860 	CALL SUBOPT_0xD
000bd9 f411      	BRNE _0x1B9
000bda 9ac1      	SBI  0x18,1
                 ; 0000 030D         else relay_alarm2=0;
000bdb c001      	RJMP _0x1BC
                 _0x1B9:
000bdc 98c1      	CBI  0x18,1
                 ; 0000 030E 
                 ; 0000 030F         if ((flag_start_pause1==1))//&&(alarm_alarm1==0))
                 _0x1BC:
000bdd e0a0      	LDI  R26,0
000bde fcf0      	SBRC R15,0
000bdf e0a1      	LDI  R26,1
000be0 30a1      	CPI  R26,LOW(0x1)
000be1 f4d9      	BRNE _0x1BF
                 ; 0000 0310                 {
                 ; 0000 0311                 if ((sys_time-time_pause1)>(reg[0][Z_01]*800)){alarm_alarm1=1;}
                +
000be2 ade9     +LDD R30 , Y + 57
000be3 adfa     +LDD R31 , Y + 57 + 1
000be4 ad6b     +LDD R22 , Y + 57 + 2
000be5 ad7c     +LDD R23 , Y + 57 + 3
                 	__GETD1S 57
000be6 940e 1b3f 	CALL SUBOPT_0x71
000be8 937f      	PUSH R23
000be9 936f      	PUSH R22
000bea 93ff      	PUSH R31
000beb 93ef      	PUSH R30
                +
000bec e0ac     +LDI R26 , LOW ( _reg + 12 )
000bed e0b0     +LDI R27 , HIGH ( _reg + 12 )
                 	__POINTW2MN _reg,12
000bee 940e 1b4a 	CALL SUBOPT_0x72
000bf0 91af      	POP  R26
000bf1 91bf      	POP  R27
000bf2 918f      	POP  R24
000bf3 919f      	POP  R25
000bf4 940e 1ea2 	CALL __CMPF12
000bf6 f009      	BREQ PC+2
000bf7 f410      	BRCC PC+3
000bf8 940c 0bfc 	JMP  _0x1C0
000bfa 9468      	SET
000bfb f846      	BLD  R4,6
                 ; 0000 0312                 }
                 _0x1C0:
                 ; 0000 0313         else if (alarm1==1)
000bfc c029      	RJMP _0x1C1
                 _0x1BF:
000bfd 940e 1865 	CALL SUBOPT_0xE
000bff f531      	BRNE _0x1C2
                 ; 0000 0314                 {
                 ; 0000 0315                 if ( ( (reg[0][C___]==1) && (reg[0][A_02]==1) ) ){signal=1;buzer_buzer_en=1;}
000c00 940e 1b53 	CALL SUBOPT_0x73
000c02 940e 1b1a 	CALL SUBOPT_0x6C
000c04 f429      	BRNE _0x1C4
000c05 940e 1b58 	CALL SUBOPT_0x74
000c07 940e 1b1a 	CALL SUBOPT_0x6C
000c09 f009      	BREQ _0x1C5
                 _0x1C4:
000c0a c003      	RJMP _0x1C3
                 _0x1C5:
000c0b 9468      	SET
000c0c f852      	BLD  R5,2
000c0d f826      	BLD  R2,6
                 ; 0000 0316                 if ( (reg[0][P___]==0) || ( (reg[0][P___]==1) && (reg[0][A_03]==1) ) )
                 _0x1C3:
000c0e 940e 1b5d 	CALL SUBOPT_0x75
000c10 f059      	BREQ _0x1C7
000c11 940e 1b1a 	CALL SUBOPT_0x6C
000c13 f439      	BRNE _0x1C8
                +
000c14 e2a4     +LDI R26 , LOW ( _reg + 36 )
000c15 e0b0     +LDI R27 , HIGH ( _reg + 36 )
                 	__POINTW2MN _reg,36
000c16 940e 1ce6 	CALL __EEPROMRDD
000c18 940e 1b1a 	CALL SUBOPT_0x6C
000c1a f009      	BREQ _0x1C7
                 _0x1C8:
000c1b c00a      	RJMP _0x1C6
                 _0x1C7:
                 ; 0000 0317                         {
                 ; 0000 0318                         time_pause1=sys_time;
000c1c 940e 1827 	CALL SUBOPT_0x3
000c1e 940e 1d87 	CALL __CDF1
                +
000c20 afe9     +STD Y + 57 , R30
000c21 affa     +STD Y + 57 + 1 , R31
000c22 af6b     +STD Y + 57 + 2 , R22
000c23 af7c     +STD Y + 57 + 3 , R23
                 	__PUTD1S 57
                 ; 0000 0319                         flag_start_pause1=1;
000c24 9468      	SET
000c25 f8f0      	BLD  R15,0
                 ; 0000 031A                         }
                 ; 0000 031B                 }
                 _0x1C6:
                 ; 0000 031C         if ((alarm1==0)&&(alarm2==0))
                 _0x1C2:
                 _0x1C1:
000c26 e0a0      	LDI  R26,0
000c27 fc44      	SBRC R4,4
000c28 e0a1      	LDI  R26,1
000c29 30a0      	CPI  R26,LOW(0x0)
000c2a f429      	BRNE _0x1CC
000c2b e0a0      	LDI  R26,0
000c2c fc45      	SBRC R4,5
000c2d e0a1      	LDI  R26,1
000c2e 30a0      	CPI  R26,LOW(0x0)
000c2f f009      	BREQ _0x1CD
                 _0x1CC:
000c30 c027      	RJMP _0x1CB
                 _0x1CD:
                 ; 0000 031D                 {
                 ; 0000 031E                 if (((alarm_alarm1==0)||((alarm_alarm1==1)&&(reg[0][A_14]==0)))&&((alarm_alarm2==0)||((alarm_alarm2==1)&&(reg[0][A_15]==0)))){signal=0;buzer_buzer_en=0;}
000c31 940e 187c 	CALL SUBOPT_0x13
000c33 f039      	BREQ _0x1CF
000c34 940e 185b 	CALL SUBOPT_0xC
000c36 f419      	BRNE _0x1D0
000c37 940e 1b22 	CALL SUBOPT_0x6D
000c39 f009      	BREQ _0x1CF
                 _0x1D0:
000c3a c00b      	RJMP _0x1D3
                 _0x1CF:
000c3b 940e 1877 	CALL SUBOPT_0x12
000c3d f039      	BREQ _0x1D4
000c3e 940e 1860 	CALL SUBOPT_0xD
000c40 f419      	BRNE _0x1D5
000c41 940e 1b38 	CALL SUBOPT_0x70
000c43 f009      	BREQ _0x1D4
                 _0x1D5:
000c44 c001      	RJMP _0x1D3
                 _0x1D4:
000c45 c001      	RJMP _0x1D8
                 _0x1D3:
000c46 c003      	RJMP _0x1CE
                 _0x1D8:
000c47 94e8      	CLT
000c48 f852      	BLD  R5,2
000c49 f826      	BLD  R2,6
                 ; 0000 031F                 if ((blok1==0)&&(blok2==0)){signal=0;buzer_buzer_en=0;}
                 _0x1CE:
000c4a e0a0      	LDI  R26,0
000c4b fc50      	SBRC R5,0
000c4c e0a1      	LDI  R26,1
000c4d 30a0      	CPI  R26,LOW(0x0)
000c4e f429      	BRNE _0x1DA
000c4f e0a0      	LDI  R26,0
000c50 fc51      	SBRC R5,1
000c51 e0a1      	LDI  R26,1
000c52 30a0      	CPI  R26,LOW(0x0)
000c53 f009      	BREQ _0x1DB
                 _0x1DA:
000c54 c003      	RJMP _0x1D9
                 _0x1DB:
000c55 94e8      	CLT
000c56 f852      	BLD  R5,2
000c57 f826      	BLD  R2,6
                 ; 0000 0320                 }
                 _0x1D9:
                 ; 0000 0321         if (reg[0][C___]==0)buzer_buzer_en=0;
                 _0x1CB:
000c58 940e 1b53 	CALL SUBOPT_0x73
000c5a 940e 1ec2 	CALL __CPD10
000c5c f411      	BRNE _0x1DC
000c5d 94e8      	CLT
000c5e f826      	BLD  R2,6
                 ; 0000 0322         if ((flag_start_pause2==1))//&&(alarm_alarm2==0))
                 _0x1DC:
000c5f e0a0      	LDI  R26,0
000c60 fcf1      	SBRC R15,1
000c61 e0a1      	LDI  R26,1
000c62 30a1      	CPI  R26,LOW(0x1)
000c63 f4d9      	BRNE _0x1DD
                 ; 0000 0323                 {
                 ; 0000 0324                 if ((sys_time-time_pause2)>(reg[0][Z_02]*800))alarm_alarm2=1;
                +
000c64 a9ed     +LDD R30 , Y + 53
000c65 a9fe     +LDD R31 , Y + 53 + 1
000c66 a96f     +LDD R22 , Y + 53 + 2
000c67 ad78     +LDD R23 , Y + 53 + 3
                 	__GETD1S 53
000c68 940e 1b3f 	CALL SUBOPT_0x71
000c6a 937f      	PUSH R23
000c6b 936f      	PUSH R22
000c6c 93ff      	PUSH R31
000c6d 93ef      	PUSH R30
                +
000c6e e1a0     +LDI R26 , LOW ( _reg + 16 )
000c6f e0b0     +LDI R27 , HIGH ( _reg + 16 )
                 	__POINTW2MN _reg,16
000c70 940e 1b4a 	CALL SUBOPT_0x72
000c72 91af      	POP  R26
000c73 91bf      	POP  R27
000c74 918f      	POP  R24
000c75 919f      	POP  R25
000c76 940e 1ea2 	CALL __CMPF12
000c78 f009      	BREQ PC+2
000c79 f410      	BRCC PC+3
000c7a 940c 0c7e 	JMP  _0x1DE
000c7c 9468      	SET
000c7d f847      	BLD  R4,7
                 ; 0000 0325                 }
                 _0x1DE:
                 ; 0000 0326         else if (alarm2==1)
000c7e c029      	RJMP _0x1DF
                 _0x1DD:
000c7f 940e 186a 	CALL SUBOPT_0xF
000c81 f531      	BRNE _0x1E0
                 ; 0000 0327                 {
                 ; 0000 0328                 if (((reg[0][C___]==1)&&(reg[0][A_02]==2))){signal=1;buzer_buzer_en=1;}
000c82 940e 1b53 	CALL SUBOPT_0x73
000c84 940e 1b1a 	CALL SUBOPT_0x6C
000c86 f429      	BRNE _0x1E2
000c87 940e 1b58 	CALL SUBOPT_0x74
000c89 940e 1b64 	CALL SUBOPT_0x76
000c8b f009      	BREQ _0x1E3
                 _0x1E2:
000c8c c003      	RJMP _0x1E1
                 _0x1E3:
000c8d 9468      	SET
000c8e f852      	BLD  R5,2
000c8f f826      	BLD  R2,6
                 ; 0000 0329                 if ((reg[0][P___]==0)||((reg[0][P___]==1)&&(reg[0][A_04]==1)))
                 _0x1E1:
000c90 940e 1b5d 	CALL SUBOPT_0x75
000c92 f059      	BREQ _0x1E5
000c93 940e 1b1a 	CALL SUBOPT_0x6C
000c95 f439      	BRNE _0x1E6
                +
000c96 e2a8     +LDI R26 , LOW ( _reg + 40 )
000c97 e0b0     +LDI R27 , HIGH ( _reg + 40 )
                 	__POINTW2MN _reg,40
000c98 940e 1ce6 	CALL __EEPROMRDD
000c9a 940e 1b1a 	CALL SUBOPT_0x6C
000c9c f009      	BREQ _0x1E5
                 _0x1E6:
000c9d c00a      	RJMP _0x1E4
                 _0x1E5:
                 ; 0000 032A                         {
                 ; 0000 032B                         time_pause2=sys_time;
000c9e 940e 1827 	CALL SUBOPT_0x3
000ca0 940e 1d87 	CALL __CDF1
                +
000ca2 abed     +STD Y + 53 , R30
000ca3 abfe     +STD Y + 53 + 1 , R31
000ca4 ab6f     +STD Y + 53 + 2 , R22
000ca5 af78     +STD Y + 53 + 3 , R23
                 	__PUTD1S 53
                 ; 0000 032C                         flag_start_pause2=1;
000ca6 9468      	SET
000ca7 f8f1      	BLD  R15,1
                 ; 0000 032D                         }
                 ; 0000 032E                 }
                 _0x1E4:
                 ; 0000 032F         //-------------------------------------------------------------------//
                 ; 0000 0330 
                 ; 0000 0331 
                 ; 0000 0332 
                 ; 0000 0333 
                 ; 0000 0334 
                 ; 0000 0335 
                 ; 0000 0336 
                 ; 0000 0337 
                 ; 0000 0338 
                 ; 0000 0339 
                 ; 0000 033A 
                 ; 0000 033B 
                 ; 0000 033C         //-------------------------------------------------------------------//
                 ; 0000 033D         //      МЕНЮ
                 ; 0000 033E         //-------------------------------------------------------------------//
                 ; 0000 033F         //возврат из меню
                 ; 0000 0340         //-------------------------------------------------------------------//
                 ; 0000 0341         if (((sys_time-start_time_mode)>reg[0][A_13]*1000)){mode=0;f_m1=0;}
                 _0x1E0:
                 _0x1DF:
000ca8 91a0 0225 	LDS  R26,_start_time_mode
000caa 91b0 0226 	LDS  R27,_start_time_mode+1
000cac 9180 0227 	LDS  R24,_start_time_mode+2
000cae 9190 0228 	LDS  R25,_start_time_mode+3
000cb0 940e 18d4 	CALL SUBOPT_0x20
000cb2 937f      	PUSH R23
000cb3 936f      	PUSH R22
000cb4 93ff      	PUSH R31
000cb5 93ef      	PUSH R30
                +
000cb6 e4ac     +LDI R26 , LOW ( _reg + 76 )
000cb7 e0b0     +LDI R27 , HIGH ( _reg + 76 )
                 	__POINTW2MN _reg,76
000cb8 940e 1a02 	CALL SUBOPT_0x49
000cba 91af      	POP  R26
000cbb 91bf      	POP  R27
000cbc 918f      	POP  R24
000cbd 919f      	POP  R25
000cbe 940e 1cd6 	CALL __CDF2
000cc0 940e 1ea2 	CALL __CMPF12
000cc2 f009      	BREQ PC+2
000cc3 f410      	BRCC PC+3
000cc4 940c 0ccb 	JMP  _0x1E9
000cc6 e0e0      	LDI  R30,LOW(0)
000cc7 93e0 01f9 	STS  _mode,R30
000cc9 94e8      	CLT
000cca f8f2      	BLD  R15,2
                 ; 0000 0342         //-------------------------------------------------------------------//
                 ; 0000 0343 
                 ; 0000 0344 
                 ; 0000 0345 
                 ; 0000 0346         if ((key_enter_press_switch==1)&&(mode==0)){key_enter_press_switch=0;key_enter_press_switch1=1;}
                 _0x1E9:
000ccb e0a0      	LDI  R26,0
000ccc fc42      	SBRC R4,2
000ccd e0a1      	LDI  R26,1
000cce 30a1      	CPI  R26,LOW(0x1)
000ccf f421      	BRNE _0x1EB
000cd0 91a0 01f9 	LDS  R26,_mode
000cd2 30a0      	CPI  R26,LOW(0x0)
000cd3 f009      	BREQ _0x1EC
                 _0x1EB:
000cd4 c004      	RJMP _0x1EA
                 _0x1EC:
000cd5 94e8      	CLT
000cd6 f842      	BLD  R4,2
000cd7 9468      	SET
000cd8 f8f3      	BLD  R15,3
                 ; 0000 0347 
                 ; 0000 0348 
                 ; 0000 0349         //-------------------------------------------------------------------//
                 ; 0000 034A         //вход в инженерное меню
                 ; 0000 034B         //-------------------------------------------------------------------//
                 ; 0000 034C         if ((key_enter_press_switch1==1)&&(key_enter==1)&&(key_mode==0))
                 _0x1EA:
000cd9 e0a0      	LDI  R26,0
000cda fcf3      	SBRC R15,3
000cdb e0a1      	LDI  R26,1
000cdc 30a1      	CPI  R26,LOW(0x1)
000cdd f441      	BRNE _0x1EE
000cde 940e 1b6c 	CALL SUBOPT_0x77
000ce0 f429      	BRNE _0x1EE
000ce1 e0a0      	LDI  R26,0
000ce2 fc27      	SBRC R2,7
000ce3 e0a1      	LDI  R26,1
000ce4 30a0      	CPI  R26,LOW(0x0)
000ce5 f009      	BREQ _0x1EF
                 _0x1EE:
000ce6 c00c      	RJMP _0x1ED
                 _0x1EF:
                 ; 0000 034D                 {if ((sys_time-whait_time)>1500){mode=10;start_time_mode=sys_time;key_enter_press_switch1=0;}}
000ce7 940e 1b71 	CALL SUBOPT_0x78
000ce9 940e 1b7a 	CALL SUBOPT_0x79
000ceb f03c      	BRLT _0x1F0
000cec e0ea      	LDI  R30,LOW(10)
000ced 93e0 01f9 	STS  _mode,R30
000cef 940e 1b82 	CALL SUBOPT_0x7A
000cf1 94e8      	CLT
000cf2 f8f3      	BLD  R15,3
                 _0x1F0:
                 ; 0000 034E         //-------------------------------------------------------------------//
                 ; 0000 034F 
                 ; 0000 0350         //-------------------------------------------------------------------//
                 ; 0000 0351         //Ожидание выключения питания
                 ; 0000 0352         //-------------------------------------------------------------------//
                 ; 0000 0353         if ((key_enter_press_switch1==1)&&(key_enter==1)&&(key_mode==1)&&(key_2==1)&&(key_3==1))
                 _0x1ED:
000cf3 e0a0      	LDI  R26,0
000cf4 fcf3      	SBRC R15,3
000cf5 e0a1      	LDI  R26,1
000cf6 30a1      	CPI  R26,LOW(0x1)
000cf7 f471      	BRNE _0x1F2
000cf8 940e 1b6c 	CALL SUBOPT_0x77
000cfa f459      	BRNE _0x1F2
000cfb e0a0      	LDI  R26,0
000cfc fc27      	SBRC R2,7
000cfd e0a1      	LDI  R26,1
000cfe 30a1      	CPI  R26,LOW(0x1)
000cff f431      	BRNE _0x1F2
000d00 940e 183b 	CALL SUBOPT_0x6
000d02 f419      	BRNE _0x1F2
000d03 940e 1840 	CALL SUBOPT_0x7
000d05 f009      	BREQ _0x1F3
                 _0x1F2:
000d06 c006      	RJMP _0x1F1
                 _0x1F3:
                 ; 0000 0354                 {if ((sys_time-whait_time)>1500) {goto power_off;}}
000d07 940e 1b71 	CALL SUBOPT_0x78
000d09 940e 1b7a 	CALL SUBOPT_0x79
000d0b f00c      	BRLT _0x1F4
000d0c cb3b      	RJMP _0x12D
                 _0x1F4:
                 ; 0000 0355         //-------------------------------------------------------------------//
                 ; 0000 0356 
                 ; 0000 0357         //-------------------------------------------------------------------//
                 ; 0000 0358         //что показывать в mode=0
                 ; 0000 0359         //-------------------------------------------------------------------//
                 ; 0000 035A         if (mode==0)
                 _0x1F1:
000d0d 91e0 01f9 	LDS  R30,_mode
000d0f 30e0      	CPI  R30,0
000d10 f011      	BREQ PC+3
000d11 940c 0d93 	JMP _0x1F5
                 ; 0000 035B                 {
                 ; 0000 035C                 count_register=1;
000d13 e0e1      	LDI  R30,LOW(1)
000d14 93e0 021f 	STS  _count_register,R30
                 ; 0000 035D                 point=work_point;
000d16 91e0 01fb 	LDS  R30,_work_point
000d18 93e0 01fa 	STS  _point,R30
                 ; 0000 035E                 if (((alarm_alarm1==0)||((alarm_alarm1==1)&&(reg[0][A_14]==0)))&&((alarm_alarm2==0)||((alarm_alarm2==1)&&(reg[0][A_15]==0))))
000d1a 940e 187c 	CALL SUBOPT_0x13
000d1c f039      	BREQ _0x1F7
000d1d 940e 185b 	CALL SUBOPT_0xC
000d1f f419      	BRNE _0x1F8
000d20 940e 1b22 	CALL SUBOPT_0x6D
000d22 f009      	BREQ _0x1F7
                 _0x1F8:
000d23 c00b      	RJMP _0x1FB
                 _0x1F7:
000d24 940e 1877 	CALL SUBOPT_0x12
000d26 f039      	BREQ _0x1FC
000d27 940e 1860 	CALL SUBOPT_0xD
000d29 f419      	BRNE _0x1FD
000d2a 940e 1b38 	CALL SUBOPT_0x70
000d2c f009      	BREQ _0x1FC
                 _0x1FD:
000d2d c001      	RJMP _0x1FB
                 _0x1FC:
000d2e c001      	RJMP _0x200
                 _0x1FB:
000d2f c025      	RJMP _0x1F6
                 _0x200:
                 ; 0000 035F                         {
                 ; 0000 0360                         if (reg[0][A_05]==0)adc_value3=adc_value1;
000d30 940e 1b8c 	CALL SUBOPT_0x7B
000d32 940e 1ec2 	CALL __CPD10
000d34 f419      	BRNE _0x201
000d35 940e 1b91 	CALL SUBOPT_0x7C
000d37 c015      	RJMP _0x3BB
                 ; 0000 0361                         else if (reg[0][A_05]==2){adc_value3=buf[buf_end];point=1;}
                 _0x201:
000d38 940e 1b8c 	CALL SUBOPT_0x7B
000d3a 940e 1b64 	CALL SUBOPT_0x76
000d3c f471      	BRNE _0x203
000d3d 940e 18d8 	CALL SUBOPT_0x21
000d3f 940e 190f 	CALL SUBOPT_0x27
000d41 e3a6      	LDI  R26,LOW(_adc_value3)
000d42 e0b2      	LDI  R27,HIGH(_adc_value3)
000d43 940e 1919 	CALL SUBOPT_0x29
000d45 940e 1cc6 	CALL __PUTDP1
000d47 e0e1      	LDI  R30,LOW(1)
000d48 93e0 01fa 	STS  _point,R30
                 ; 0000 0362                         else adc_value3=adc_value2;
000d4a c00a      	RJMP _0x204
                 _0x203:
000d4b 940e 1b9a 	CALL SUBOPT_0x7D
                 _0x3BB:
000d4d 93e0 0236 	STS  _adc_value3,R30
000d4f 93f0 0237 	STS  _adc_value3+1,R31
000d51 9360 0238 	STS  _adc_value3+2,R22
000d53 9370 0239 	STS  _adc_value3+3,R23
                 ; 0000 0363                         }
                 _0x204:
                 ; 0000 0364                 hex2dec(adc_value3);
                 _0x1F6:
000d55 940e 1ba3 	CALL SUBOPT_0x7E
                 ; 0000 0365                 if (point==1)       {set_led_on(0,0,0,1,0,0,0,0);set_led_off(0,0,0,1,0,0,0,0);}
000d57 f451      	BRNE _0x205
000d58 940e 19ed 	CALL SUBOPT_0x45
000d5a 940e 1bb3 	CALL SUBOPT_0x7F
000d5c 940e 1bb6 	CALL SUBOPT_0x80
000d5e e0e1      	LDI  R30,LOW(1)
000d5f 93ea      	ST   -Y,R30
000d60 e0e0      	LDI  R30,LOW(0)
000d61 c02a      	RJMP _0x3BC
                 ; 0000 0366                 else if (point==2)  {set_led_on(0,0,0,1,0,0,1,0);set_led_off(0,0,0,1,0,0,1,0);}
                 _0x205:
000d62 91a0 01fa 	LDS  R26,_point
000d64 30a2      	CPI  R26,LOW(0x2)
000d65 f451      	BRNE _0x207
000d66 940e 19ed 	CALL SUBOPT_0x45
000d68 940e 1a41 	CALL SUBOPT_0x52
000d6a 940e 1a3c 	CALL SUBOPT_0x51
000d6c 940e 1a41 	CALL SUBOPT_0x52
000d6e e0e1      	LDI  R30,LOW(1)
000d6f c020      	RJMP _0x3BD
                 ; 0000 0367                 else if (point==3)  {set_led_on(0,0,0,1,0,1,0,0);set_led_off(0,0,0,1,0,1,0,0);}
                 _0x207:
000d70 91a0 01fa 	LDS  R26,_point
000d72 30a3      	CPI  R26,LOW(0x3)
000d73 f461      	BRNE _0x209
000d74 940e 19ed 	CALL SUBOPT_0x45
000d76 940e 1bb9 	CALL SUBOPT_0x81
000d78 940e 1a41 	CALL SUBOPT_0x52
000d7a 940e 19f6 	CALL SUBOPT_0x47
000d7c 940e 1bb9 	CALL SUBOPT_0x81
000d7e e0e1      	LDI  R30,LOW(1)
000d7f c00e      	RJMP _0x3BE
                 ; 0000 0368                 else if (point==4)  {set_led_on(0,0,0,1,1,0,0,0);set_led_off(0,0,0,1,1,0,0,0);}
                 _0x209:
000d80 91a0 01fa 	LDS  R26,_point
000d82 30a4      	CPI  R26,LOW(0x4)
000d83 f479      	BRNE _0x20B
000d84 940e 19ed 	CALL SUBOPT_0x45
000d86 940e 1bbe 	CALL SUBOPT_0x82
000d88 940e 19f6 	CALL SUBOPT_0x47
000d8a e0e1      	LDI  R30,LOW(1)
000d8b 93ea      	ST   -Y,R30
                 _0x3BC:
000d8c 93ea      	ST   -Y,R30
000d8d e0e0      	LDI  R30,LOW(0)
                 _0x3BE:
000d8e 93ea      	ST   -Y,R30
000d8f e0e0      	LDI  R30,LOW(0)
                 _0x3BD:
000d90 93ea      	ST   -Y,R30
000d91 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 0369                 }
                 _0x20B:
                 ; 0000 036A         //-------------------------------------------------------------------//
                 ; 0000 036B 
                 ; 0000 036C         //-------------------------------------------------------------------//
                 ; 0000 036D         //пользовательское меню
                 ; 0000 036E         //-------------------------------------------------------------------//
                 ; 0000 036F         if (mode==1)
                 _0x1F5:
000d93 91a0 01f9 	LDS  R26,_mode
000d95 30a1      	CPI  R26,LOW(0x1)
000d96 f011      	BREQ PC+3
000d97 940c 0de1 	JMP _0x20C
                 ; 0000 0370                 {
                 ; 0000 0371                 hex2dec(count_register);
000d99 91e0 021f 	LDS  R30,_count_register
000d9b 940e 1bc2 	CALL SUBOPT_0x83
                 ; 0000 0372                 ed=' ';
000d9d 940e 1a0b 	CALL SUBOPT_0x4A
                 ; 0000 0373                 switch (count_register)
                 ; 0000 0374                         {
                 ; 0000 0375                         case 2: tis='У';sot='_';des= 2 ;set_led_on(0,1,0,1,0,0,0,0);break;
000d9f f451      	BRNE _0x210
000da0 ede3      	LDI  R30,LOW(211)
000da1 93e0 01ff 	STS  _tis,R30
000da3 e5ef      	LDI  R30,LOW(95)
000da4 940e 198c 	CALL SUBOPT_0x36
000da6 940e 1a44 	CALL SUBOPT_0x53
000da8 e0e0      	LDI  R30,LOW(0)
000da9 c02a      	RJMP _0x3BF
                 ; 0000 0376                         case 3: tis= 3 ;sot='_';des= 1 ;set_led_on(0,0,1,1,0,0,0,0);break;
                 _0x210:
000daa 30e3      	CPI  R30,LOW(0x3)
000dab f411      	BRNE _0x211
000dac e0e3      	LDI  R30,LOW(3)
000dad c01d      	RJMP _0x3C0
                 ; 0000 0377                         case 4: tis= 3 ;sot='_';des= 2 ;set_led_on(0,1,0,1,0,0,0,0);break;
                 _0x211:
000dae 30e4      	CPI  R30,LOW(0x4)
000daf f451      	BRNE _0x212
000db0 e0e3      	LDI  R30,LOW(3)
000db1 93e0 01ff 	STS  _tis,R30
000db3 e5ef      	LDI  R30,LOW(95)
000db4 940e 198c 	CALL SUBOPT_0x36
000db6 940e 1a44 	CALL SUBOPT_0x53
000db8 e0e0      	LDI  R30,LOW(0)
000db9 c01a      	RJMP _0x3BF
                 ; 0000 0378                         case 5: tis='p';sot='_';des='_';set_led_on(0,0,0,1,0,0,0,0);break;
                 _0x212:
000dba 30e5      	CPI  R30,LOW(0x5)
000dbb f431      	BRNE _0x213
000dbc 940e 1a19 	CALL SUBOPT_0x4C
000dbe 940e 1bcb 	CALL SUBOPT_0x84
000dc0 e0e0      	LDI  R30,LOW(0)
000dc1 c012      	RJMP _0x3BF
                 ; 0000 0379                         case 6: tis='c';sot='_';des='_';set_led_on(0,0,0,1,0,0,0,0);break;
                 _0x213:
000dc2 30e6      	CPI  R30,LOW(0x6)
000dc3 f431      	BRNE _0x215
000dc4 940e 1a20 	CALL SUBOPT_0x4D
000dc6 940e 1bcb 	CALL SUBOPT_0x84
000dc8 e0e0      	LDI  R30,LOW(0)
000dc9 c00a      	RJMP _0x3BF
                 ; 0000 037A                         default:tis='У';sot='_';des= 1 ;set_led_on(0,0,1,1,0,0,0,0);break;
                 _0x215:
000dca ede3      	LDI  R30,LOW(211)
                 _0x3C0:
000dcb 93e0 01ff 	STS  _tis,R30
000dcd e5ef      	LDI  R30,LOW(95)
000dce 93e0 01fe 	STS  _sot,R30
000dd0 e0e1      	LDI  R30,LOW(1)
000dd1 940e 1bcb 	CALL SUBOPT_0x84
000dd3 e0e1      	LDI  R30,LOW(1)
                 _0x3BF:
000dd4 93ea      	ST   -Y,R30
000dd5 940e 1bb3 	CALL SUBOPT_0x7F
000dd7 e0e0      	LDI  R30,LOW(0)
000dd8 93ea      	ST   -Y,R30
000dd9 940e 03b2 	CALL _set_led_on
                 ; 0000 037B                         }
                 ; 0000 037C                 set_led_off(0,0,0,1,0,0,0,0);
000ddb 940e 19ed 	CALL SUBOPT_0x45
000ddd 940e 1bb3 	CALL SUBOPT_0x7F
000ddf 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 037D                 }
                 ; 0000 037E         //-------------------------------------------------------------------//
                 ; 0000 037F 
                 ; 0000 0380         //-------------------------------------------------------------------//
                 ; 0000 0381         //данные пользовательского меню
                 ; 0000 0382         //-------------------------------------------------------------------//
                 ; 0000 0383         if (mode==2)
                 _0x20C:
000de1 91a0 01f9 	LDS  R26,_mode
000de3 30a2      	CPI  R26,LOW(0x2)
000de4 f011      	BREQ PC+3
000de5 940c 0e3d 	JMP _0x216
                 ; 0000 0384                 {
                 ; 0000 0385                 if (count_register>6)count_register=1;
000de7 91a0 021f 	LDS  R26,_count_register
000de9 30a7      	CPI  R26,LOW(0x7)
000dea f018      	BRLO _0x217
000deb e0e1      	LDI  R30,LOW(1)
000dec 93e0 021f 	STS  _count_register,R30
                 ; 0000 0386                 if (count_register<3)point=work_point;
                 _0x217:
000dee 91a0 021f 	LDS  R26,_count_register
000df0 30a3      	CPI  R26,LOW(0x3)
000df1 f418      	BRSH _0x218
000df2 91e0 01fb 	LDS  R30,_work_point
000df4 c001      	RJMP _0x3C1
                 ; 0000 0387                 else point=1;
                 _0x218:
000df5 e0e1      	LDI  R30,LOW(1)
                 _0x3C1:
000df6 93e0 01fa 	STS  _point,R30
                 ; 0000 0388                 hex2dec(data_register);
000df8 940e 1a34 	CALL SUBOPT_0x50
                 ; 0000 0389                 if (point==1)       {set_led_on(0,0,0,0,0,0,0,0);set_led_off(0,0,0,0,0,0,0,0);}
000dfa 91a0 01fa 	LDS  R26,_point
000dfc 30a1      	CPI  R26,LOW(0x1)
000dfd f459      	BRNE _0x21A
000dfe 940e 19ed 	CALL SUBOPT_0x45
000e00 940e 19ed 	CALL SUBOPT_0x45
000e02 940e 19f2 	CALL SUBOPT_0x46
000e04 940e 19f6 	CALL SUBOPT_0x47
000e06 e0e0      	LDI  R30,LOW(0)
000e07 93ea      	ST   -Y,R30
000e08 c02d      	RJMP _0x3C2
                 ; 0000 038A                 else if (point==2)  {set_led_on(0,0,0,0,0,0,1,0);set_led_off(0,0,0,0,0,0,1,0);}
                 _0x21A:
000e09 91a0 01fa 	LDS  R26,_point
000e0b 30a2      	CPI  R26,LOW(0x2)
000e0c f451      	BRNE _0x21C
000e0d 940e 19ed 	CALL SUBOPT_0x45
000e0f 940e 19ed 	CALL SUBOPT_0x45
000e11 940e 1a3c 	CALL SUBOPT_0x51
000e13 940e 19ed 	CALL SUBOPT_0x45
000e15 e0e1      	LDI  R30,LOW(1)
000e16 c023      	RJMP _0x3C3
                 ; 0000 038B                 else if (point==3)  {set_led_on(0,0,0,0,0,1,0,0);set_led_off(0,0,0,0,0,1,0,0);}
                 _0x21C:
000e17 91a0 01fa 	LDS  R26,_point
000e19 30a3      	CPI  R26,LOW(0x3)
000e1a f461      	BRNE _0x21E
000e1b 940e 19ed 	CALL SUBOPT_0x45
000e1d 940e 19f2 	CALL SUBOPT_0x46
000e1f 940e 1a41 	CALL SUBOPT_0x52
000e21 940e 19f6 	CALL SUBOPT_0x47
000e23 940e 19f2 	CALL SUBOPT_0x46
000e25 e0e1      	LDI  R30,LOW(1)
000e26 c011      	RJMP _0x3C4
                 ; 0000 038C                 else if (point==4)  {set_led_on(0,0,0,0,1,0,0,0);set_led_off(0,0,0,0,1,0,0,0);}
                 _0x21E:
000e27 91a0 01fa 	LDS  R26,_point
000e29 30a4      	CPI  R26,LOW(0x4)
000e2a f491      	BRNE _0x220
000e2b 940e 19ed 	CALL SUBOPT_0x45
000e2d 940e 1a44 	CALL SUBOPT_0x53
000e2f 940e 19ed 	CALL SUBOPT_0x45
000e31 940e 19f6 	CALL SUBOPT_0x47
000e33 e0e0      	LDI  R30,LOW(0)
000e34 93ea      	ST   -Y,R30
000e35 e0e1      	LDI  R30,LOW(1)
                 _0x3C2:
000e36 93ea      	ST   -Y,R30
000e37 e0e0      	LDI  R30,LOW(0)
                 _0x3C4:
000e38 93ea      	ST   -Y,R30
000e39 e0e0      	LDI  R30,LOW(0)
                 _0x3C3:
000e3a 93ea      	ST   -Y,R30
000e3b 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 038D                 }
                 _0x220:
                 ; 0000 038E         //-------------------------------------------------------------------//
                 ; 0000 038F 
                 ; 0000 0390         //-------------------------------------------------------------------//
                 ; 0000 0391         //инженерное меню
                 ; 0000 0392         //-------------------------------------------------------------------//
                 ; 0000 0393         if (mode==10)
                 _0x216:
000e3d 91a0 01f9 	LDS  R26,_mode
000e3f 30aa      	CPI  R26,LOW(0xA)
000e40 f531      	BRNE _0x221
                 ; 0000 0394                 {
                 ; 0000 0395                 if (count_register<7) count_register=7;
000e41 91a0 021f 	LDS  R26,_count_register
000e43 30a7      	CPI  R26,LOW(0x7)
000e44 f418      	BRSH _0x222
000e45 e0e7      	LDI  R30,LOW(7)
000e46 93e0 021f 	STS  _count_register,R30
                 ; 0000 0396                 hex2dec(count_register-6);point=1;
                 _0x222:
000e48 91e0 021f 	LDS  R30,_count_register
000e4a 50e6      	SUBI R30,LOW(6)
000e4b 940e 1bc2 	CALL SUBOPT_0x83
000e4d e0e1      	LDI  R30,LOW(1)
000e4e 93e0 01fa 	STS  _point,R30
                 ; 0000 0397                 if (des==' ') des='_';
000e50 91a0 01fd 	LDS  R26,_des
000e52 32a0      	CPI  R26,LOW(0x20)
000e53 f419      	BRNE _0x223
000e54 e5ef      	LDI  R30,LOW(95)
000e55 93e0 01fd 	STS  _des,R30
                 ; 0000 0398                 tis='a';sot='_';
                 _0x223:
000e57 e6e1      	LDI  R30,LOW(97)
000e58 93e0 01ff 	STS  _tis,R30
000e5a e5ef      	LDI  R30,LOW(95)
000e5b 93e0 01fe 	STS  _sot,R30
                 ; 0000 0399                 set_led_on(0,0,0,1,0,0,0,0);
000e5d 940e 19ed 	CALL SUBOPT_0x45
000e5f 940e 1bb3 	CALL SUBOPT_0x7F
000e61 940e 1bb6 	CALL SUBOPT_0x80
                 ; 0000 039A                 set_led_off(0,0,0,1,0,0,0,0);
000e63 940e 1bb3 	CALL SUBOPT_0x7F
000e65 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 039B                 }
                 ; 0000 039C         //-------------------------------------------------------------------//
                 ; 0000 039D 
                 ; 0000 039E         //-------------------------------------------------------------------//
                 ; 0000 039F         //калибровка
                 ; 0000 03A0         //-------------------------------------------------------------------//
                 ; 0000 03A1         if ((mode==11)&&(count_register==A_16))
                 _0x221:
000e67 91a0 01f9 	LDS  R26,_mode
000e69 30ab      	CPI  R26,LOW(0xB)
000e6a f421      	BRNE _0x225
000e6b 91a0 021f 	LDS  R26,_count_register
000e6d 31a6      	CPI  R26,LOW(0x16)
000e6e f009      	BREQ _0x226
                 _0x225:
000e6f c05d      	RJMP _0x224
                 _0x226:
                 ; 0000 03A2                 {
                 ; 0000 03A3                 point=work_point;
000e70 91e0 01fb 	LDS  R30,_work_point
000e72 93e0 01fa 	STS  _point,R30
                 ; 0000 03A4                 k_k=data_register;
000e74 940e 1bce 	CALL SUBOPT_0x85
                +
000e76 a7e9     +STD Y + 41 , R30
000e77 a7fa     +STD Y + 41 + 1 , R31
000e78 a76b     +STD Y + 41 + 2 , R22
000e79 a77c     +STD Y + 41 + 3 , R23
                 	__PUTD1S 41
                 ; 0000 03A5                 if (reg[0][A_05]==0)adc_value3=adc_value1;
000e7a 940e 1b8c 	CALL SUBOPT_0x7B
000e7c 940e 1ec2 	CALL __CPD10
000e7e f419      	BRNE _0x227
000e7f 940e 1b91 	CALL SUBOPT_0x7C
000e81 c002      	RJMP _0x3C5
                 ; 0000 03A6                 else adc_value3=adc_value2;
                 _0x227:
000e82 940e 1b9a 	CALL SUBOPT_0x7D
                 _0x3C5:
000e84 93e0 0236 	STS  _adc_value3,R30
000e86 93f0 0237 	STS  _adc_value3+1,R31
000e88 9360 0238 	STS  _adc_value3+2,R22
000e8a 9370 0239 	STS  _adc_value3+3,R23
                 ; 0000 03A7                 hex2dec(adc_value3);
000e8c 940e 1ba3 	CALL SUBOPT_0x7E
                 ; 0000 03A8                 if (point==1)       {set_led_on(0,0,0,1,0,0,0,0);set_led_off(0,0,0,1,0,0,0,0);}
000e8e f451      	BRNE _0x229
000e8f 940e 19ed 	CALL SUBOPT_0x45
000e91 940e 1bb3 	CALL SUBOPT_0x7F
000e93 940e 1bb6 	CALL SUBOPT_0x80
000e95 e0e1      	LDI  R30,LOW(1)
000e96 93ea      	ST   -Y,R30
000e97 e0e0      	LDI  R30,LOW(0)
000e98 c02a      	RJMP _0x3C6
                 ; 0000 03A9                 else if (point==2)  {set_led_on(0,0,0,1,0,0,1,0);set_led_off(0,0,0,1,0,0,1,0);}
                 _0x229:
000e99 91a0 01fa 	LDS  R26,_point
000e9b 30a2      	CPI  R26,LOW(0x2)
000e9c f451      	BRNE _0x22B
000e9d 940e 19ed 	CALL SUBOPT_0x45
000e9f 940e 1a41 	CALL SUBOPT_0x52
000ea1 940e 1a3c 	CALL SUBOPT_0x51
000ea3 940e 1a41 	CALL SUBOPT_0x52
000ea5 e0e1      	LDI  R30,LOW(1)
000ea6 c020      	RJMP _0x3C7
                 ; 0000 03AA                 else if (point==3)  {set_led_on(0,0,0,1,0,1,0,0);set_led_off(0,0,0,1,0,1,0,0);}
                 _0x22B:
000ea7 91a0 01fa 	LDS  R26,_point
000ea9 30a3      	CPI  R26,LOW(0x3)
000eaa f461      	BRNE _0x22D
000eab 940e 19ed 	CALL SUBOPT_0x45
000ead 940e 1bb9 	CALL SUBOPT_0x81
000eaf 940e 1a41 	CALL SUBOPT_0x52
000eb1 940e 19f6 	CALL SUBOPT_0x47
000eb3 940e 1bb9 	CALL SUBOPT_0x81
000eb5 e0e1      	LDI  R30,LOW(1)
000eb6 c00e      	RJMP _0x3C8
                 ; 0000 03AB                 else if (point==4)  {set_led_on(0,0,0,1,1,0,0,0);set_led_off(0,0,0,1,1,0,0,0);}
                 _0x22D:
000eb7 91a0 01fa 	LDS  R26,_point
000eb9 30a4      	CPI  R26,LOW(0x4)
000eba f479      	BRNE _0x22F
000ebb 940e 19ed 	CALL SUBOPT_0x45
000ebd 940e 1bbe 	CALL SUBOPT_0x82
000ebf 940e 19f6 	CALL SUBOPT_0x47
000ec1 e0e1      	LDI  R30,LOW(1)
000ec2 93ea      	ST   -Y,R30
                 _0x3C6:
000ec3 93ea      	ST   -Y,R30
000ec4 e0e0      	LDI  R30,LOW(0)
                 _0x3C8:
000ec5 93ea      	ST   -Y,R30
000ec6 e0e0      	LDI  R30,LOW(0)
                 _0x3C7:
000ec7 93ea      	ST   -Y,R30
000ec8 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 03AC                 point=4;
                 _0x22F:
000eca e0e4      	LDI  R30,LOW(4)
000ecb 93e0 01fa 	STS  _point,R30
                 ; 0000 03AD                 }
                 ; 0000 03AE         //-------------------------------------------------------------------//
                 ; 0000 03AF 
                 ; 0000 03B0         //-------------------------------------------------------------------//
                 ; 0000 03B1         //данные инженерного меню
                 ; 0000 03B2         //-------------------------------------------------------------------//
                 ; 0000 03B3         if ((mode==11)&&(count_register!=A_16))
                 _0x224:
000ecd 91a0 01f9 	LDS  R26,_mode
000ecf 30ab      	CPI  R26,LOW(0xB)
000ed0 f421      	BRNE _0x231
000ed1 91a0 021f 	LDS  R26,_count_register
000ed3 31a6      	CPI  R26,LOW(0x16)
000ed4 f409      	BRNE _0x232
                 _0x231:
000ed5 c10c      	RJMP _0x230
                 _0x232:
                 ; 0000 03B4                 {
                 ; 0000 03B5                 if (((count_register>=A_06)&&(count_register<=A_09))|(count_register==A_18)|(count_register==A_19))
000ed6 91a0 021f 	LDS  R26,_count_register
000ed8 30ac      	CPI  R26,LOW(0xC)
000ed9 f020      	BRLO _0x234
000eda 31a0      	CPI  R26,LOW(0x10)
000edb f410      	BRSH _0x234
000edc e0e1      	LDI  R30,1
000edd c001      	RJMP _0x235
                 _0x234:
000ede e0e0      	LDI  R30,0
                 _0x235:
000edf 2e0e      	MOV  R0,R30
000ee0 91a0 021f 	LDS  R26,_count_register
000ee2 e1e8      	LDI  R30,LOW(24)
000ee3 940e 1bd3 	CALL SUBOPT_0x86
000ee5 e1e9      	LDI  R30,LOW(25)
000ee6 940e 1cb1 	CALL __EQB12
000ee8 29e0      	OR   R30,R0
000ee9 f161      	BREQ _0x233
                 ; 0000 03B6                         {//point=work_point;
                 ; 0000 03B7                         if ((data_register<0))
000eea a9ac      	LDD  R26,Y+52
000eeb 23aa      	TST  R26
000eec f49a      	BRPL _0x236
                 ; 0000 03B8                                 {
                 ; 0000 03B9                                 if (data_register>=-1000)point=1;
000eed 940e 19b4 	CALL SUBOPT_0x3D
000eef 940e 19b9 	CALL SUBOPT_0x3E
000ef1 f010      	BRLO _0x237
000ef2 e0e1      	LDI  R30,LOW(1)
000ef3 c009      	RJMP _0x3C9
                 ; 0000 03BA                                 else if (data_register>=-100)point=2;
                 _0x237:
000ef4 940e 19c0 	CALL SUBOPT_0x3F
000ef6 f010      	BRLO _0x239
000ef7 e0e2      	LDI  R30,LOW(2)
000ef8 c004      	RJMP _0x3C9
                 ; 0000 03BB                                 else if (data_register>=-10)point=3;
                 _0x239:
000ef9 940e 19c8 	CALL SUBOPT_0x40
000efb f018      	BRLO _0x23B
000efc e0e3      	LDI  R30,LOW(3)
                 _0x3C9:
000efd 93e0 01fa 	STS  _point,R30
                 ; 0000 03BC                                 }
                 _0x23B:
                 ; 0000 03BD                         else
000eff c015      	RJMP _0x23C
                 _0x236:
                 ; 0000 03BE                                 {
                 ; 0000 03BF                                 if (data_register<10)point=4;
000f00 940e 19d0 	CALL SUBOPT_0x41
000f02 f410      	BRSH _0x23D
000f03 e0e4      	LDI  R30,LOW(4)
000f04 c00e      	RJMP _0x3CA
                 ; 0000 03C0                                 else if (data_register<100)point=3;
                 _0x23D:
000f05 940e 19d8 	CALL SUBOPT_0x42
000f07 f410      	BRSH _0x23F
000f08 e0e3      	LDI  R30,LOW(3)
000f09 c009      	RJMP _0x3CA
                 ; 0000 03C1                                 else if (data_register<1000)point=2;
                 _0x23F:
000f0a 940e 19e0 	CALL SUBOPT_0x43
000f0c f410      	BRSH _0x241
000f0d e0e2      	LDI  R30,LOW(2)
000f0e c004      	RJMP _0x3CA
                 ; 0000 03C2                                 else if (data_register>=1000)point=1;
                 _0x241:
000f0f 940e 19e0 	CALL SUBOPT_0x43
000f11 f018      	BRLO _0x243
000f12 e0e1      	LDI  R30,LOW(1)
                 _0x3CA:
000f13 93e0 01fa 	STS  _point,R30
                 ; 0000 03C3                                 }
                 _0x243:
                 _0x23C:
                 ; 0000 03C4                         }
                 ; 0000 03C5                 else if (count_register==A_10)point=3;
000f15 c009      	RJMP _0x244
                 _0x233:
000f16 91a0 021f 	LDS  R26,_count_register
000f18 31a0      	CPI  R26,LOW(0x10)
000f19 f411      	BRNE _0x245
000f1a e0e3      	LDI  R30,LOW(3)
000f1b c001      	RJMP _0x3CB
                 ; 0000 03C6                 else point=1;
                 _0x245:
000f1c e0e1      	LDI  R30,LOW(1)
                 _0x3CB:
000f1d 93e0 01fa 	STS  _point,R30
                 ; 0000 03C7                 hex2dec(data_register);
                 _0x244:
000f1f 940e 1a34 	CALL SUBOPT_0x50
                 ; 0000 03C8               // if (count_register==A_19){tis=1,sot=1;des=0;ed=9;point=3;}//вписать дату и время
                 ; 0000 03C9                 if (count_register==A_16)
000f21 91a0 021f 	LDS  R26,_count_register
000f23 31a6      	CPI  R26,LOW(0x16)
000f24 f011      	BREQ PC+3
000f25 940c 0f77 	JMP _0x247
                 ; 0000 03CA                         {
                 ; 0000 03CB                         if      (data_register==0){tis=4,sot='-';des=2;ed=0;point=1;}
000f27 940e 1bce 	CALL SUBOPT_0x85
000f29 940e 1ec2 	CALL __CPD10
000f2b f449      	BRNE _0x248
000f2c e0e4      	LDI  R30,LOW(4)
000f2d 93e0 01ff 	STS  _tis,R30
000f2f e2ed      	LDI  R30,LOW(45)
000f30 940e 198c 	CALL SUBOPT_0x36
000f32 940e 1bd9 	CALL SUBOPT_0x87
000f34 c040      	RJMP _0x3CC
                 ; 0000 03CC                         else if (data_register==1){tis=0,sot='-';des=0;ed=5;point=1;}
                 _0x248:
000f35 940e 19b4 	CALL SUBOPT_0x3D
                +
000f37 30a0     +CPI R26 , LOW ( 0x3F800000 )
000f38 e0e0     +LDI R30 , HIGH ( 0x3F800000 )
000f39 07be     +CPC R27 , R30
000f3a e8e0     +LDI R30 , BYTE3 ( 0x3F800000 )
000f3b 078e     +CPC R24 , R30
000f3c e3ef     +LDI R30 , BYTE4 ( 0x3F800000 )
000f3d 079e     +CPC R25 , R30
                 	__CPD2N 0x3F800000
000f3e f449      	BRNE _0x24A
000f3f 940e 1bde 	CALL SUBOPT_0x88
000f41 940e 1983 	CALL SUBOPT_0x34
000f43 e0e5      	LDI  R30,LOW(5)
000f44 93e0 01fc 	STS  _ed,R30
000f46 e0e1      	LDI  R30,LOW(1)
000f47 c02d      	RJMP _0x3CC
                 ; 0000 03CD                         else if (data_register==2){tis=0,sot='-';des=2;ed=0;point=1;}
                 _0x24A:
000f48 940e 19b4 	CALL SUBOPT_0x3D
                +
000f4a 30a0     +CPI R26 , LOW ( 0x40000000 )
000f4b e0e0     +LDI R30 , HIGH ( 0x40000000 )
000f4c 07be     +CPC R27 , R30
000f4d e0e0     +LDI R30 , BYTE3 ( 0x40000000 )
000f4e 078e     +CPC R24 , R30
000f4f e4e0     +LDI R30 , BYTE4 ( 0x40000000 )
000f50 079e     +CPC R25 , R30
                 	__CPD2N 0x40000000
000f51 f439      	BRNE _0x24C
000f52 940e 1bde 	CALL SUBOPT_0x88
000f54 940e 198c 	CALL SUBOPT_0x36
000f56 940e 1bd9 	CALL SUBOPT_0x87
000f58 c01c      	RJMP _0x3CC
                 ; 0000 03CE                         else if (data_register==3){tis=0,sot='-';des=1;ed=0;point=1;}
                 _0x24C:
000f59 940e 19b4 	CALL SUBOPT_0x3D
                +
000f5b 30a0     +CPI R26 , LOW ( 0x40400000 )
000f5c e0e0     +LDI R30 , HIGH ( 0x40400000 )
000f5d 07be     +CPC R27 , R30
000f5e e4e0     +LDI R30 , BYTE3 ( 0x40400000 )
000f5f 078e     +CPC R24 , R30
000f60 e4e0     +LDI R30 , BYTE4 ( 0x40400000 )
000f61 079e     +CPC R25 , R30
                 	__CPD2N 0x40400000
000f62 f451      	BRNE _0x24E
000f63 940e 1bde 	CALL SUBOPT_0x88
000f65 93e0 01fe 	STS  _sot,R30
000f67 e0e1      	LDI  R30,LOW(1)
000f68 93e0 01fd 	STS  _des,R30
000f6a 940e 1bd9 	CALL SUBOPT_0x87
000f6c c008      	RJMP _0x3CC
                 ; 0000 03CF                         else                      {tis=0,sot='-';des=0;ed=5;point=3;}
                 _0x24E:
000f6d 940e 1bde 	CALL SUBOPT_0x88
000f6f 940e 1983 	CALL SUBOPT_0x34
000f71 e0e5      	LDI  R30,LOW(5)
000f72 93e0 01fc 	STS  _ed,R30
000f74 e0e3      	LDI  R30,LOW(3)
                 _0x3CC:
000f75 93e0 01fa 	STS  _point,R30
                 ; 0000 03D0                         }
                 ; 0000 03D1                 if (point==1)       {set_led_on(0,0,0,0,0,0,0,0);set_led_off(0,0,0,0,0,0,0,0);}
                 _0x247:
000f77 91a0 01fa 	LDS  R26,_point
000f79 30a1      	CPI  R26,LOW(0x1)
000f7a f459      	BRNE _0x250
000f7b 940e 19ed 	CALL SUBOPT_0x45
000f7d 940e 19ed 	CALL SUBOPT_0x45
000f7f 940e 19f2 	CALL SUBOPT_0x46
000f81 940e 19f6 	CALL SUBOPT_0x47
000f83 e0e0      	LDI  R30,LOW(0)
000f84 93ea      	ST   -Y,R30
000f85 c02d      	RJMP _0x3CD
                 ; 0000 03D2                 else if (point==2)  {set_led_on(0,0,0,0,0,0,1,0);set_led_off(0,0,0,0,0,0,1,0);}
                 _0x250:
000f86 91a0 01fa 	LDS  R26,_point
000f88 30a2      	CPI  R26,LOW(0x2)
000f89 f451      	BRNE _0x252
000f8a 940e 19ed 	CALL SUBOPT_0x45
000f8c 940e 19ed 	CALL SUBOPT_0x45
000f8e 940e 1a3c 	CALL SUBOPT_0x51
000f90 940e 19ed 	CALL SUBOPT_0x45
000f92 e0e1      	LDI  R30,LOW(1)
000f93 c023      	RJMP _0x3CE
                 ; 0000 03D3                 else if (point==3)  {set_led_on(0,0,0,0,0,1,0,0);set_led_off(0,0,0,0,0,1,0,0);}
                 _0x252:
000f94 91a0 01fa 	LDS  R26,_point
000f96 30a3      	CPI  R26,LOW(0x3)
000f97 f461      	BRNE _0x254
000f98 940e 19ed 	CALL SUBOPT_0x45
000f9a 940e 19f2 	CALL SUBOPT_0x46
000f9c 940e 1a41 	CALL SUBOPT_0x52
000f9e 940e 19f6 	CALL SUBOPT_0x47
000fa0 940e 19f2 	CALL SUBOPT_0x46
000fa2 e0e1      	LDI  R30,LOW(1)
000fa3 c011      	RJMP _0x3CF
                 ; 0000 03D4                 else if (point==4)  {set_led_on(0,0,0,0,1,0,0,0);set_led_off(0,0,0,0,1,0,0,0);}
                 _0x254:
000fa4 91a0 01fa 	LDS  R26,_point
000fa6 30a4      	CPI  R26,LOW(0x4)
000fa7 f491      	BRNE _0x256
000fa8 940e 19ed 	CALL SUBOPT_0x45
000faa 940e 1a44 	CALL SUBOPT_0x53
000fac 940e 19ed 	CALL SUBOPT_0x45
000fae 940e 19f6 	CALL SUBOPT_0x47
000fb0 e0e0      	LDI  R30,LOW(0)
000fb1 93ea      	ST   -Y,R30
000fb2 e0e1      	LDI  R30,LOW(1)
                 _0x3CD:
000fb3 93ea      	ST   -Y,R30
000fb4 e0e0      	LDI  R30,LOW(0)
                 _0x3CF:
000fb5 93ea      	ST   -Y,R30
000fb6 e0e0      	LDI  R30,LOW(0)
                 _0x3CE:
000fb7 93ea      	ST   -Y,R30
000fb8 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 03D5 //                if (count_register==A_18)
                 ; 0000 03D6 //                        {
                 ; 0000 03D7 //                        tis=1,sot=0;des=0;ed=0;point=1;
                 ; 0000 03D8 //                        set_led_on(0,0,0,0,1,1,0,0);set_led_off(0,0,0,0,1,1,0,0);
                 ; 0000 03D9 //                        }
                 ; 0000 03DA                 if(count_register==CRCCONST) {tis = crc1digit; sot = crc2digit; des =crc3digit; ed = crc4digit; point = 0;}
                 _0x256:
000fba 91a0 021f 	LDS  R26,_count_register
000fbc 31ab      	CPI  R26,LOW(0x1B)
000fbd f4d9      	BRNE _0x257
000fbe eba5      	LDI  R26,LOW(_crc1digit)
000fbf e0b1      	LDI  R27,HIGH(_crc1digit)
000fc0 940e 1cee 	CALL __EEPROMRDB
000fc2 93e0 01ff 	STS  _tis,R30
000fc4 eba6      	LDI  R26,LOW(_crc2digit)
000fc5 e0b1      	LDI  R27,HIGH(_crc2digit)
000fc6 940e 1cee 	CALL __EEPROMRDB
000fc8 93e0 01fe 	STS  _sot,R30
000fca eba7      	LDI  R26,LOW(_crc3digit)
000fcb e0b1      	LDI  R27,HIGH(_crc3digit)
000fcc 940e 1cee 	CALL __EEPROMRDB
000fce 93e0 01fd 	STS  _des,R30
000fd0 eba8      	LDI  R26,LOW(_crc4digit)
000fd1 e0b1      	LDI  R27,HIGH(_crc4digit)
000fd2 940e 1cee 	CALL __EEPROMRDB
000fd4 93e0 01fc 	STS  _ed,R30
000fd6 e0e0      	LDI  R30,LOW(0)
000fd7 93e0 01fa 	STS  _point,R30
                 ; 0000 03DB                 if(count_register==SOFTID) {tis = 'v'; sot = 1; des = 0; ed = 1; point = 0;}
                 _0x257:
000fd9 91a0 021f 	LDS  R26,_count_register
000fdb 31ac      	CPI  R26,LOW(0x1C)
000fdc f429      	BRNE _0x258
000fdd 940e 1948 	CALL SUBOPT_0x30
000fdf e0e0      	LDI  R30,LOW(0)
000fe0 93e0 01fa 	STS  _point,R30
                 ; 0000 03DC                 }
                 _0x258:
                 ; 0000 03DD         //-------------------------------------------------------------------//
                 ; 0000 03DE 
                 ; 0000 03DF         diap_val1 = reg[0][A_12];/*в этом участке кода устанавливаем соответствующее значение*/
                 _0x230:
                +
000fe2 e4a8     +LDI R26 , LOW ( _reg + 72 )
000fe3 e0b0     +LDI R27 , HIGH ( _reg + 72 )
                 	__POINTW2MN _reg,72
000fe4 940e 1ce6 	CALL __EEPROMRDD
000fe6 940e 1d4e 	CALL __CFD1U
000fe8 2f5e      	MOV  R21,R30
                 ; 0000 03E0         if(diap_val1!=diap_val2){
000fe9 1745      	CP   R20,R21
000fea f189      	BREQ _0x259
                 ; 0000 03E1         diap_val2=diap_val1;
000feb 2f45      	MOV  R20,R21
                 ; 0000 03E2         switch (diap_val1){
000fec 2fe5      	MOV  R30,R21
                 ; 0000 03E3                 case 0:reg[0][A_06]=4; reg[0][A_07]=20;point=3;break;
000fed 30e0      	CPI  R30,0
000fee f439      	BRNE _0x25D
                +
000fef e3a0     +LDI R26 , LOW ( _reg + 48 )
000ff0 e0b0     +LDI R27 , HIGH ( _reg + 48 )
                 	__POINTW2MN _reg,48
000ff1 940e 1a7d 	CALL SUBOPT_0x5C
000ff3 940e 1be3 	CALL SUBOPT_0x89
000ff5 c022      	RJMP _0x3D0
                 ; 0000 03E4                 case 1:reg[0][A_06]=0; reg[0][A_07]=5;point=4;break;
                 _0x25D:
000ff6 30e1      	CPI  R30,LOW(0x1)
000ff7 f0a9      	BREQ _0x3D1
                 ; 0000 03E5                 case 2:reg[0][A_06]=0; reg[0][A_07]=20;point=3;break;
000ff8 30e2      	CPI  R30,LOW(0x2)
000ff9 f439      	BRNE _0x25F
                +
000ffa e3a0     +LDI R26 , LOW ( _reg + 48 )
000ffb e0b0     +LDI R27 , HIGH ( _reg + 48 )
                 	__POINTW2MN _reg,48
000ffc 940e 199c 	CALL SUBOPT_0x39
000ffe 940e 1be3 	CALL SUBOPT_0x89
001000 c017      	RJMP _0x3D0
                 ; 0000 03E6                 case 3:reg[0][A_06]=0; reg[0][A_07]=10;point=3;break;
                 _0x25F:
001001 30e3      	CPI  R30,LOW(0x3)
001002 f451      	BRNE _0x261
                +
001003 e3a0     +LDI R26 , LOW ( _reg + 48 )
001004 e0b0     +LDI R27 , HIGH ( _reg + 48 )
                 	__POINTW2MN _reg,48
001005 940e 1bec 	CALL SUBOPT_0x8A
001007 940e 1a9f 	CALL SUBOPT_0x62
001009 940e 1cfa 	CALL __EEPROMWRD
00100b e0e3      	LDI  R30,LOW(3)
00100c c00b      	RJMP _0x3D0
                 ; 0000 03E7                 default:reg[0][A_06]=0; reg[0][A_07]=5;point=4;break;}
                 _0x261:
                 _0x3D1:
                +
00100d e3a0     +LDI R26 , LOW ( _reg + 48 )
00100e e0b0     +LDI R27 , HIGH ( _reg + 48 )
                 	__POINTW2MN _reg,48
00100f 940e 1bec 	CALL SUBOPT_0x8A
                +
001011 e0e0     +LDI R30 , LOW ( 0x40A00000 )
001012 e0f0     +LDI R31 , HIGH ( 0x40A00000 )
001013 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
001014 e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
001015 940e 1cfa 	CALL __EEPROMWRD
001017 e0e4      	LDI  R30,LOW(4)
                 _0x3D0:
001018 93e0 01fa 	STS  _point,R30
                 ; 0000 03E8                 ee_point=point;work_point=point;  }        //здесь устанавливаем необходимое количество цифр в зависимости от режима работы (для 0-10 - 3 цифры после запятой, для 0-20 - 2 цифры после запятой)
00101a 940e 1bf2 	CALL SUBOPT_0x8B
                 ; 0000 03E9 
                 ; 0000 03EA 
                 ; 0000 03EB         if (key_plus_press==1)
                 _0x259:
00101c e0a0      	LDI  R26,0
00101d fc34      	SBRC R3,4
00101e e0a1      	LDI  R26,1
00101f 30a1      	CPI  R26,LOW(0x1)
001020 f011      	BREQ PC+3
001021 940c 10db 	JMP _0x262
                 ; 0000 03EC                 {
                 ; 0000 03ED 
                 ; 0000 03EE                 start_time_mode=sys_time;
001023 940e 1b82 	CALL SUBOPT_0x7A
                 ; 0000 03EF                 if (count_key==0)
001025 91e0 0201 	LDS  R30,_count_key
001027 30e0      	CPI  R30,0
001028 f4e1      	BRNE _0x263
                 ; 0000 03F0                         {
                 ; 0000 03F1                         if (mode==10)if (++count_register>MAX_REGISTER)count_register=MAX_REGISTER;
001029 91a0 01f9 	LDS  R26,_mode
00102b 30aa      	CPI  R26,LOW(0xA)
00102c f451      	BRNE _0x264
00102d 91a0 021f 	LDS  R26,_count_register
00102f 5faf      	SUBI R26,-LOW(1)
001030 93a0 021f 	STS  _count_register,R26
001032 31ad      	CPI  R26,LOW(0x1D)
001033 f018      	BRLO _0x265
001034 e1ec      	LDI  R30,LOW(28)
001035 93e0 021f 	STS  _count_register,R30
                 ; 0000 03F2                         if (mode==1)if (++count_register>6)count_register=6;
                 _0x265:
                 _0x264:
001037 91a0 01f9 	LDS  R26,_mode
001039 30a1      	CPI  R26,LOW(0x1)
00103a f451      	BRNE _0x266
00103b 91a0 021f 	LDS  R26,_count_register
00103d 5faf      	SUBI R26,-LOW(1)
00103e 93a0 021f 	STS  _count_register,R26
001040 30a7      	CPI  R26,LOW(0x7)
001041 f018      	BRLO _0x267
001042 e0e6      	LDI  R30,LOW(6)
001043 93e0 021f 	STS  _count_register,R30
                 ; 0000 03F3                         }
                 _0x267:
                 _0x266:
                 ; 0000 03F4                 if ((count_key==0)||(count_key==21)||(count_key1==102))
                 _0x263:
001045 91a0 0201 	LDS  R26,_count_key
001047 30a0      	CPI  R26,LOW(0x0)
001048 f039      	BREQ _0x269
001049 31a5      	CPI  R26,LOW(0x15)
00104a f029      	BREQ _0x269
00104b 91a0 0202 	LDS  R26,_count_key1
00104d 36a6      	CPI  R26,LOW(0x66)
00104e f009      	BREQ _0x269
00104f c088      	RJMP _0x268
                 _0x269:
                 ; 0000 03F5                         {
                 ; 0000 03F6                         if      (point==1)
001050 91a0 01fa 	LDS  R26,_point
001052 30a1      	CPI  R26,LOW(0x1)
001053 f499      	BRNE _0x26B
                 ; 0000 03F7                                 {
                 ; 0000 03F8                                 data_register=data_register+1;
001054 940e 1bce 	CALL SUBOPT_0x85
                +
001056 e0a0     +LDI R26 , LOW ( 0x3F800000 )
001057 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001058 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001059 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00105a 940e 1bf9 	CALL SUBOPT_0x8C
                 ; 0000 03F9                                 if ((data_register<0)&&(data_register>=-100))point=2;
00105c a9ac      	LDD  R26,Y+52
00105d 23aa      	TST  R26
00105e f41a      	BRPL _0x26D
00105f 940e 19c0 	CALL SUBOPT_0x3F
001061 f408      	BRSH _0x26E
                 _0x26D:
001062 c003      	RJMP _0x26C
                 _0x26E:
001063 e0e2      	LDI  R30,LOW(2)
001064 93e0 01fa 	STS  _point,R30
                 ; 0000 03FA                                 }
                 _0x26C:
                 ; 0000 03FB                         else if (point==2)
001066 c055      	RJMP _0x26F
                 _0x26B:
001067 91a0 01fa 	LDS  R26,_point
001069 30a2      	CPI  R26,LOW(0x2)
00106a f4e1      	BRNE _0x270
                 ; 0000 03FC                                 {
                 ; 0000 03FD                                 data_register=data_register+0.1;
00106b 940e 1bce 	CALL SUBOPT_0x85
                +
00106d ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00106e ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00106f ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
001070 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
001071 940e 1bf9 	CALL SUBOPT_0x8C
                 ; 0000 03FE                                 if ((data_register>0)&&(data_register>=1000))point=1;
001073 940e 1bfc 	CALL SUBOPT_0x8D
001075 f41c      	BRGE _0x272
001076 940e 19e0 	CALL SUBOPT_0x43
001078 f408      	BRSH _0x273
                 _0x272:
001079 c002      	RJMP _0x271
                 _0x273:
00107a e0e1      	LDI  R30,LOW(1)
00107b c008      	RJMP _0x3D2
                 ; 0000 03FF                                 else if ((data_register<0)&&(data_register>=-10))point=3;
                 _0x271:
00107c a9ac      	LDD  R26,Y+52
00107d 23aa      	TST  R26
00107e f41a      	BRPL _0x276
00107f 940e 19c8 	CALL SUBOPT_0x40
001081 f408      	BRSH _0x277
                 _0x276:
001082 c003      	RJMP _0x275
                 _0x277:
001083 e0e3      	LDI  R30,LOW(3)
                 _0x3D2:
001084 93e0 01fa 	STS  _point,R30
                 ; 0000 0400                                 }
                 _0x275:
                 ; 0000 0401                         else if (point==3)
001086 c035      	RJMP _0x278
                 _0x270:
001087 91a0 01fa 	LDS  R26,_point
001089 30a3      	CPI  R26,LOW(0x3)
00108a f4d9      	BRNE _0x279
                 ; 0000 0402                                 {
                 ; 0000 0403                                 data_register=data_register+0.01;
00108b 940e 1bce 	CALL SUBOPT_0x85
                +
00108d e0aa     +LDI R26 , LOW ( 0x3C23D70A )
00108e edb7     +LDI R27 , HIGH ( 0x3C23D70A )
00108f e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
001090 e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
001091 940e 1bf9 	CALL SUBOPT_0x8C
                 ; 0000 0404                                 if ((data_register>0)&&(data_register>=100))point=2;
001093 940e 1bfc 	CALL SUBOPT_0x8D
001095 f41c      	BRGE _0x27B
001096 940e 19d8 	CALL SUBOPT_0x42
001098 f408      	BRSH _0x27C
                 _0x27B:
001099 c001      	RJMP _0x27A
                 _0x27C:
00109a c007      	RJMP _0x3D3
                 ; 0000 0405                                 else if ((data_register<0)&&(data_register>=-10))point=2;
                 _0x27A:
00109b a9ac      	LDD  R26,Y+52
00109c 23aa      	TST  R26
00109d f41a      	BRPL _0x27F
00109e 940e 19c8 	CALL SUBOPT_0x40
0010a0 f408      	BRSH _0x280
                 _0x27F:
0010a1 c003      	RJMP _0x27E
                 _0x280:
                 _0x3D3:
0010a2 e0e2      	LDI  R30,LOW(2)
0010a3 93e0 01fa 	STS  _point,R30
                 ; 0000 0406                                 }
                 _0x27E:
                 ; 0000 0407                         else if (point==4)
0010a5 c016      	RJMP _0x281
                 _0x279:
0010a6 91a0 01fa 	LDS  R26,_point
0010a8 30a4      	CPI  R26,LOW(0x4)
0010a9 f491      	BRNE _0x282
                 ; 0000 0408                                 {
                 ; 0000 0409                                 data_register=data_register+0.001;
0010aa 940e 1bce 	CALL SUBOPT_0x85
                +
0010ac e6af     +LDI R26 , LOW ( 0x3A83126F )
0010ad e1b2     +LDI R27 , HIGH ( 0x3A83126F )
0010ae e883     +LDI R24 , BYTE3 ( 0x3A83126F )
0010af e39a     +LDI R25 , BYTE4 ( 0x3A83126F )
                 	__GETD2N 0x3A83126F
0010b0 940e 1bf9 	CALL SUBOPT_0x8C
                 ; 0000 040A                                 if ((data_register>0)&&(data_register>=10))point=3;
0010b2 940e 1bfc 	CALL SUBOPT_0x8D
0010b4 f41c      	BRGE _0x284
0010b5 940e 19d0 	CALL SUBOPT_0x41
0010b7 f408      	BRSH _0x285
                 _0x284:
0010b8 c003      	RJMP _0x283
                 _0x285:
0010b9 e0e3      	LDI  R30,LOW(3)
0010ba 93e0 01fa 	STS  _point,R30
                 ; 0000 040B //                                else if ((data_register<0)&&(data_register>=-1))point=3;
                 ; 0000 040C                                 }
                 _0x283:
                 ; 0000 040D                         if (data_register>reg[2][count_register])data_register=reg[2][count_register];
                 _0x282:
                 _0x281:
                 _0x278:
                 _0x26F:
0010bc 940e 1c00 	CALL SUBOPT_0x8E
0010be 940e 19b4 	CALL SUBOPT_0x3D
0010c0 940e 1ea2 	CALL __CMPF12
0010c2 f009      	BREQ PC+2
0010c3 f410      	BRCC PC+3
0010c4 940c 10ca 	JMP  _0x286
0010c6 940e 1c00 	CALL SUBOPT_0x8E
0010c8 940e 19af 	CALL SUBOPT_0x3C
                 ; 0000 040E                         if (count_key==0)count_key=60;if (count_key==21)count_key=20;
                 _0x286:
0010ca 91e0 0201 	LDS  R30,_count_key
0010cc 30e0      	CPI  R30,0
0010cd f419      	BRNE _0x287
0010ce e3ec      	LDI  R30,LOW(60)
0010cf 93e0 0201 	STS  _count_key,R30
                 _0x287:
0010d1 91a0 0201 	LDS  R26,_count_key
0010d3 31a5      	CPI  R26,LOW(0x15)
0010d4 f419      	BRNE _0x288
0010d5 e1e4      	LDI  R30,LOW(20)
0010d6 93e0 0201 	STS  _count_key,R30
                 ; 0000 040F                         }
                 _0x288:
                 ; 0000 0410                 rekey();
                 _0x268:
0010d8 940e 064b 	CALL _rekey
                 ; 0000 0411                 }
                 ; 0000 0412         else if ((mode!=100)&&(key_enter_press==0)&&(key_mines_press==0)){count_key=0;count_key1=0;count_key2=0;}
0010da c00f      	RJMP _0x289
                 _0x262:
0010db 91a0 01f9 	LDS  R26,_mode
0010dd 36a4      	CPI  R26,LOW(0x64)
0010de f041      	BREQ _0x28B
0010df e0a0      	LDI  R26,0
0010e0 fc36      	SBRC R3,6
0010e1 e0a1      	LDI  R26,1
0010e2 30a0      	CPI  R26,LOW(0x0)
0010e3 f419      	BRNE _0x28B
0010e4 940e 1856 	CALL SUBOPT_0xB
0010e6 f009      	BREQ _0x28C
                 _0x28B:
0010e7 c002      	RJMP _0x28A
                 _0x28C:
0010e8 940e 1c08 	CALL SUBOPT_0x8F
                 ; 0000 0413 
                 ; 0000 0414         if (key_mines_press==1)
                 _0x28A:
                 _0x289:
0010ea e0a0      	LDI  R26,0
0010eb fc35      	SBRC R3,5
0010ec e0a1      	LDI  R26,1
0010ed 30a1      	CPI  R26,LOW(0x1)
0010ee f011      	BREQ PC+3
0010ef 940c 11a9 	JMP _0x28D
                 ; 0000 0415                 {
                 ; 0000 0416                 start_time_mode=sys_time;
0010f1 940e 1b82 	CALL SUBOPT_0x7A
                 ; 0000 0417                 if (count_key==0)
0010f3 91e0 0201 	LDS  R30,_count_key
0010f5 30e0      	CPI  R30,0
0010f6 f4e1      	BRNE _0x28E
                 ; 0000 0418                         {
                 ; 0000 0419                         if (mode==10)if (--count_register<7)count_register=7;
0010f7 91a0 01f9 	LDS  R26,_mode
0010f9 30aa      	CPI  R26,LOW(0xA)
0010fa f451      	BRNE _0x28F
0010fb 91a0 021f 	LDS  R26,_count_register
0010fd 50a1      	SUBI R26,LOW(1)
0010fe 93a0 021f 	STS  _count_register,R26
001100 30a7      	CPI  R26,LOW(0x7)
001101 f418      	BRSH _0x290
001102 e0e7      	LDI  R30,LOW(7)
001103 93e0 021f 	STS  _count_register,R30
                 ; 0000 041A                         if (mode==1)if (--count_register<1)count_register=1;
                 _0x290:
                 _0x28F:
001105 91a0 01f9 	LDS  R26,_mode
001107 30a1      	CPI  R26,LOW(0x1)
001108 f451      	BRNE _0x291
001109 91a0 021f 	LDS  R26,_count_register
00110b 50a1      	SUBI R26,LOW(1)
00110c 93a0 021f 	STS  _count_register,R26
00110e 30a1      	CPI  R26,LOW(0x1)
00110f f418      	BRSH _0x292
001110 e0e1      	LDI  R30,LOW(1)
001111 93e0 021f 	STS  _count_register,R30
                 ; 0000 041B                         }
                 _0x292:
                 _0x291:
                 ; 0000 041C                 if ((count_key==0)||(count_key==21)||(count_key1==102))
                 _0x28E:
001113 91a0 0201 	LDS  R26,_count_key
001115 30a0      	CPI  R26,LOW(0x0)
001116 f039      	BREQ _0x294
001117 31a5      	CPI  R26,LOW(0x15)
001118 f029      	BREQ _0x294
001119 91a0 0202 	LDS  R26,_count_key1
00111b 36a6      	CPI  R26,LOW(0x66)
00111c f009      	BREQ _0x294
00111d c088      	RJMP _0x293
                 _0x294:
                 ; 0000 041D                         {
                 ; 0000 041E                         if      (point==1)
00111e 91a0 01fa 	LDS  R26,_point
001120 30a1      	CPI  R26,LOW(0x1)
001121 f489      	BRNE _0x296
                 ; 0000 041F                                 {
                 ; 0000 0420                                 data_register=data_register-1;
001122 940e 19b4 	CALL SUBOPT_0x3D
001124 940e 191e 	CALL SUBOPT_0x2A
001126 940e 1a6c 	CALL SUBOPT_0x59
001128 940e 1c10 	CALL SUBOPT_0x90
                 ; 0000 0421                                 if ((data_register>0)&&(data_register<1000))point=2;
00112a f41c      	BRGE _0x298
00112b 940e 19e0 	CALL SUBOPT_0x43
00112d f008      	BRLO _0x299
                 _0x298:
00112e c003      	RJMP _0x297
                 _0x299:
00112f e0e2      	LDI  R30,LOW(2)
001130 93e0 01fa 	STS  _point,R30
                 ; 0000 0422                                 }
                 _0x297:
                 ; 0000 0423                         else if (point==2)
001132 c05a      	RJMP _0x29A
                 _0x296:
001133 91a0 01fa 	LDS  R26,_point
001135 30a2      	CPI  R26,LOW(0x2)
001136 f4f1      	BRNE _0x29B
                 ; 0000 0424                                 {
                 ; 0000 0425                                 data_register=data_register-0.1;
001137 940e 19b4 	CALL SUBOPT_0x3D
001139 940e 1c12 	CALL SUBOPT_0x91
00113b 940e 1a6c 	CALL SUBOPT_0x59
00113d 940e 1c10 	CALL SUBOPT_0x90
                 ; 0000 0426                                 if ((data_register>0)&&(data_register<100))point=3;
00113f f41c      	BRGE _0x29D
001140 940e 19d8 	CALL SUBOPT_0x42
001142 f008      	BRLO _0x29E
                 _0x29D:
001143 c002      	RJMP _0x29C
                 _0x29E:
001144 e0e3      	LDI  R30,LOW(3)
001145 c00c      	RJMP _0x3D4
                 ; 0000 0427                                 else if ((data_register<0)&&(data_register<=-100))point=1;
                 _0x29C:
001146 a9ac      	LDD  R26,Y+52
001147 23aa      	TST  R26
001148 f43a      	BRPL _0x2A1
001149 940e 19c0 	CALL SUBOPT_0x3F
00114b f019      	BREQ PC+4
00114c f010      	BRCS PC+3
00114d 940c 1150 	JMP  _0x2A1
00114f c001      	RJMP _0x2A2
                 _0x2A1:
001150 c003      	RJMP _0x2A0
                 _0x2A2:
001151 e0e1      	LDI  R30,LOW(1)
                 _0x3D4:
001152 93e0 01fa 	STS  _point,R30
                 ; 0000 0428                                 }
                 _0x2A0:
                 ; 0000 0429                         else if (point==3)
001154 c038      	RJMP _0x2A3
                 _0x29B:
001155 91a0 01fa 	LDS  R26,_point
001157 30a3      	CPI  R26,LOW(0x3)
001158 f501      	BRNE _0x2A4
                 ; 0000 042A                                 {
                 ; 0000 042B                                 data_register=data_register-0.01;
001159 940e 19b4 	CALL SUBOPT_0x3D
                +
00115b e0ea     +LDI R30 , LOW ( 0x3C23D70A )
00115c edf7     +LDI R31 , HIGH ( 0x3C23D70A )
00115d e263     +LDI R22 , BYTE3 ( 0x3C23D70A )
00115e e37c     +LDI R23 , BYTE4 ( 0x3C23D70A )
                 	__GETD1N 0x3C23D70A
00115f 940e 1a6c 	CALL SUBOPT_0x59
001161 940e 1c10 	CALL SUBOPT_0x90
                 ; 0000 042C                                 if ((data_register>0)&&(data_register<10))point=4;
001163 f41c      	BRGE _0x2A6
001164 940e 19d0 	CALL SUBOPT_0x41
001166 f008      	BRLO _0x2A7
                 _0x2A6:
001167 c002      	RJMP _0x2A5
                 _0x2A7:
001168 e0e4      	LDI  R30,LOW(4)
001169 c00c      	RJMP _0x3D5
                 ; 0000 042D                                 else if ((data_register<0)&&(data_register<=-10))point=2;
                 _0x2A5:
00116a a9ac      	LDD  R26,Y+52
00116b 23aa      	TST  R26
00116c f43a      	BRPL _0x2AA
00116d 940e 19c8 	CALL SUBOPT_0x40
00116f f019      	BREQ PC+4
001170 f010      	BRCS PC+3
001171 940c 1174 	JMP  _0x2AA
001173 c001      	RJMP _0x2AB
                 _0x2AA:
001174 c003      	RJMP _0x2A9
                 _0x2AB:
001175 e0e2      	LDI  R30,LOW(2)
                 _0x3D5:
001176 93e0 01fa 	STS  _point,R30
                 ; 0000 042E 
                 ; 0000 042F                                 }
                 _0x2A9:
                 ; 0000 0430                         else if (point==4)
001178 c014      	RJMP _0x2AC
                 _0x2A4:
001179 91a0 01fa 	LDS  R26,_point
00117b 30a4      	CPI  R26,LOW(0x4)
00117c f481      	BRNE _0x2AD
                 ; 0000 0431                                 {
                 ; 0000 0432                                 data_register=data_register-0.001;
00117d 940e 19b4 	CALL SUBOPT_0x3D
                +
00117f e6ef     +LDI R30 , LOW ( 0x3A83126F )
001180 e1f2     +LDI R31 , HIGH ( 0x3A83126F )
001181 e863     +LDI R22 , BYTE3 ( 0x3A83126F )
001182 e37a     +LDI R23 , BYTE4 ( 0x3A83126F )
                 	__GETD1N 0x3A83126F
001183 940e 1a6c 	CALL SUBOPT_0x59
001185 940e 19af 	CALL SUBOPT_0x3C
                 ; 0000 0433                                 if ((data_register<0))point=3;
001187 a9ac      	LDD  R26,Y+52
001188 23aa      	TST  R26
001189 f41a      	BRPL _0x2AE
00118a e0e3      	LDI  R30,LOW(3)
00118b 93e0 01fa 	STS  _point,R30
                 ; 0000 0434                                 }
                 _0x2AE:
                 ; 0000 0435                         if (data_register<reg[3][count_register])data_register=reg[3][count_register];
                 _0x2AD:
                 _0x2AC:
                 _0x2A3:
                 _0x29A:
00118d 940e 1c17 	CALL SUBOPT_0x92
00118f 940e 19b4 	CALL SUBOPT_0x3D
001191 940e 1ea2 	CALL __CMPF12
001193 f420      	BRSH _0x2AF
001194 940e 1c17 	CALL SUBOPT_0x92
001196 940e 19af 	CALL SUBOPT_0x3C
                 ; 0000 0436                         if (count_key==0)count_key=60;if (count_key==21)count_key=20;
                 _0x2AF:
001198 91e0 0201 	LDS  R30,_count_key
00119a 30e0      	CPI  R30,0
00119b f419      	BRNE _0x2B0
00119c e3ec      	LDI  R30,LOW(60)
00119d 93e0 0201 	STS  _count_key,R30
                 _0x2B0:
00119f 91a0 0201 	LDS  R26,_count_key
0011a1 31a5      	CPI  R26,LOW(0x15)
0011a2 f419      	BRNE _0x2B1
0011a3 e1e4      	LDI  R30,LOW(20)
0011a4 93e0 0201 	STS  _count_key,R30
                 ; 0000 0437                         }
                 _0x2B1:
                 ; 0000 0438                 rekey();
                 _0x293:
0011a6 940e 064b 	CALL _rekey
                 ; 0000 0439                 }
                 ; 0000 043A         else if ((mode!=100)&&(key_enter_press==0)&&(key_plus_press==0)){count_key=0;count_key1=0;count_key2=0;}
0011a8 c00f      	RJMP _0x2B2
                 _0x28D:
0011a9 91a0 01f9 	LDS  R26,_mode
0011ab 36a4      	CPI  R26,LOW(0x64)
0011ac f041      	BREQ _0x2B4
0011ad e0a0      	LDI  R26,0
0011ae fc36      	SBRC R3,6
0011af e0a1      	LDI  R26,1
0011b0 30a0      	CPI  R26,LOW(0x0)
0011b1 f419      	BRNE _0x2B4
0011b2 940e 1851 	CALL SUBOPT_0xA
0011b4 f009      	BREQ _0x2B5
                 _0x2B4:
0011b5 c002      	RJMP _0x2B3
                 _0x2B5:
0011b6 940e 1c08 	CALL SUBOPT_0x8F
                 ; 0000 043B 
                 ; 0000 043C         if ((key_enter_press_switch==1)&&(key_enter==1)&&(key_plus_press==0)&&(key_mines_press==0)&&(key_mode_press==0)&&(mode!=0)&&(mode!=10)&&(mode!=1))
                 _0x2B3:
                 _0x2B2:
0011b8 e0a0      	LDI  R26,0
0011b9 fc42      	SBRC R4,2
0011ba e0a1      	LDI  R26,1
0011bb 30a1      	CPI  R26,LOW(0x1)
0011bc f4b1      	BRNE _0x2B7
0011bd 940e 1b6c 	CALL SUBOPT_0x77
0011bf f499      	BRNE _0x2B7
0011c0 940e 1851 	CALL SUBOPT_0xA
0011c2 f481      	BRNE _0x2B7
0011c3 940e 1856 	CALL SUBOPT_0xB
0011c5 f469      	BRNE _0x2B7
0011c6 e0a0      	LDI  R26,0
0011c7 fc33      	SBRC R3,3
0011c8 e0a1      	LDI  R26,1
0011c9 30a0      	CPI  R26,LOW(0x0)
0011ca f441      	BRNE _0x2B7
0011cb 91a0 01f9 	LDS  R26,_mode
0011cd 30a0      	CPI  R26,LOW(0x0)
0011ce f021      	BREQ _0x2B7
0011cf 30aa      	CPI  R26,LOW(0xA)
0011d0 f011      	BREQ _0x2B7
0011d1 30a1      	CPI  R26,LOW(0x1)
0011d2 f409      	BRNE _0x2B8
                 _0x2B7:
0011d3 c079      	RJMP _0x2B6
                 _0x2B8:
                 ; 0000 043D                 {
                 ; 0000 043E                     if((count_register==A_18)|(count_register==A_19)|(count_register==CRCCONST)|(count_register==SOFTID)){;}
0011d4 91a0 021f 	LDS  R26,_count_register
0011d6 e1e8      	LDI  R30,LOW(24)
0011d7 940e 1cb1 	CALL __EQB12
0011d9 2e0e      	MOV  R0,R30
0011da e1e9      	LDI  R30,LOW(25)
0011db 940e 1bd3 	CALL SUBOPT_0x86
0011dd e1eb      	LDI  R30,LOW(27)
0011de 940e 1bd3 	CALL SUBOPT_0x86
0011e0 e1ec      	LDI  R30,LOW(28)
0011e1 940e 1cb1 	CALL __EQB12
0011e3 29e0      	OR   R30,R0
0011e4 f009      	BREQ _0x2B9
                 ; 0000 043F                     else
0011e5 c067      	RJMP _0x2BA
                 _0x2B9:
                 ; 0000 0440                     {
                 ; 0000 0441                     reg[0][count_register]=data_register;
0011e6 940e 1a27 	CALL SUBOPT_0x4E
0011e8 0fae      	ADD  R26,R30
0011e9 1fbf      	ADC  R27,R31
0011ea 940e 1bce 	CALL SUBOPT_0x85
0011ec 940e 1cfa 	CALL __EEPROMWRD
                 ; 0000 0442 
                 ; 0000 0443                     start_time_mode=sys_time;
0011ee 940e 1b82 	CALL SUBOPT_0x7A
                 ; 0000 0444                     if (count_register==A_07){ee_point=point;work_point=point;}
0011f0 91a0 021f 	LDS  R26,_count_register
0011f2 30ad      	CPI  R26,LOW(0xD)
0011f3 f411      	BRNE _0x2BB
0011f4 940e 1bf2 	CALL SUBOPT_0x8B
                 ; 0000 0445                     if (count_register==A_17)
                 _0x2BB:
0011f6 91a0 021f 	LDS  R26,_count_register
0011f8 31a7      	CPI  R26,LOW(0x17)
0011f9 f501      	BRNE _0x2BC
                 ; 0000 0446                             {
                 ; 0000 0447                             for (i=0;i<22;i++)reg[0][i]=reg[1][i];
0011fa e0e0      	LDI  R30,LOW(0)
0011fb 93e0 0200 	STS  _i,R30
                 _0x2BE:
0011fd 91a0 0200 	LDS  R26,_i
0011ff 31a6      	CPI  R26,LOW(0x16)
001200 f4c8      	BRSH _0x2BF
001201 91e0 0200 	LDS  R30,_i
001203 e0a0      	LDI  R26,LOW(_reg)
001204 e0b0      	LDI  R27,HIGH(_reg)
001205 e0f0      	LDI  R31,0
001206 940e 1c9c 	CALL __LSLW2
001208 0fea      	ADD  R30,R26
001209 1ffb      	ADC  R31,R27
00120a 010f      	MOVW R0,R30
                +
00120b e6ac     +LDI R26 , LOW ( _reg + 108 )
00120c e0b0     +LDI R27 , HIGH ( _reg + 108 )
                 	__POINTW2MN _reg,108
00120d 91e0 0200 	LDS  R30,_i
00120f e0f0      	LDI  R31,0
001210 940e 1c9c 	CALL __LSLW2
001212 940e 1a2f 	CALL SUBOPT_0x4F
001214 01d0      	MOVW R26,R0
001215 940e 1cfa 	CALL __EEPROMWRD
001217 940e 18ff 	CALL SUBOPT_0x24
001219 cfe3      	RJMP _0x2BE
                 _0x2BF:
                 ; 0000 0448 }
                 ; 0000 0449                     set_digit_on(' ',3,'a','п');
                 _0x2BC:
00121a 940e 1c1f 	CALL SUBOPT_0x93
00121c 940e 04a2 	CALL _set_digit_on
                 ; 0000 044A                     set_digit_off(' ',3,'a','п');
00121e 940e 1c1f 	CALL SUBOPT_0x93
001220 940e 04bc 	CALL _set_digit_off
                 ; 0000 044B                     set_led_on(0,0,0,1,0,0,0,0);
001222 940e 19ed 	CALL SUBOPT_0x45
001224 940e 1bb3 	CALL SUBOPT_0x7F
001226 940e 1bb6 	CALL SUBOPT_0x80
                 ; 0000 044C                     set_led_off(0,0,0,1,0,0,0,0);
001228 940e 1bb3 	CALL SUBOPT_0x7F
00122a 940e 1a49 	CALL SUBOPT_0x54
                 ; 0000 044D                     for (i=0;i<100;i++)
00122c e0e0      	LDI  R30,LOW(0)
00122d 93e0 0200 	STS  _i,R30
                 _0x2C1:
00122f 91a0 0200 	LDS  R26,_i
001231 36a4      	CPI  R26,LOW(0x64)
001232 f468      	BRSH _0x2C2
                 ; 0000 044E                             {
                 ; 0000 044F                             delay_ms(10);
001233 e0ea      	LDI  R30,LOW(10)
001234 e0f0      	LDI  R31,HIGH(10)
001235 940e 1998 	CALL SUBOPT_0x38
                 ; 0000 0450                             check_rx();
001237 d08a      	RCALL _check_rx
                 ; 0000 0451                             delay_ms(10);
001238 e0ea      	LDI  R30,LOW(10)
001239 e0f0      	LDI  R31,HIGH(10)
00123a 940e 1998 	CALL SUBOPT_0x38
                 ; 0000 0452                             check_rx();
00123c d085      	RCALL _check_rx
                 ; 0000 0453                             }
00123d 940e 18ff 	CALL SUBOPT_0x24
00123f cfef      	RJMP _0x2C1
                 _0x2C2:
                 ; 0000 0454                     key_enter_press_switch=0;
001240 94e8      	CLT
001241 f842      	BLD  R4,2
                 ; 0000 0455                     set_digit_off(' ',' ',' ',' ');
001242 940e 1c28 	CALL SUBOPT_0x94
001244 93ea      	ST   -Y,R30
001245 940e 04bc 	CALL _set_digit_off
                 ; 0000 0456                     start_time_mode=sys_time;start_time=sys_time;
001247 940e 1b82 	CALL SUBOPT_0x7A
001249 940e 1a4d 	CALL SUBOPT_0x55
                 ; 0000 0457                     f_m1=0;
00124b 94e8      	CLT
00124c f8f2      	BLD  R15,2
                 ; 0000 0458                     }
                 _0x2BA:
                 ; 0000 0459                 }
                 ; 0000 045A         if ((key_mode_press_switch==1)&&(key_4==1))
                 _0x2B6:
00124d e0a0      	LDI  R26,0
00124e fc37      	SBRC R3,7
00124f e0a1      	LDI  R26,1
001250 30a1      	CPI  R26,LOW(0x1)
001251 f419      	BRNE _0x2C4
001252 940e 1845 	CALL SUBOPT_0x8
001254 f009      	BREQ _0x2C5
                 _0x2C4:
001255 c034      	RJMP _0x2C3
                 _0x2C5:
                 ; 0000 045B                 {
                 ; 0000 045C                 key_mode_press_switch=0;f_m1=0;
001256 94e8      	CLT
001257 f837      	BLD  R3,7
001258 f8f2      	BLD  R15,2
                 ; 0000 045D                 start_time_mode=sys_time;
001259 940e 1b82 	CALL SUBOPT_0x7A
                 ; 0000 045E                 switch (mode)
00125b 91e0 01f9 	LDS  R30,_mode
                 ; 0000 045F                         {
                 ; 0000 0460                         case 0: mode=1;count_register=1;break;
00125d 30e0      	CPI  R30,0
00125e f431      	BRNE _0x2C9
00125f e0e1      	LDI  R30,LOW(1)
001260 93e0 01f9 	STS  _mode,R30
001262 93e0 021f 	STS  _count_register,R30
001264 c025      	RJMP _0x2C8
                 ; 0000 0461                         case 1: mode=2;data_register=reg[0][count_register];break;
                 _0x2C9:
001265 30e1      	CPI  R30,LOW(0x1)
001266 f451      	BRNE _0x2CA
001267 e0e2      	LDI  R30,LOW(2)
001268 93e0 01f9 	STS  _mode,R30
00126a 940e 1a27 	CALL SUBOPT_0x4E
00126c 940e 1a2f 	CALL SUBOPT_0x4F
00126e 940e 19af 	CALL SUBOPT_0x3C
001270 c019      	RJMP _0x2C8
                 ; 0000 0462                         case 2: mode=1;break;
                 _0x2CA:
001271 30e2      	CPI  R30,LOW(0x2)
001272 f411      	BRNE _0x2CB
001273 e0e1      	LDI  R30,LOW(1)
001274 c013      	RJMP _0x3D6
                 ; 0000 0463                         case 10:mode=11;data_register=reg[0][count_register];break;
                 _0x2CB:
001275 30ea      	CPI  R30,LOW(0xA)
001276 f451      	BRNE _0x2CC
001277 e0eb      	LDI  R30,LOW(11)
001278 93e0 01f9 	STS  _mode,R30
00127a 940e 1a27 	CALL SUBOPT_0x4E
00127c 940e 1a2f 	CALL SUBOPT_0x4F
00127e 940e 19af 	CALL SUBOPT_0x3C
001280 c009      	RJMP _0x2C8
                 ; 0000 0464                         case 11:mode=10;break;
                 _0x2CC:
001281 30eb      	CPI  R30,LOW(0xB)
001282 f411      	BRNE _0x2CD
001283 e0ea      	LDI  R30,LOW(10)
001284 c003      	RJMP _0x3D6
                 ; 0000 0465                         case 100:mode=100;break;
                 _0x2CD:
001285 36e4      	CPI  R30,LOW(0x64)
001286 f419      	BRNE _0x2C8
001287 e6e4      	LDI  R30,LOW(100)
                 _0x3D6:
001288 93e0 01f9 	STS  _mode,R30
                 ; 0000 0466                         }
                 _0x2C8:
                 ; 0000 0467                 }
                 ; 0000 0468 
                 ; 0000 0469         if (((sys_time-start_time)>250))
                 _0x2C3:
00128a 940e 19f9 	CALL SUBOPT_0x48
                +
00128c 3feb     +CPI R30 , LOW ( 0xFB )
00128d e0a0     +LDI R26 , HIGH ( 0xFB )
00128e 07fa     +CPC R31 , R26
00128f e0a0     +LDI R26 , BYTE3 ( 0xFB )
001290 076a     +CPC R22 , R26
001291 e0a0     +LDI R26 , BYTE4 ( 0xFB )
001292 077a     +CPC R23 , R26
                 	__CPD1N 0xFB
001293 f12c      	BRLT _0x2CF
                 ; 0000 046A                 {
                 ; 0000 046B                 set_digit_on(tis,sot,des,ed);
001294 940e 1955 	CALL SUBOPT_0x31
001296 940e 04a2 	CALL _set_digit_on
                 ; 0000 046C                 if ((mode==0)||(key_plus_press==1)||(key_mines_press==1)) set_digit_off(tis,sot,des,ed);
001298 91a0 01f9 	LDS  R26,_mode
00129a 30a0      	CPI  R26,LOW(0x0)
00129b f051      	BREQ _0x2D1
00129c e0a0      	LDI  R26,0
00129d fc34      	SBRC R3,4
00129e e0a1      	LDI  R26,1
00129f 30a1      	CPI  R26,LOW(0x1)
0012a0 f029      	BREQ _0x2D1
0012a1 e0a0      	LDI  R26,0
0012a2 fc35      	SBRC R3,5
0012a3 e0a1      	LDI  R26,1
0012a4 30a1      	CPI  R26,LOW(0x1)
0012a5 f461      	BRNE _0x2D0
                 _0x2D1:
0012a6 91e0 01ff 	LDS  R30,_tis
0012a8 93ea      	ST   -Y,R30
0012a9 91e0 01fe 	LDS  R30,_sot
0012ab 93ea      	ST   -Y,R30
0012ac 91e0 01fd 	LDS  R30,_des
0012ae 93ea      	ST   -Y,R30
0012af 91e0 01fc 	LDS  R30,_ed
0012b1 c002      	RJMP _0x3D7
                 ; 0000 046D                 else set_digit_off(' ',' ',' ',' ');
                 _0x2D0:
0012b2 940e 1c28 	CALL SUBOPT_0x94
                 _0x3D7:
0012b4 93ea      	ST   -Y,R30
0012b5 940e 04bc 	CALL _set_digit_off
                 ; 0000 046E                 start_time=sys_time;
0012b7 940e 1a4d 	CALL SUBOPT_0x55
                 ; 0000 046F                 }
                 ; 0000 0470         check_rx();
                 _0x2CF:
0012b9 d008      	RCALL _check_rx
                 ; 0000 0471         };
0012ba 940c 09d2 	JMP  _0x16E
                 ; 0000 0472         }
                 ; 0000 0473 else while(1){delay_ms(1000);}
                 _0x130:
                 _0x2D5:
0012bc eee8      	LDI  R30,LOW(1000)
0012bd e0f3      	LDI  R31,HIGH(1000)
0012be 940e 1998 	CALL SUBOPT_0x38
0012c0 cffb      	RJMP _0x2D5
                 ; 0000 0474 
                 ; 0000 0475 }         //main закончился.
                 _0x2D8:
0012c1 cfff      	RJMP _0x2D8
                 ;void check_rx()
                 ; 0000 0477         {
                 _check_rx:
                 ; 0000 0478 	if (rx_c==1)			//
0012c2 e0a0      	LDI  R26,0
0012c3 fc20      	SBRC R2,0
0012c4 e0a1      	LDI  R26,1
0012c5 30a1      	CPI  R26,LOW(0x1)
0012c6 f011      	BREQ PC+3
0012c7 940c 1318 	JMP _0x2D9
                 ; 0000 0479 		{
                 ; 0000 047A                 //tmpVal++;		//
                 ; 0000 047B 		check_add_cr();
0012c9 d3a3      	RCALL _check_add_cr
                 ; 0000 047C //  	        mov_buf(error);
                 ; 0000 047D //  	        mov_buf(rx_buffer[rx_wr_index-1]);
                 ; 0000 047E //  	        mov_buf(crc>>8);
                 ; 0000 047F //  	        mov_buf(rx_buffer[rx_wr_index-2]);
                 ; 0000 0480 //                  mov_buf(crc&0x00FF);
                 ; 0000 0481 //                  crc_end();                      //
                 ; 0000 0482 		crc=0xffff;
0012ca 940e 192d 	CALL SUBOPT_0x2D
                 ; 0000 0483 		if (error==0)
0012cc 91e0 022d 	LDS  R30,_error
0012ce 30e0      	CPI  R30,0
0012cf f011      	BREQ PC+3
0012d0 940c 1311 	JMP _0x2DA
                 ; 0000 0484 		        { //tmpVal++;
                 ; 0000 0485 //               		switch (rx_buffer[1])
                 ; 0000 0486 //                                {
                 ; 0000 0487 //                		case 0x1:
                 ; 0000 0488                         if (rx_buffer[1]==1)
                +
0012d2 91e0 0161+LDS R30 , _rx_buffer + 1
                 	__GETB1MN _rx_buffer,1
0012d4 30e1      	CPI  R30,LOW(0x1)
0012d5 f491      	BRNE _0x2DB
                 ; 0000 0489                 		        {
                 ; 0000 048A         	        	        if (rx_counter==8)
0012d6 e0e8      	LDI  R30,LOW(8)
0012d7 15e6      	CP   R30,R6
0012d8 f461      	BRNE _0x2DC
                 ; 0000 048B         		                        {
                 ; 0000 048C                 		                if ((rx_buffer[3]+rx_buffer[5])<5) response_m_aa1();
                +
0012d9 91a0 0163+LDS R26 , _rx_buffer + 3
                 	__GETB2MN _rx_buffer,3
                +
0012db 91e0 0165+LDS R30 , _rx_buffer + 5
                 	__GETB1MN _rx_buffer,5
0012dd 0fae      	ADD  R26,R30
0012de 30a5      	CPI  R26,LOW(0x5)
0012df f410      	BRSH _0x2DD
0012e0 d2b7      	RCALL _response_m_aa1
                 ; 0000 048D                                                 else  response_m_err(2);
0012e1 c002      	RJMP _0x2DE
                 _0x2DD:
0012e2 940e 1c2d 	CALL SUBOPT_0x95
                 ; 0000 048E                                                 }
                 _0x2DE:
                 ; 0000 048F         	                        else response_m_err(3);
0012e4 c002      	RJMP _0x2DF
                 _0x2DC:
0012e5 940e 1c31 	CALL SUBOPT_0x96
                 ; 0000 0490 //                	          	break;
                 ; 0000 0491                 		        }
                 _0x2DF:
                 ; 0000 0492 //                		case 0x48:
                 ; 0000 0493                         else if (rx_buffer[1]==0x48)
0012e7 c029      	RJMP _0x2E0
                 _0x2DB:
                +
0012e8 91e0 0161+LDS R30 , _rx_buffer + 1
                 	__GETB1MN _rx_buffer,1
0012ea 34e8      	CPI  R30,LOW(0x48)
0012eb f479      	BRNE _0x2E1
                 ; 0000 0494                 		        {
                 ; 0000 0495                                        // tmpVal++;
                 ; 0000 0496         	        	        if (rx_counter==8)
0012ec e0e8      	LDI  R30,LOW(8)
0012ed 15e6      	CP   R30,R6
0012ee f449      	BRNE _0x2E2
                 ; 0000 0497         		                        {
                 ; 0000 0498                 		                if (rx_buffer[2]<3) response_m_aa48();
                +
0012ef 91a0 0162+LDS R26 , _rx_buffer + 2
                 	__GETB2MN _rx_buffer,2
0012f1 30a3      	CPI  R26,LOW(0x3)
0012f2 f410      	BRSH _0x2E3
0012f3 d335      	RCALL _response_m_aa48
                 ; 0000 0499                                                 else  response_m_err(2);
0012f4 c002      	RJMP _0x2E4
                 _0x2E3:
0012f5 940e 1c2d 	CALL SUBOPT_0x95
                 ; 0000 049A                                                // tmpVal++;
                 ; 0000 049B                                                 }
                 _0x2E4:
                 ; 0000 049C         	                        else response_m_err(3);
0012f7 c002      	RJMP _0x2E5
                 _0x2E2:
0012f8 940e 1c31 	CALL SUBOPT_0x96
                 ; 0000 049D //                	          	break;
                 ; 0000 049E                 		        }
                 _0x2E5:
                 ; 0000 049F //       		                case 0x46:
                 ; 0000 04A0                         else if (rx_buffer[1]==0x46)
0012fa c016      	RJMP _0x2E6
                 _0x2E1:
                +
0012fb 91e0 0161+LDS R30 , _rx_buffer + 1
                 	__GETB1MN _rx_buffer,1
0012fd 34e6      	CPI  R30,LOW(0x46)
0012fe f479      	BRNE _0x2E7
                 ; 0000 04A1          		                {
                 ; 0000 04A2                                         if (rx_counter==10)
0012ff e0ea      	LDI  R30,LOW(10)
001300 15e6      	CP   R30,R6
001301 f449      	BRNE _0x2E8
                 ; 0000 04A3                                                 {
                 ; 0000 04A4                                                 if (rx_buffer[2]<3) response_m_aa46();
                +
001302 91a0 0162+LDS R26 , _rx_buffer + 2
                 	__GETB2MN _rx_buffer,2
001304 30a3      	CPI  R26,LOW(0x3)
001305 f410      	BRSH _0x2E9
001306 d2e2      	RCALL _response_m_aa46
                 ; 0000 04A5                                                 else response_m_err(2);
001307 c002      	RJMP _0x2EA
                 _0x2E9:
001308 940e 1c2d 	CALL SUBOPT_0x95
                 ; 0000 04A6                                                 }
                 _0x2EA:
                 ; 0000 04A7                  	          	else response_m_err(3);
00130a c002      	RJMP _0x2EB
                 _0x2E8:
00130b 940e 1c31 	CALL SUBOPT_0x96
                 ; 0000 04A8 //                                        rx_c=0;rx_m=0;rx_counter=0;
                 ; 0000 04A9 //        		                crc=0xffff;
                 ; 0000 04AA //                                        rx_wr_index=0;
                 ; 0000 04AB //         	                  	break;
                 ; 0000 04AC          		                }
                 _0x2EB:
                 ; 0000 04AD //                		default:response_m_err(1);
                 ; 0000 04AE                         else response_m_err(1);
00130d c003      	RJMP _0x2EC
                 _0x2E7:
00130e e0e1      	LDI  R30,LOW(1)
00130f 93ea      	ST   -Y,R30
001310 d34f      	RCALL _response_m_err
                 ; 0000 04AF //                		}
                 ; 0000 04B0         	        }
                 _0x2EC:
                 _0x2E6:
                 _0x2E0:
                 ; 0000 04B1                 rx_c=0;rx_m=0;rx_counter=0;
                 _0x2DA:
001311 94e8      	CLT
001312 f820      	BLD  R2,0
001313 f822      	BLD  R2,2
001314 2466      	CLR  R6
                 ; 0000 04B2 		crc=0xffff;
001315 940e 192d 	CALL SUBOPT_0x2D
                 ; 0000 04B3                 rx_wr_index=0;
001317 24bb      	CLR  R11
                 ; 0000 04B4        		}
                 ; 0000 04B5 	}
                 _0x2D9:
001318 9508      	RET
                 ;//--------------------------------------//
                 ;float find_reg(unsigned int a)
                 ; 0000 04B8         {
                 _find_reg:
                 ; 0000 04B9         float d;
                 ; 0000 04BA         if      (a==0x0000)              d=adc_value1;
001319 9724      	SBIW R28,4
                 ;	a -> Y+4
                 ;	d -> Y+0
00131a 81ec      	LDD  R30,Y+4
00131b 81fd      	LDD  R31,Y+4+1
00131c 9730      	SBIW R30,0
00131d f429      	BRNE _0x2ED
00131e 940e 1b91 	CALL SUBOPT_0x7C
001320 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04BB         else if (a==0x0001)              d=adc_value2;
001322 c182      	RJMP _0x2EE
                 _0x2ED:
001323 81ac      	LDD  R26,Y+4
001324 81bd      	LDD  R27,Y+4+1
001325 9711      	SBIW R26,1
001326 f429      	BRNE _0x2EF
001327 940e 1b9a 	CALL SUBOPT_0x7D
001329 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04BC         else if (a==0x0002)              d=buf[buf_end];
00132b c179      	RJMP _0x2F0
                 _0x2EF:
00132c 81ac      	LDD  R26,Y+4
00132d 81bd      	LDD  R27,Y+4+1
00132e 9712      	SBIW R26,2
00132f f449      	BRNE _0x2F1
001330 940e 18d8 	CALL SUBOPT_0x21
001332 940e 190f 	CALL SUBOPT_0x27
001334 940e 1919 	CALL SUBOPT_0x29
001336 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04BD         else if (a==0x0003)
001338 c16c      	RJMP _0x2F2
                 _0x2F1:
001339 81ac      	LDD  R26,Y+4
00133a 81bd      	LDD  R27,Y+4+1
00133b 9713      	SBIW R26,3
00133c f011      	BREQ PC+3
00133d 940c 1382 	JMP _0x2F3
                 ; 0000 04BE                 {
                 ; 0000 04BF                 if (avaria==0) d=1;
00133f fc43      	SBRC R4,3
001340 c005      	RJMP _0x2F4
001341 940e 191e 	CALL SUBOPT_0x2A
001343 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04C0                 else d=0;
001345 c005      	RJMP _0x2F5
                 _0x2F4:
                +
001346 e0e0     +LDI R30 , 0
001347 83e8     +STD Y + 0 , R30
001348 83e9     +STD Y + 0 + 1 , R30
001349 83ea     +STD Y + 0 + 2 , R30
00134a 83eb     +STD Y + 0 + 3 , R30
                 	__CLRD1S 0
                 ; 0000 04C1                 if (alarm2==1) d=d+2;
                 _0x2F5:
00134b 940e 186a 	CALL SUBOPT_0xF
00134d f449      	BRNE _0x2F6
00134e 940e 1c3a 	CALL SUBOPT_0x98
                +
001350 e0a0     +LDI R26 , LOW ( 0x40000000 )
001351 e0b0     +LDI R27 , HIGH ( 0x40000000 )
001352 e080     +LDI R24 , BYTE3 ( 0x40000000 )
001353 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
001354 940e 1dc1 	CALL __ADDF12
001356 c002      	RJMP _0x3D8
                 ; 0000 04C2                 else d=d;
                 _0x2F6:
001357 940e 1c3a 	CALL SUBOPT_0x98
                 _0x3D8:
                +
001359 83e8     +STD Y + 0 , R30
00135a 83f9     +STD Y + 0 + 1 , R31
00135b 836a     +STD Y + 0 + 2 , R22
00135c 837b     +STD Y + 0 + 3 , R23
                 	__PUTD1S 0
                 ; 0000 04C3                 if (alarm1==1) d=d+4;
00135d 940e 1865 	CALL SUBOPT_0xE
00135f f449      	BRNE _0x2F8
001360 940e 1c3a 	CALL SUBOPT_0x98
                +
001362 e0a0     +LDI R26 , LOW ( 0x40800000 )
001363 e0b0     +LDI R27 , HIGH ( 0x40800000 )
001364 e880     +LDI R24 , BYTE3 ( 0x40800000 )
001365 e490     +LDI R25 , BYTE4 ( 0x40800000 )
                 	__GETD2N 0x40800000
001366 940e 1dc1 	CALL __ADDF12
001368 c002      	RJMP _0x3D9
                 ; 0000 04C4                 else d=d;
                 _0x2F8:
001369 940e 1c3a 	CALL SUBOPT_0x98
                 _0x3D9:
                +
00136b 83e8     +STD Y + 0 , R30
00136c 83f9     +STD Y + 0 + 1 , R31
00136d 836a     +STD Y + 0 + 2 , R22
00136e 837b     +STD Y + 0 + 3 , R23
                 	__PUTD1S 0
                 ; 0000 04C5                 if (avaria==1) d=d+8;
00136f 940e 1872 	CALL SUBOPT_0x11
001371 f449      	BRNE _0x2FA
001372 940e 1c3a 	CALL SUBOPT_0x98
                +
001374 e0a0     +LDI R26 , LOW ( 0x41000000 )
001375 e0b0     +LDI R27 , HIGH ( 0x41000000 )
001376 e080     +LDI R24 , BYTE3 ( 0x41000000 )
001377 e491     +LDI R25 , BYTE4 ( 0x41000000 )
                 	__GETD2N 0x41000000
001378 940e 1dc1 	CALL __ADDF12
00137a c002      	RJMP _0x3DA
                 ; 0000 04C6                 else d=d;
                 _0x2FA:
00137b 940e 1c3a 	CALL SUBOPT_0x98
                 _0x3DA:
                +
00137d 83e8     +STD Y + 0 , R30
00137e 83f9     +STD Y + 0 + 1 , R31
00137f 836a     +STD Y + 0 + 2 , R22
001380 837b     +STD Y + 0 + 3 , R23
                 	__PUTD1S 0
                 ; 0000 04C7                 }
                 ; 0000 04C8 
                 ; 0000 04C9 
                 ; 0000 04CA         else if (a==0x0100)              d=reg[0][Y_01];
001381 c123      	RJMP _0x2FC
                 _0x2F3:
001382 81ac      	LDD  R26,Y+4
001383 81bd      	LDD  R27,Y+4+1
001384 30a0      	CPI  R26,LOW(0x100)
001385 e0e1      	LDI  R30,HIGH(0x100)
001386 07be      	CPC  R27,R30
001387 f429      	BRNE _0x2FD
001388 940e 1923 	CALL SUBOPT_0x2B
00138a 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04CB         else if (a==0x0101)              d=reg[0][Y_02];
00138c c118      	RJMP _0x2FE
                 _0x2FD:
00138d 81ac      	LDD  R26,Y+4
00138e 81bd      	LDD  R27,Y+4+1
00138f 30a1      	CPI  R26,LOW(0x101)
001390 e0e1      	LDI  R30,HIGH(0x101)
001391 07be      	CPC  R27,R30
001392 f429      	BRNE _0x2FF
001393 940e 1928 	CALL SUBOPT_0x2C
001395 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04CC         else if (a==0x0102)              d=reg[0][Z_01];
001397 c10d      	RJMP _0x300
                 _0x2FF:
001398 81ac      	LDD  R26,Y+4
001399 81bd      	LDD  R27,Y+4+1
00139a 30a2      	CPI  R26,LOW(0x102)
00139b e0e1      	LDI  R30,HIGH(0x102)
00139c 07be      	CPC  R27,R30
00139d f429      	BRNE _0x301
                +
00139e e0ac     +LDI R26 , LOW ( _reg + 12 )
00139f e0b0     +LDI R27 , HIGH ( _reg + 12 )
                 	__POINTW2MN _reg,12
0013a0 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04CD         else if (a==0x0103)              d=reg[0][Z_02];
0013a2 c102      	RJMP _0x302
                 _0x301:
0013a3 81ac      	LDD  R26,Y+4
0013a4 81bd      	LDD  R27,Y+4+1
0013a5 30a3      	CPI  R26,LOW(0x103)
0013a6 e0e1      	LDI  R30,HIGH(0x103)
0013a7 07be      	CPC  R27,R30
0013a8 f429      	BRNE _0x303
                +
0013a9 e1a0     +LDI R26 , LOW ( _reg + 16 )
0013aa e0b0     +LDI R27 , HIGH ( _reg + 16 )
                 	__POINTW2MN _reg,16
0013ab 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04CE         else if (a==0x0104)              d=reg[0][P___];
0013ad c0f7      	RJMP _0x304
                 _0x303:
0013ae 81ac      	LDD  R26,Y+4
0013af 81bd      	LDD  R27,Y+4+1
0013b0 30a4      	CPI  R26,LOW(0x104)
0013b1 e0e1      	LDI  R30,HIGH(0x104)
0013b2 07be      	CPC  R27,R30
0013b3 f429      	BRNE _0x305
                +
0013b4 e1a4     +LDI R26 , LOW ( _reg + 20 )
0013b5 e0b0     +LDI R27 , HIGH ( _reg + 20 )
                 	__POINTW2MN _reg,20
0013b6 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04CF         else if (a==0x0105)              d=reg[0][C___];
0013b8 c0ec      	RJMP _0x306
                 _0x305:
0013b9 81ac      	LDD  R26,Y+4
0013ba 81bd      	LDD  R27,Y+4+1
0013bb 30a5      	CPI  R26,LOW(0x105)
0013bc e0e1      	LDI  R30,HIGH(0x105)
0013bd 07be      	CPC  R27,R30
0013be f429      	BRNE _0x307
0013bf 940e 1b53 	CALL SUBOPT_0x73
0013c1 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04D0 
                 ; 0000 04D1         else if (a==0x0200)              d=reg[0][A_01];
0013c3 c0e1      	RJMP _0x308
                 _0x307:
0013c4 81ac      	LDD  R26,Y+4
0013c5 81bd      	LDD  R27,Y+4+1
0013c6 30a0      	CPI  R26,LOW(0x200)
0013c7 e0e2      	LDI  R30,HIGH(0x200)
0013c8 07be      	CPC  R27,R30
0013c9 f429      	BRNE _0x309
                +
0013ca e1ac     +LDI R26 , LOW ( _reg + 28 )
0013cb e0b0     +LDI R27 , HIGH ( _reg + 28 )
                 	__POINTW2MN _reg,28
0013cc 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04D2         else if (a==0x0201)              d=reg[0][A_02];
0013ce c0d6      	RJMP _0x30A
                 _0x309:
0013cf 81ac      	LDD  R26,Y+4
0013d0 81bd      	LDD  R27,Y+4+1
0013d1 30a1      	CPI  R26,LOW(0x201)
0013d2 e0e2      	LDI  R30,HIGH(0x201)
0013d3 07be      	CPC  R27,R30
0013d4 f429      	BRNE _0x30B
0013d5 940e 1b58 	CALL SUBOPT_0x74
0013d7 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04D3         else if (a==0x0202)              d=reg[0][A_03];
0013d9 c0cb      	RJMP _0x30C
                 _0x30B:
0013da 81ac      	LDD  R26,Y+4
0013db 81bd      	LDD  R27,Y+4+1
0013dc 30a2      	CPI  R26,LOW(0x202)
0013dd e0e2      	LDI  R30,HIGH(0x202)
0013de 07be      	CPC  R27,R30
0013df f429      	BRNE _0x30D
                +
0013e0 e2a4     +LDI R26 , LOW ( _reg + 36 )
0013e1 e0b0     +LDI R27 , HIGH ( _reg + 36 )
                 	__POINTW2MN _reg,36
0013e2 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04D4         else if (a==0x0203)              d=reg[0][A_04];
0013e4 c0c0      	RJMP _0x30E
                 _0x30D:
0013e5 81ac      	LDD  R26,Y+4
0013e6 81bd      	LDD  R27,Y+4+1
0013e7 30a3      	CPI  R26,LOW(0x203)
0013e8 e0e2      	LDI  R30,HIGH(0x203)
0013e9 07be      	CPC  R27,R30
0013ea f429      	BRNE _0x30F
                +
0013eb e2a8     +LDI R26 , LOW ( _reg + 40 )
0013ec e0b0     +LDI R27 , HIGH ( _reg + 40 )
                 	__POINTW2MN _reg,40
0013ed 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04D5         else if (a==0x0204)              d=reg[0][A_05];
0013ef c0b5      	RJMP _0x310
                 _0x30F:
0013f0 81ac      	LDD  R26,Y+4
0013f1 81bd      	LDD  R27,Y+4+1
0013f2 30a4      	CPI  R26,LOW(0x204)
0013f3 e0e2      	LDI  R30,HIGH(0x204)
0013f4 07be      	CPC  R27,R30
0013f5 f429      	BRNE _0x311
0013f6 940e 1b8c 	CALL SUBOPT_0x7B
0013f8 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04D6         else if (a==0x0205)              d=reg[0][A_06];
0013fa c0aa      	RJMP _0x312
                 _0x311:
0013fb 81ac      	LDD  R26,Y+4
0013fc 81bd      	LDD  R27,Y+4+1
0013fd 30a5      	CPI  R26,LOW(0x205)
0013fe e0e2      	LDI  R30,HIGH(0x205)
0013ff 07be      	CPC  R27,R30
001400 f429      	BRNE _0x313
001401 940e 1a67 	CALL SUBOPT_0x58
001403 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04D7         else if (a==0x0206)              d=reg[0][A_07];
001405 c09f      	RJMP _0x314
                 _0x313:
001406 81ac      	LDD  R26,Y+4
001407 81bd      	LDD  R27,Y+4+1
001408 30a6      	CPI  R26,LOW(0x206)
001409 e0e2      	LDI  R30,HIGH(0x206)
00140a 07be      	CPC  R27,R30
00140b f429      	BRNE _0x315
00140c 940e 19aa 	CALL SUBOPT_0x3B
00140e 940e 1c35 	CALL SUBOPT_0x97
                 ; 0000 04D8         else if (a==0x0207)              d=reg[0][A_08];
001410 c094      	RJMP _0x316
                 _0x315:
001411 81ac      	LDD  R26,Y+4
001412 81bd      	LDD  R27,Y+4+1
001413 30a7      	CPI  R26,LOW(0x207)
001414 e0e2      	LDI  R30,HIGH(0x207)
001415 07be      	CPC  R27,R30
001416 f429      	BRNE _0x317
                +
001417 e3a8     +LDI R26 , LOW ( _reg + 56 )
001418 e0b0     +LDI R27 , HIGH ( _reg + 56 )
                 	__POINTW2MN _reg,56
001419 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04D9         else if (a==0x0208)              d=reg[0][A_09];
00141b c089      	RJMP _0x318
                 _0x317:
00141c 81ac      	LDD  R26,Y+4
00141d 81bd      	LDD  R27,Y+4+1
00141e 30a8      	CPI  R26,LOW(0x208)
00141f e0e2      	LDI  R30,HIGH(0x208)
001420 07be      	CPC  R27,R30
001421 f429      	BRNE _0x319
                +
001422 e3ac     +LDI R26 , LOW ( _reg + 60 )
001423 e0b0     +LDI R27 , HIGH ( _reg + 60 )
                 	__POINTW2MN _reg,60
001424 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04DA         else if (a==0x0209)              d=reg[0][A_10];
001426 c07e      	RJMP _0x31A
                 _0x319:
001427 81ac      	LDD  R26,Y+4
001428 81bd      	LDD  R27,Y+4+1
001429 30a9      	CPI  R26,LOW(0x209)
00142a e0e2      	LDI  R30,HIGH(0x209)
00142b 07be      	CPC  R27,R30
00142c f429      	BRNE _0x31B
                +
00142d e4a0     +LDI R26 , LOW ( _reg + 64 )
00142e e0b0     +LDI R27 , HIGH ( _reg + 64 )
                 	__POINTW2MN _reg,64
00142f 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04DB         else if (a==0x020A)              d=reg[0][A_11];
001431 c073      	RJMP _0x31C
                 _0x31B:
001432 81ac      	LDD  R26,Y+4
001433 81bd      	LDD  R27,Y+4+1
001434 30aa      	CPI  R26,LOW(0x20A)
001435 e0e2      	LDI  R30,HIGH(0x20A)
001436 07be      	CPC  R27,R30
001437 f429      	BRNE _0x31D
                +
001438 e4a4     +LDI R26 , LOW ( _reg + 68 )
001439 e0b0     +LDI R27 , HIGH ( _reg + 68 )
                 	__POINTW2MN _reg,68
00143a 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04DC         else if (a==0x020B)              d=reg[0][A_12];
00143c c068      	RJMP _0x31E
                 _0x31D:
00143d 81ac      	LDD  R26,Y+4
00143e 81bd      	LDD  R27,Y+4+1
00143f 30ab      	CPI  R26,LOW(0x20B)
001440 e0e2      	LDI  R30,HIGH(0x20B)
001441 07be      	CPC  R27,R30
001442 f429      	BRNE _0x31F
                +
001443 e4a8     +LDI R26 , LOW ( _reg + 72 )
001444 e0b0     +LDI R27 , HIGH ( _reg + 72 )
                 	__POINTW2MN _reg,72
001445 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04DD         else if (a==0x020C)              d=reg[0][A_13];
001447 c05d      	RJMP _0x320
                 _0x31F:
001448 81ac      	LDD  R26,Y+4
001449 81bd      	LDD  R27,Y+4+1
00144a 30ac      	CPI  R26,LOW(0x20C)
00144b e0e2      	LDI  R30,HIGH(0x20C)
00144c 07be      	CPC  R27,R30
00144d f429      	BRNE _0x321
                +
00144e e4ac     +LDI R26 , LOW ( _reg + 76 )
00144f e0b0     +LDI R27 , HIGH ( _reg + 76 )
                 	__POINTW2MN _reg,76
001450 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04DE         else if (a==0x020D)              d=reg[0][A_14];
001452 c052      	RJMP _0x322
                 _0x321:
001453 81ac      	LDD  R26,Y+4
001454 81bd      	LDD  R27,Y+4+1
001455 30ad      	CPI  R26,LOW(0x20D)
001456 e0e2      	LDI  R30,HIGH(0x20D)
001457 07be      	CPC  R27,R30
001458 f429      	BRNE _0x323
                +
001459 e5a0     +LDI R26 , LOW ( _reg + 80 )
00145a e0b0     +LDI R27 , HIGH ( _reg + 80 )
                 	__POINTW2MN _reg,80
00145b 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04DF         else if (a==0x020E)              d=reg[0][A_15];
00145d c047      	RJMP _0x324
                 _0x323:
00145e 81ac      	LDD  R26,Y+4
00145f 81bd      	LDD  R27,Y+4+1
001460 30ae      	CPI  R26,LOW(0x20E)
001461 e0e2      	LDI  R30,HIGH(0x20E)
001462 07be      	CPC  R27,R30
001463 f429      	BRNE _0x325
                +
001464 e5a4     +LDI R26 , LOW ( _reg + 84 )
001465 e0b0     +LDI R27 , HIGH ( _reg + 84 )
                 	__POINTW2MN _reg,84
001466 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04E0         else if (a==0x020F)              d=reg[0][A_16];
001468 c03c      	RJMP _0x326
                 _0x325:
001469 81ac      	LDD  R26,Y+4
00146a 81bd      	LDD  R27,Y+4+1
00146b 30af      	CPI  R26,LOW(0x20F)
00146c e0e2      	LDI  R30,HIGH(0x20F)
00146d 07be      	CPC  R27,R30
00146e f429      	BRNE _0x327
                +
00146f e5a8     +LDI R26 , LOW ( _reg + 88 )
001470 e0b0     +LDI R27 , HIGH ( _reg + 88 )
                 	__POINTW2MN _reg,88
001471 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04E1         else if (a==0x0210)              d=reg[0][A_17];
001473 c031      	RJMP _0x328
                 _0x327:
001474 81ac      	LDD  R26,Y+4
001475 81bd      	LDD  R27,Y+4+1
001476 31a0      	CPI  R26,LOW(0x210)
001477 e0e2      	LDI  R30,HIGH(0x210)
001478 07be      	CPC  R27,R30
001479 f429      	BRNE _0x329
                +
00147a e5ac     +LDI R26 , LOW ( _reg + 92 )
00147b e0b0     +LDI R27 , HIGH ( _reg + 92 )
                 	__POINTW2MN _reg,92
00147c 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04E2         else if (a==0x0211)              d=reg[0][A_18];
00147e c026      	RJMP _0x32A
                 _0x329:
00147f 81ac      	LDD  R26,Y+4
001480 81bd      	LDD  R27,Y+4+1
001481 31a1      	CPI  R26,LOW(0x211)
001482 e0e2      	LDI  R30,HIGH(0x211)
001483 07be      	CPC  R27,R30
001484 f429      	BRNE _0x32B
                +
001485 e6a0     +LDI R26 , LOW ( _reg + 96 )
001486 e0b0     +LDI R27 , HIGH ( _reg + 96 )
                 	__POINTW2MN _reg,96
001487 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04E3         else if (a==0x0212)              d=reg[0][A_19];
001489 c01b      	RJMP _0x32C
                 _0x32B:
00148a 81ac      	LDD  R26,Y+4
00148b 81bd      	LDD  R27,Y+4+1
00148c 31a2      	CPI  R26,LOW(0x212)
00148d e0e2      	LDI  R30,HIGH(0x212)
00148e 07be      	CPC  R27,R30
00148f f429      	BRNE _0x32D
                +
001490 e6a4     +LDI R26 , LOW ( _reg + 100 )
001491 e0b0     +LDI R27 , HIGH ( _reg + 100 )
                 	__POINTW2MN _reg,100
001492 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04E4         else if (a==0x0213)              d=reg[0][adres];
001494 c010      	RJMP _0x32E
                 _0x32D:
001495 81ac      	LDD  R26,Y+4
001496 81bd      	LDD  R27,Y+4+1
001497 31a3      	CPI  R26,LOW(0x213)
001498 e0e2      	LDI  R30,HIGH(0x213)
001499 07be      	CPC  R27,R30
00149a f429      	BRNE _0x32F
                +
00149b e6a8     +LDI R26 , LOW ( _reg + 104 )
00149c e0b0     +LDI R27 , HIGH ( _reg + 104 )
                 	__POINTW2MN _reg,104
00149d 940e 1c3f 	CALL SUBOPT_0x99
                 ; 0000 04E5        // else if (a == 0x0214)
                 ; 0000 04E6         else                             d=0;
00149f c005      	RJMP _0x330
                 _0x32F:
                +
0014a0 e0e0     +LDI R30 , 0
0014a1 83e8     +STD Y + 0 , R30
0014a2 83e9     +STD Y + 0 + 1 , R30
0014a3 83ea     +STD Y + 0 + 2 , R30
0014a4 83eb     +STD Y + 0 + 3 , R30
                 	__CLRD1S 0
                 ; 0000 04E7         return d;
                 _0x330:
                 _0x32E:
                 _0x32C:
                 _0x32A:
                 _0x328:
                 _0x326:
                 _0x324:
                 _0x322:
                 _0x320:
                 _0x31E:
                 _0x31C:
                 _0x31A:
                 _0x318:
                 _0x316:
                 _0x314:
                 _0x312:
                 _0x310:
                 _0x30E:
                 _0x30C:
                 _0x30A:
                 _0x308:
                 _0x306:
                 _0x304:
                 _0x302:
                 _0x300:
                 _0x2FE:
                 _0x2FC:
                 _0x2F2:
                 _0x2F0:
                 _0x2EE:
0014a5 940e 1c3a 	CALL SUBOPT_0x98
0014a7 c17f      	RJMP _0x20A0005
                 ; 0000 04E8         }
                 ;void find_save_reg(unsigned int a,float b)
                 ; 0000 04EA         {
                 _find_save_reg:
                 ; 0000 04EB         if (a==0x0100)                   reg[0][Y_01]=b;
                 ;	a -> Y+4
                 ;	b -> Y+0
0014a8 81ac      	LDD  R26,Y+4
0014a9 81bd      	LDD  R27,Y+4+1
0014aa 30a0      	CPI  R26,LOW(0x100)
0014ab e0e1      	LDI  R30,HIGH(0x100)
0014ac 07be      	CPC  R27,R30
0014ad f419      	BRNE _0x331
                +
0014ae e0a4     +LDI R26 , LOW ( _reg + 4 )
0014af e0b0     +LDI R27 , HIGH ( _reg + 4 )
                 	__POINTW2MN _reg,4
0014b0 c0e0      	RJMP _0x3DB
                 ; 0000 04EC         else if (a==0x0101)              reg[0][Y_02]=b;
                 _0x331:
0014b1 81ac      	LDD  R26,Y+4
0014b2 81bd      	LDD  R27,Y+4+1
0014b3 30a1      	CPI  R26,LOW(0x101)
0014b4 e0e1      	LDI  R30,HIGH(0x101)
0014b5 07be      	CPC  R27,R30
0014b6 f419      	BRNE _0x333
                +
0014b7 e0a8     +LDI R26 , LOW ( _reg + 8 )
0014b8 e0b0     +LDI R27 , HIGH ( _reg + 8 )
                 	__POINTW2MN _reg,8
0014b9 c0d7      	RJMP _0x3DB
                 ; 0000 04ED         else if (a==0x0102)              reg[0][Z_01]=b;
                 _0x333:
0014ba 81ac      	LDD  R26,Y+4
0014bb 81bd      	LDD  R27,Y+4+1
0014bc 30a2      	CPI  R26,LOW(0x102)
0014bd e0e1      	LDI  R30,HIGH(0x102)
0014be 07be      	CPC  R27,R30
0014bf f419      	BRNE _0x335
                +
0014c0 e0ac     +LDI R26 , LOW ( _reg + 12 )
0014c1 e0b0     +LDI R27 , HIGH ( _reg + 12 )
                 	__POINTW2MN _reg,12
0014c2 c0ce      	RJMP _0x3DB
                 ; 0000 04EE         else if (a==0x0103)              reg[0][Z_02]=b;
                 _0x335:
0014c3 81ac      	LDD  R26,Y+4
0014c4 81bd      	LDD  R27,Y+4+1
0014c5 30a3      	CPI  R26,LOW(0x103)
0014c6 e0e1      	LDI  R30,HIGH(0x103)
0014c7 07be      	CPC  R27,R30
0014c8 f419      	BRNE _0x337
                +
0014c9 e1a0     +LDI R26 , LOW ( _reg + 16 )
0014ca e0b0     +LDI R27 , HIGH ( _reg + 16 )
                 	__POINTW2MN _reg,16
0014cb c0c5      	RJMP _0x3DB
                 ; 0000 04EF         else if (a==0x0104)              reg[0][P___]=b;
                 _0x337:
0014cc 81ac      	LDD  R26,Y+4
0014cd 81bd      	LDD  R27,Y+4+1
0014ce 30a4      	CPI  R26,LOW(0x104)
0014cf e0e1      	LDI  R30,HIGH(0x104)
0014d0 07be      	CPC  R27,R30
0014d1 f419      	BRNE _0x339
                +
0014d2 e1a4     +LDI R26 , LOW ( _reg + 20 )
0014d3 e0b0     +LDI R27 , HIGH ( _reg + 20 )
                 	__POINTW2MN _reg,20
0014d4 c0bc      	RJMP _0x3DB
                 ; 0000 04F0         else if (a==0x0105)              reg[0][C___]=b;
                 _0x339:
0014d5 81ac      	LDD  R26,Y+4
0014d6 81bd      	LDD  R27,Y+4+1
0014d7 30a5      	CPI  R26,LOW(0x105)
0014d8 e0e1      	LDI  R30,HIGH(0x105)
0014d9 07be      	CPC  R27,R30
0014da f419      	BRNE _0x33B
                +
0014db e1a8     +LDI R26 , LOW ( _reg + 24 )
0014dc e0b0     +LDI R27 , HIGH ( _reg + 24 )
                 	__POINTW2MN _reg,24
0014dd c0b3      	RJMP _0x3DB
                 ; 0000 04F1 
                 ; 0000 04F2         else if (a==0x0200)              reg[0][A_01]=b;
                 _0x33B:
0014de 81ac      	LDD  R26,Y+4
0014df 81bd      	LDD  R27,Y+4+1
0014e0 30a0      	CPI  R26,LOW(0x200)
0014e1 e0e2      	LDI  R30,HIGH(0x200)
0014e2 07be      	CPC  R27,R30
0014e3 f419      	BRNE _0x33D
                +
0014e4 e1ac     +LDI R26 , LOW ( _reg + 28 )
0014e5 e0b0     +LDI R27 , HIGH ( _reg + 28 )
                 	__POINTW2MN _reg,28
0014e6 c0aa      	RJMP _0x3DB
                 ; 0000 04F3         else if (a==0x0201)              reg[0][A_02]=b;
                 _0x33D:
0014e7 81ac      	LDD  R26,Y+4
0014e8 81bd      	LDD  R27,Y+4+1
0014e9 30a1      	CPI  R26,LOW(0x201)
0014ea e0e2      	LDI  R30,HIGH(0x201)
0014eb 07be      	CPC  R27,R30
0014ec f419      	BRNE _0x33F
                +
0014ed e2a0     +LDI R26 , LOW ( _reg + 32 )
0014ee e0b0     +LDI R27 , HIGH ( _reg + 32 )
                 	__POINTW2MN _reg,32
0014ef c0a1      	RJMP _0x3DB
                 ; 0000 04F4         else if (a==0x0202)              reg[0][A_03]=b;
                 _0x33F:
0014f0 81ac      	LDD  R26,Y+4
0014f1 81bd      	LDD  R27,Y+4+1
0014f2 30a2      	CPI  R26,LOW(0x202)
0014f3 e0e2      	LDI  R30,HIGH(0x202)
0014f4 07be      	CPC  R27,R30
0014f5 f419      	BRNE _0x341
                +
0014f6 e2a4     +LDI R26 , LOW ( _reg + 36 )
0014f7 e0b0     +LDI R27 , HIGH ( _reg + 36 )
                 	__POINTW2MN _reg,36
0014f8 c098      	RJMP _0x3DB
                 ; 0000 04F5         else if (a==0x0203)              reg[0][A_04]=b;
                 _0x341:
0014f9 81ac      	LDD  R26,Y+4
0014fa 81bd      	LDD  R27,Y+4+1
0014fb 30a3      	CPI  R26,LOW(0x203)
0014fc e0e2      	LDI  R30,HIGH(0x203)
0014fd 07be      	CPC  R27,R30
0014fe f419      	BRNE _0x343
                +
0014ff e2a8     +LDI R26 , LOW ( _reg + 40 )
001500 e0b0     +LDI R27 , HIGH ( _reg + 40 )
                 	__POINTW2MN _reg,40
001501 c08f      	RJMP _0x3DB
                 ; 0000 04F6         else if (a==0x0204)              reg[0][A_05]=b;
                 _0x343:
001502 81ac      	LDD  R26,Y+4
001503 81bd      	LDD  R27,Y+4+1
001504 30a4      	CPI  R26,LOW(0x204)
001505 e0e2      	LDI  R30,HIGH(0x204)
001506 07be      	CPC  R27,R30
001507 f419      	BRNE _0x345
                +
001508 e2ac     +LDI R26 , LOW ( _reg + 44 )
001509 e0b0     +LDI R27 , HIGH ( _reg + 44 )
                 	__POINTW2MN _reg,44
00150a c086      	RJMP _0x3DB
                 ; 0000 04F7         else if (a==0x0205)              reg[0][A_06]=b;
                 _0x345:
00150b 81ac      	LDD  R26,Y+4
00150c 81bd      	LDD  R27,Y+4+1
00150d 30a5      	CPI  R26,LOW(0x205)
00150e e0e2      	LDI  R30,HIGH(0x205)
00150f 07be      	CPC  R27,R30
001510 f419      	BRNE _0x347
                +
001511 e3a0     +LDI R26 , LOW ( _reg + 48 )
001512 e0b0     +LDI R27 , HIGH ( _reg + 48 )
                 	__POINTW2MN _reg,48
001513 c07d      	RJMP _0x3DB
                 ; 0000 04F8         else if (a==0x0206)              reg[0][A_07]=b;
                 _0x347:
001514 81ac      	LDD  R26,Y+4
001515 81bd      	LDD  R27,Y+4+1
001516 30a6      	CPI  R26,LOW(0x206)
001517 e0e2      	LDI  R30,HIGH(0x206)
001518 07be      	CPC  R27,R30
001519 f419      	BRNE _0x349
                +
00151a e3a4     +LDI R26 , LOW ( _reg + 52 )
00151b e0b0     +LDI R27 , HIGH ( _reg + 52 )
                 	__POINTW2MN _reg,52
00151c c074      	RJMP _0x3DB
                 ; 0000 04F9         else if (a==0x0207)              reg[0][A_08]=b;
                 _0x349:
00151d 81ac      	LDD  R26,Y+4
00151e 81bd      	LDD  R27,Y+4+1
00151f 30a7      	CPI  R26,LOW(0x207)
001520 e0e2      	LDI  R30,HIGH(0x207)
001521 07be      	CPC  R27,R30
001522 f419      	BRNE _0x34B
                +
001523 e3a8     +LDI R26 , LOW ( _reg + 56 )
001524 e0b0     +LDI R27 , HIGH ( _reg + 56 )
                 	__POINTW2MN _reg,56
001525 c06b      	RJMP _0x3DB
                 ; 0000 04FA         else if (a==0x0208)              reg[0][A_09]=b;
                 _0x34B:
001526 81ac      	LDD  R26,Y+4
001527 81bd      	LDD  R27,Y+4+1
001528 30a8      	CPI  R26,LOW(0x208)
001529 e0e2      	LDI  R30,HIGH(0x208)
00152a 07be      	CPC  R27,R30
00152b f419      	BRNE _0x34D
                +
00152c e3ac     +LDI R26 , LOW ( _reg + 60 )
00152d e0b0     +LDI R27 , HIGH ( _reg + 60 )
                 	__POINTW2MN _reg,60
00152e c062      	RJMP _0x3DB
                 ; 0000 04FB         else if (a==0x0209)              reg[0][A_10]=b;
                 _0x34D:
00152f 81ac      	LDD  R26,Y+4
001530 81bd      	LDD  R27,Y+4+1
001531 30a9      	CPI  R26,LOW(0x209)
001532 e0e2      	LDI  R30,HIGH(0x209)
001533 07be      	CPC  R27,R30
001534 f419      	BRNE _0x34F
                +
001535 e4a0     +LDI R26 , LOW ( _reg + 64 )
001536 e0b0     +LDI R27 , HIGH ( _reg + 64 )
                 	__POINTW2MN _reg,64
001537 c059      	RJMP _0x3DB
                 ; 0000 04FC         else if (a==0x020A)              reg[0][A_11]=b;
                 _0x34F:
001538 81ac      	LDD  R26,Y+4
001539 81bd      	LDD  R27,Y+4+1
00153a 30aa      	CPI  R26,LOW(0x20A)
00153b e0e2      	LDI  R30,HIGH(0x20A)
00153c 07be      	CPC  R27,R30
00153d f419      	BRNE _0x351
                +
00153e e4a4     +LDI R26 , LOW ( _reg + 68 )
00153f e0b0     +LDI R27 , HIGH ( _reg + 68 )
                 	__POINTW2MN _reg,68
001540 c050      	RJMP _0x3DB
                 ; 0000 04FD         else if (a==0x020B)              reg[0][A_12]=b;
                 _0x351:
001541 81ac      	LDD  R26,Y+4
001542 81bd      	LDD  R27,Y+4+1
001543 30ab      	CPI  R26,LOW(0x20B)
001544 e0e2      	LDI  R30,HIGH(0x20B)
001545 07be      	CPC  R27,R30
001546 f419      	BRNE _0x353
                +
001547 e4a8     +LDI R26 , LOW ( _reg + 72 )
001548 e0b0     +LDI R27 , HIGH ( _reg + 72 )
                 	__POINTW2MN _reg,72
001549 c047      	RJMP _0x3DB
                 ; 0000 04FE         else if (a==0x020C)              reg[0][A_13]=b;
                 _0x353:
00154a 81ac      	LDD  R26,Y+4
00154b 81bd      	LDD  R27,Y+4+1
00154c 30ac      	CPI  R26,LOW(0x20C)
00154d e0e2      	LDI  R30,HIGH(0x20C)
00154e 07be      	CPC  R27,R30
00154f f419      	BRNE _0x355
                +
001550 e4ac     +LDI R26 , LOW ( _reg + 76 )
001551 e0b0     +LDI R27 , HIGH ( _reg + 76 )
                 	__POINTW2MN _reg,76
001552 c03e      	RJMP _0x3DB
                 ; 0000 04FF         else if (a==0x020D)              reg[0][A_14]=b;
                 _0x355:
001553 81ac      	LDD  R26,Y+4
001554 81bd      	LDD  R27,Y+4+1
001555 30ad      	CPI  R26,LOW(0x20D)
001556 e0e2      	LDI  R30,HIGH(0x20D)
001557 07be      	CPC  R27,R30
001558 f419      	BRNE _0x357
                +
001559 e5a0     +LDI R26 , LOW ( _reg + 80 )
00155a e0b0     +LDI R27 , HIGH ( _reg + 80 )
                 	__POINTW2MN _reg,80
00155b c035      	RJMP _0x3DB
                 ; 0000 0500         else if (a==0x020E)              reg[0][A_15]=b;
                 _0x357:
00155c 81ac      	LDD  R26,Y+4
00155d 81bd      	LDD  R27,Y+4+1
00155e 30ae      	CPI  R26,LOW(0x20E)
00155f e0e2      	LDI  R30,HIGH(0x20E)
001560 07be      	CPC  R27,R30
001561 f419      	BRNE _0x359
                +
001562 e5a4     +LDI R26 , LOW ( _reg + 84 )
001563 e0b0     +LDI R27 , HIGH ( _reg + 84 )
                 	__POINTW2MN _reg,84
001564 c02c      	RJMP _0x3DB
                 ; 0000 0501         else if (a==0x020F)              reg[0][A_16]=b;
                 _0x359:
001565 81ac      	LDD  R26,Y+4
001566 81bd      	LDD  R27,Y+4+1
001567 30af      	CPI  R26,LOW(0x20F)
001568 e0e2      	LDI  R30,HIGH(0x20F)
001569 07be      	CPC  R27,R30
00156a f419      	BRNE _0x35B
                +
00156b e5a8     +LDI R26 , LOW ( _reg + 88 )
00156c e0b0     +LDI R27 , HIGH ( _reg + 88 )
                 	__POINTW2MN _reg,88
00156d c023      	RJMP _0x3DB
                 ; 0000 0502         else if (a==0x0210)              reg[0][A_17]=b;
                 _0x35B:
00156e 81ac      	LDD  R26,Y+4
00156f 81bd      	LDD  R27,Y+4+1
001570 31a0      	CPI  R26,LOW(0x210)
001571 e0e2      	LDI  R30,HIGH(0x210)
001572 07be      	CPC  R27,R30
001573 f419      	BRNE _0x35D
                +
001574 e5ac     +LDI R26 , LOW ( _reg + 92 )
001575 e0b0     +LDI R27 , HIGH ( _reg + 92 )
                 	__POINTW2MN _reg,92
001576 c01a      	RJMP _0x3DB
                 ; 0000 0503         else if (a==0x0211)              reg[0][A_18]=b;
                 _0x35D:
001577 81ac      	LDD  R26,Y+4
001578 81bd      	LDD  R27,Y+4+1
001579 31a1      	CPI  R26,LOW(0x211)
00157a e0e2      	LDI  R30,HIGH(0x211)
00157b 07be      	CPC  R27,R30
00157c f419      	BRNE _0x35F
                +
00157d e6a0     +LDI R26 , LOW ( _reg + 96 )
00157e e0b0     +LDI R27 , HIGH ( _reg + 96 )
                 	__POINTW2MN _reg,96
00157f c011      	RJMP _0x3DB
                 ; 0000 0504         else if (a==0x0212)              reg[0][A_19]=b;
                 _0x35F:
001580 81ac      	LDD  R26,Y+4
001581 81bd      	LDD  R27,Y+4+1
001582 31a2      	CPI  R26,LOW(0x212)
001583 e0e2      	LDI  R30,HIGH(0x212)
001584 07be      	CPC  R27,R30
001585 f419      	BRNE _0x361
                +
001586 e6a4     +LDI R26 , LOW ( _reg + 100 )
001587 e0b0     +LDI R27 , HIGH ( _reg + 100 )
                 	__POINTW2MN _reg,100
001588 c008      	RJMP _0x3DB
                 ; 0000 0505         else if (a==0x0213)              reg[0][adres]=b;
                 _0x361:
001589 81ac      	LDD  R26,Y+4
00158a 81bd      	LDD  R27,Y+4+1
00158b 31a3      	CPI  R26,LOW(0x213)
00158c e0e2      	LDI  R30,HIGH(0x213)
00158d 07be      	CPC  R27,R30
00158e f441      	BRNE _0x363
                +
00158f e6a8     +LDI R26 , LOW ( _reg + 104 )
001590 e0b0     +LDI R27 , HIGH ( _reg + 104 )
                 	__POINTW2MN _reg,104
                 _0x3DB:
                +
001591 81e8     +LDD R30 , Y + 0
001592 81f9     +LDD R31 , Y + 0 + 1
001593 816a     +LDD R22 , Y + 0 + 2
001594 817b     +LDD R23 , Y + 0 + 3
                 	__GETD1S 0
001595 940e 1cfa 	CALL __EEPROMWRD
                 ; 0000 0506         }
                 _0x363:
001597 c08f      	RJMP _0x20A0005
                 ;//--------------------------------------//
                 ;void response_m_aa1()                   //
                 ; 0000 0509 	{mov_buf_mod(rx_buffer[0]);     //
                 _response_m_aa1:
001598 940e 1c42 	CALL SUBOPT_0x9A
                 ; 0000 050A 	mov_buf_mod(rx_buffer[1]);      //
                 ; 0000 050B 	mov_buf_mod(1);                 //
00159a e0e1      	LDI  R30,LOW(1)
00159b 93ea      	ST   -Y,R30
00159c d10e      	RCALL _mov_buf_mod
                 ; 0000 050C         while (rx_buffer[5]>0)          //
                 _0x364:
                +
00159d 91a0 0165+LDS R26 , _rx_buffer + 5
                 	__GETB2MN _rx_buffer,5
00159f 30a1      	CPI  R26,LOW(0x1)
0015a0 f410      	BRSH PC+3
0015a1 940c 15e4 	JMP _0x366
                 ; 0000 050D                 {if (rx_buffer[3]==0)   //
                +
0015a3 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
0015a5 30e0      	CPI  R30,0
0015a6 f441      	BRNE _0x367
                 ; 0000 050E                         {if (avaria==1) i=1;
0015a7 940e 1872 	CALL SUBOPT_0x11
0015a9 f411      	BRNE _0x368
0015aa e0e1      	LDI  R30,LOW(1)
0015ab c001      	RJMP _0x3DC
                 ; 0000 050F                         else i=0;}      //
                 _0x368:
0015ac e0e0      	LDI  R30,LOW(0)
                 _0x3DC:
0015ad 93e0 0200 	STS  _i,R30
                 ; 0000 0510                 if (rx_buffer[3]==1)    //
                 _0x367:
                +
0015af 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
0015b1 30e1      	CPI  R30,LOW(0x1)
0015b2 f451      	BRNE _0x36A
                 ; 0000 0511                         {if (alarm1==0) i=i+2;
0015b3 fc44      	SBRC R4,4
0015b4 c004      	RJMP _0x36B
0015b5 91e0 0200 	LDS  R30,_i
0015b7 5fee      	SUBI R30,-LOW(2)
0015b8 c002      	RJMP _0x3DD
                 ; 0000 0512         	        else i=i;}      //
                 _0x36B:
0015b9 91e0 0200 	LDS  R30,_i
                 _0x3DD:
0015bb 93e0 0200 	STS  _i,R30
                 ; 0000 0513                 if (rx_buffer[3]==2)    //
                 _0x36A:
                +
0015bd 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
0015bf 30e2      	CPI  R30,LOW(0x2)
0015c0 f451      	BRNE _0x36D
                 ; 0000 0514                         {if (alarm2==0) i=i+4;
0015c1 fc45      	SBRC R4,5
0015c2 c004      	RJMP _0x36E
0015c3 91e0 0200 	LDS  R30,_i
0015c5 5fec      	SUBI R30,-LOW(4)
0015c6 c002      	RJMP _0x3DE
                 ; 0000 0515                         else i=i;}      //
                 _0x36E:
0015c7 91e0 0200 	LDS  R30,_i
                 _0x3DE:
0015c9 93e0 0200 	STS  _i,R30
                 ; 0000 0516                 if (rx_buffer[3]==3)    //
                 _0x36D:
                +
0015cb 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
0015cd 30e3      	CPI  R30,LOW(0x3)
0015ce f451      	BRNE _0x370
                 ; 0000 0517                         {if (avaria==0) i=i+4;
0015cf fc43      	SBRC R4,3
0015d0 c004      	RJMP _0x371
0015d1 91e0 0200 	LDS  R30,_i
0015d3 5fec      	SUBI R30,-LOW(4)
0015d4 c002      	RJMP _0x3DF
                 ; 0000 0518                         else i=i;}      //
                 _0x371:
0015d5 91e0 0200 	LDS  R30,_i
                 _0x3DF:
0015d7 93e0 0200 	STS  _i,R30
                 ; 0000 0519                	rx_buffer[5]--;         //
                 _0x370:
                +
0015d9 91e0 0165+LDS R30 , _rx_buffer + 5
                 	__GETB1MN _rx_buffer,5
0015db 50e1      	SUBI R30,LOW(1)
                +
0015dc 93e0 0165+STS _rx_buffer + 5 , R30
                 	__PUTB1MN _rx_buffer,5
                 ; 0000 051A                	rx_buffer[3]++;}        //
                +
0015de 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
0015e0 5fef      	SUBI R30,-LOW(1)
                +
0015e1 93e0 0163+STS _rx_buffer + 3 , R30
                 	__PUTB1MN _rx_buffer,3
0015e3 cfb9      	RJMP _0x364
                 _0x366:
                 ; 0000 051B         mov_buf_mod(i);crc_end();}      //
0015e4 91e0 0200 	LDS  R30,_i
0015e6 940e 1c4c 	CALL SUBOPT_0x9B
0015e8 9508      	RET
                 ;//--------------------------------------//
                 ;void response_m_aa46()                  //
                 ; 0000 051E 	{float temp;                    //
                 _response_m_aa46:
                 ; 0000 051F         int adr;                        //
                 ; 0000 0520         *((unsigned char *)(&temp)+0)=rx_buffer[4];
0015e9 9724      	SBIW R28,4
0015ea 931a      	ST   -Y,R17
0015eb 930a      	ST   -Y,R16
                 ;	temp -> Y+2
                 ;	adr -> R16,R17
                +
0015ec 91e0 0164+LDS R30 , _rx_buffer + 4
                 	__GETB1MN _rx_buffer,4
0015ee 83ea      	STD  Y+2,R30
                 ; 0000 0521         *((unsigned char *)(&temp)+1)=rx_buffer[5];
                +
0015ef 91e0 0165+LDS R30 , _rx_buffer + 5
                 	__GETB1MN _rx_buffer,5
0015f1 83eb      	STD  Y+3,R30
                 ; 0000 0522         *((unsigned char *)(&temp)+2)=rx_buffer[6];
                +
0015f2 91e0 0166+LDS R30 , _rx_buffer + 6
                 	__GETB1MN _rx_buffer,6
0015f4 83ec      	STD  Y+4,R30
                 ; 0000 0523         *((unsigned char *)(&temp)+3)=rx_buffer[7];
                +
0015f5 91e0 0167+LDS R30 , _rx_buffer + 7
                 	__GETB1MN _rx_buffer,7
0015f7 83ed      	STD  Y+5,R30
                 ; 0000 0524 
                 ; 0000 0525        	adr=rx_buffer[2];               //
                +
0015f8 9100 0162+LDS R16 , _rx_buffer + 2
                 	__GETBRMN 16,_rx_buffer,2
0015fa 2711      	CLR  R17
                 ; 0000 0526        	adr=adr<<8;                     //
0015fb 2f10      	MOV  R17,R16
0015fc 2700      	CLR  R16
                 ; 0000 0527        	adr=adr+rx_buffer[3];           //
                +
0015fd 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
0015ff e0f0      	LDI  R31,0
                +
001600 0f0e     +ADD R16 , R30
001601 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
                 ; 0000 0528         find_save_reg(adr,temp);        //
001602 931a      	ST   -Y,R17
001603 930a      	ST   -Y,R16
                +
001604 81ec     +LDD R30 , Y + 4
001605 81fd     +LDD R31 , Y + 4 + 1
001606 816e     +LDD R22 , Y + 4 + 2
001607 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
001608 940e 1ccf 	CALL __PUTPARD1
00160a de9d      	RCALL _find_save_reg
                 ; 0000 0529 	mov_buf_mod(rx_buffer[0]);      //
00160b 940e 1c42 	CALL SUBOPT_0x9A
                 ; 0000 052A 	mov_buf_mod(rx_buffer[1]);      //
                 ; 0000 052B 	mov_buf_mod(rx_buffer[2]);      //
                +
00160d 91e0 0162+LDS R30 , _rx_buffer + 2
                 	__GETB1MN _rx_buffer,2
00160f 93ea      	ST   -Y,R30
001610 d09a      	RCALL _mov_buf_mod
                 ; 0000 052C 	mov_buf_mod(rx_buffer[3]);      //
                +
001611 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
001613 93ea      	ST   -Y,R30
001614 d096      	RCALL _mov_buf_mod
                 ; 0000 052D 	mov_buf_mod(rx_buffer[4]);      //
                +
001615 91e0 0164+LDS R30 , _rx_buffer + 4
                 	__GETB1MN _rx_buffer,4
001617 93ea      	ST   -Y,R30
001618 d092      	RCALL _mov_buf_mod
                 ; 0000 052E 	mov_buf_mod(rx_buffer[5]);      //
                +
001619 91e0 0165+LDS R30 , _rx_buffer + 5
                 	__GETB1MN _rx_buffer,5
00161b 93ea      	ST   -Y,R30
00161c d08e      	RCALL _mov_buf_mod
                 ; 0000 052F 	mov_buf_mod(rx_buffer[6]);      //
                +
00161d 91e0 0166+LDS R30 , _rx_buffer + 6
                 	__GETB1MN _rx_buffer,6
00161f 93ea      	ST   -Y,R30
001620 d08a      	RCALL _mov_buf_mod
                 ; 0000 0530 	mov_buf_mod(rx_buffer[7]);      //
                +
001621 91e0 0167+LDS R30 , _rx_buffer + 7
                 	__GETB1MN _rx_buffer,7
001623 940e 1c4c 	CALL SUBOPT_0x9B
                 ; 0000 0531         crc_end();}                     //
001625 8119      	LDD  R17,Y+1
001626 8108      	LDD  R16,Y+0
                 _0x20A0005:
001627 9626      	ADIW R28,6
001628 9508      	RET
                 ;//--------------------------------------//
                 ;void response_m_aa48()                  //
                 ; 0000 0534 	{char a,i;                      //
                 _response_m_aa48:
                 ; 0000 0535         float temp;                     //
                 ; 0000 0536         int adr;                        //
                 ; 0000 0537         i=rx_buffer[5]*2;               //
001629 9724      	SBIW R28,4
00162a 940e 1ecc 	CALL __SAVELOCR4
                 ;	a -> R17
                 ;	i -> R16
                 ;	temp -> Y+4
                 ;	adr -> R18,R19
                +
00162c 91e0 0165+LDS R30 , _rx_buffer + 5
                 	__GETB1MN _rx_buffer,5
00162e e0a2      	LDI  R26,LOW(2)
00162f 9fea      	MUL  R30,R26
001630 01f0      	MOVW R30,R0
001631 2f0e      	MOV  R16,R30
                 ; 0000 0538         a=0;                            //
001632 e010      	LDI  R17,LOW(0)
                 ; 0000 0539        	mov_buf_mod(rx_buffer[0]);      //
001633 940e 1c42 	CALL SUBOPT_0x9A
                 ; 0000 053A         mov_buf_mod(rx_buffer[1]);      //
                 ; 0000 053B        	mov_buf_mod(rx_buffer[5]*4);    //
                +
001635 91e0 0165+LDS R30 , _rx_buffer + 5
                 	__GETB1MN _rx_buffer,5
001637 e0a4      	LDI  R26,LOW(4)
001638 9fea      	MUL  R30,R26
001639 01f0      	MOVW R30,R0
00163a 93ea      	ST   -Y,R30
00163b d06f      	RCALL _mov_buf_mod
                 ; 0000 053C        	adr=rx_buffer[2];               //
                +
00163c 9120 0162+LDS R18 , _rx_buffer + 2
                 	__GETBRMN 18,_rx_buffer,2
00163e 2733      	CLR  R19
                 ; 0000 053D        	adr=adr<<8;                     //
00163f 2f32      	MOV  R19,R18
001640 2722      	CLR  R18
                 ; 0000 053E        	adr=adr+rx_buffer[3];           //
                +
001641 91e0 0163+LDS R30 , _rx_buffer + 3
                 	__GETB1MN _rx_buffer,3
001643 e0f0      	LDI  R31,0
                +
001644 0f2e     +ADD R18 , R30
001645 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0000 053F         temp=find_reg(adr);             //
001646 933a      	ST   -Y,R19
001647 932a      	ST   -Y,R18
001648 dcd0      	RCALL _find_reg
                +
001649 83ec     +STD Y + 4 , R30
00164a 83fd     +STD Y + 4 + 1 , R31
00164b 836e     +STD Y + 4 + 2 , R22
00164c 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 ; 0000 0540         while (i>0)                     //
                 _0x373:
00164d 3001      	CPI  R16,1
00164e f060      	BRLO _0x375
                 ; 0000 0541        	        {mov_buf_mod(*((unsigned char *)(&temp)+0+a));
00164f 01de      	MOVW R26,R28
001650 9614      	ADIW R26,4
001651 940e 1c51 	CALL SUBOPT_0x9C
                 ; 0000 0542                 mov_buf_mod(*((unsigned char *)(&temp)+1+a));
001653 01de      	MOVW R26,R28
001654 9615      	ADIW R26,5
001655 940e 1c51 	CALL SUBOPT_0x9C
                 ; 0000 0543        	        i--;a++;a++;}           //
001657 5001      	SUBI R16,1
001658 5f1f      	SUBI R17,-1
001659 5f1f      	SUBI R17,-1
00165a cff2      	RJMP _0x373
                 _0x375:
                 ; 0000 0544 	crc_end();}                     //
00165b d065      	RCALL _crc_end
00165c 940e 1ed1 	CALL __LOADLOCR4
00165e 9628      	ADIW R28,8
00165f 9508      	RET
                 ;//--------------------------------------//
                 ;void response_m_err(char a)             //
                 ; 0000 0547         {mov_buf_mod(rx_buffer[0]);     //
                 _response_m_err:
                 ;	a -> Y+0
001660 91e0 0160 	LDS  R30,_rx_buffer
001662 93ea      	ST   -Y,R30
001663 d047      	RCALL _mov_buf_mod
                 ; 0000 0548 	mov_buf_mod(rx_buffer[1]|128);  //
                +
001664 91e0 0161+LDS R30 , _rx_buffer + 1
                 	__GETB1MN _rx_buffer,1
001666 68e0      	ORI  R30,0x80
001667 93ea      	ST   -Y,R30
001668 d042      	RCALL _mov_buf_mod
                 ; 0000 0549 	mov_buf_mod(a);                 //
001669 81e8      	LD   R30,Y
00166a 940e 1c4c 	CALL SUBOPT_0x9B
                 ; 0000 054A         crc_end();}                     //
00166c c052      	RJMP _0x20A0004
                 ;//--------------------------------------//
                 ;void check_add_cr()                     //
                 ; 0000 054D 	{char i;                        //
                 _check_add_cr:
                 ; 0000 054E 	error=0;crc=0xFFFF;
00166d 931a      	ST   -Y,R17
                 ;	i -> R17
00166e e0e0      	LDI  R30,LOW(0)
00166f 93e0 022d 	STS  _error,R30
001671 940e 192d 	CALL SUBOPT_0x2D
                 ; 0000 054F        	i=(unsigned char)reg[0][adres];  //
                +
001673 e6a8     +LDI R26 , LOW ( _reg + 104 )
001674 e0b0     +LDI R27 , HIGH ( _reg + 104 )
                 	__POINTW2MN _reg,104
001675 940e 1ce6 	CALL __EEPROMRDD
001677 940e 1d4e 	CALL __CFD1U
001679 2f1e      	MOV  R17,R30
                 ; 0000 0550 	if (rx_buffer[0]!=i) error=5;   //
00167a 91a0 0160 	LDS  R26,_rx_buffer
00167c 171a      	CP   R17,R26
00167d f019      	BREQ _0x376
00167e e0e5      	LDI  R30,LOW(5)
00167f 93e0 022d 	STS  _error,R30
                 ; 0000 0551 	i=0;                            //
                 _0x376:
001681 e010      	LDI  R17,LOW(0)
                 ; 0000 0552 	while (i<(rx_wr_index-2)){crc_rtu(rx_buffer[i]);i++;}
                 _0x377:
001682 2deb      	MOV  R30,R11
001683 50e2      	SUBI R30,LOW(2)
001684 171e      	CP   R17,R30
001685 f440      	BRSH _0x379
001686 2fe1      	MOV  R30,R17
001687 940e 1815 	CALL SUBOPT_0x0
001689 81e0      	LD   R30,Z
00168a 93ea      	ST   -Y,R30
00168b d047      	RCALL _crc_rtu
00168c 5f1f      	SUBI R17,-1
00168d cff4      	RJMP _0x377
                 _0x379:
                 ; 0000 0553 	i=crc>>8;                       //
00168e 940e 189d 	CALL SUBOPT_0x18
001690 940e 1ca1 	CALL __ASRW8
001692 2f1e      	MOV  R17,R30
                 ; 0000 0554 	if ((rx_buffer[rx_wr_index-1])!=i) error=2;
001693 2deb      	MOV  R30,R11
001694 50e1      	SUBI R30,LOW(1)
001695 940e 1815 	CALL SUBOPT_0x0
001697 81e0      	LD   R30,Z
001698 171e      	CP   R17,R30
001699 f019      	BREQ _0x37A
00169a e0e2      	LDI  R30,LOW(2)
00169b 93e0 022d 	STS  _error,R30
                 ; 0000 0555 	i=crc;                          //
                 _0x37A:
00169d 9110 01f7 	LDS  R17,_crc
                 ; 0000 0556 	if ((rx_buffer[rx_wr_index-2])!=i) error=3;
00169f 2deb      	MOV  R30,R11
0016a0 50e2      	SUBI R30,LOW(2)
0016a1 940e 1815 	CALL SUBOPT_0x0
0016a3 81e0      	LD   R30,Z
0016a4 171e      	CP   R17,R30
0016a5 f019      	BREQ _0x37B
0016a6 e0e3      	LDI  R30,LOW(3)
0016a7 93e0 022d 	STS  _error,R30
                 ; 0000 0557 
                 ; 0000 0558 	}                               //
                 _0x37B:
0016a9 9119      	LD   R17,Y+
0016aa 9508      	RET
                 ;//--------------------------------------//
                 ;void mov_buf_mod(char a){crc_rtu(a);mov_buf(a);}
                 ; 0000 055A void mov_buf_mod(char a){crc_rtu(a);mov_buf(a);}
                 _mov_buf_mod:
                 ;	a -> Y+0
0016ab 81e8      	LD   R30,Y
0016ac 93ea      	ST   -Y,R30
0016ad d025      	RCALL _crc_rtu
0016ae 81e8      	LD   R30,Y
0016af 93ea      	ST   -Y,R30
0016b0 d001      	RCALL _mov_buf
0016b1 c00d      	RJMP _0x20A0004
                 ;//--------------------------------------//
                 ;void mov_buf(char a)                    //
                 ; 0000 055D         {#asm("cli");                   //
                 _mov_buf:
                 ;	a -> Y+0
0016b2 94f8      	cli
                 ; 0000 055E         tx_buffer[tx_buffer_end]=a;     //
0016b3 2dec      	MOV  R30,R12
0016b4 e0f0      	LDI  R31,0
0016b5 56e0      	SUBI R30,LOW(-_tx_buffer)
0016b6 4ffe      	SBCI R31,HIGH(-_tx_buffer)
0016b7 81a8      	LD   R26,Y
0016b8 83a0      	STD  Z+0,R26
                 ; 0000 055F         if (++tx_buffer_end==TX_BUFFER_SIZE) tx_buffer_end=0;
0016b9 94c3      	INC  R12
0016ba e4e0      	LDI  R30,LOW(64)
0016bb 15ec      	CP   R30,R12
0016bc f409      	BRNE _0x37C
0016bd 24cc      	CLR  R12
                 ; 0000 0560         #asm("sei");}                   //
                 _0x37C:
0016be 9478      	sei
                 _0x20A0004:
0016bf 9621      	ADIW R28,1
0016c0 9508      	RET
                 ;//--------------------------------------//
                 ;void crc_end()                          //
                 ; 0000 0563         {mov_buf(crc);mov_buf(crc>>8);rx_tx=1;
                 _crc_end:
0016c1 91e0 01f7 	LDS  R30,_crc
0016c3 93ea      	ST   -Y,R30
0016c4 dfed      	RCALL _mov_buf
0016c5 940e 189d 	CALL SUBOPT_0x18
0016c7 940e 1ca1 	CALL __ASRW8
0016c9 93ea      	ST   -Y,R30
0016ca dfe7      	RCALL _mov_buf
0016cb 9a92      	SBI  0x12,2
                 ; 0000 0564         UDR=tx_buffer[tx_buffer_begin]; //
0016cc 940e 1819 	CALL SUBOPT_0x1
                 ; 0000 0565         ti_en=1;crc=0xffff;}		//
0016ce 9468      	SET
0016cf f821      	BLD  R2,1
0016d0 940e 192d 	CALL SUBOPT_0x2D
0016d2 9508      	RET
                 ;//--------------------------------------//
                 ;void crc_rtu(char a)			//
                 ; 0000 0568 	{
                 _crc_rtu:
                 ; 0000 0569         char n;                         //
                 ; 0000 056A 	crc = a^crc;			//
0016d3 931a      	ST   -Y,R17
                 ;	a -> Y+1
                 ;	n -> R17
0016d4 940e 189d 	CALL SUBOPT_0x18
0016d6 81a9      	LDD  R26,Y+1
0016d7 27ea      	EOR  R30,R26
0016d8 940e 1c58 	CALL SUBOPT_0x9D
                 ; 0000 056B 	for(n=0; n<8; n++)		//
0016da e010      	LDI  R17,LOW(0)
                 _0x380:
0016db 3018      	CPI  R17,8
0016dc f498      	BRSH _0x381
                 ; 0000 056C 		{
                 ; 0000 056D                 if(crc & 0x0001 == 1)  //
0016dd 940e 189d 	CALL SUBOPT_0x18
0016df 70e1      	ANDI R30,LOW(0x1)
0016e0 f059      	BREQ _0x382
                 ; 0000 056E 		        {
                 ; 0000 056F                         crc = crc>>1;	//
0016e1 940e 1c5d 	CALL SUBOPT_0x9E
                 ; 0000 0570 			crc=crc&0x7fff;	//
                 ; 0000 0571 			crc = crc^0xA001;
0016e3 91a0 01f7 	LDS  R26,_crc
0016e5 91b0 01f8 	LDS  R27,_crc+1
0016e7 e0e1      	LDI  R30,LOW(40961)
0016e8 eaf0      	LDI  R31,HIGH(40961)
0016e9 940e 18a2 	CALL SUBOPT_0x19
                 ; 0000 0572                         }
                 ; 0000 0573 		else
0016eb c002      	RJMP _0x383
                 _0x382:
                 ; 0000 0574                         {
                 ; 0000 0575                         crc = crc>>1;	//
0016ec 940e 1c5d 	CALL SUBOPT_0x9E
                 ; 0000 0576 			crc=crc&0x7fff;
                 ; 0000 0577                         }
                 _0x383:
                 ; 0000 0578                 }
0016ee 5f1f      	SUBI R17,-1
0016ef cfeb      	RJMP _0x380
                 _0x381:
                 ; 0000 0579         }
0016f0 8118      	LDD  R17,Y+0
0016f1 9622      	ADIW R28,2
0016f2 9508      	RET
                 ;//--------------------------------------//
                 ;//adc_value1- mA    reg 0
                 ;//adc_value2- mm    reg 1
                 ;//buf[buf_end]- ADC reg 2
                 ;
                 ;//1-функция
                 ;//2-адрес
                 ;//3-данные
                 ;
                 ;//0 4-20mA  20=4.4   =3606 k=20/3606 AIN0
                 ;//1  0-5mA   5=4.4   =3606 k= 5/3606 AIN1
                 ;//2 0-20mA  20=4.4   =3606 k=20/3606 AIN0
                 ;//3  0-10V  10=4.506 =3606 k=10/3691 AIN1
                 ;//4   0-5V   5=4.506 =3606 k= 5/3691 AIN0
                 ;
                 ;
                 ;// переделать битовый опрос
                 
                 	.CSEG
                 _cabs:
0016f3 91e9          ld   r30,y+
0016f4 30e0          cpi  r30,0
0016f5 f40a          brpl __cabs0
0016f6 95e1          neg  r30
                 __cabs0:
0016f7 9508          ret
                 _ftoa:
0016f8 9724      	SBIW R28,4
0016f9 e0e0      	LDI  R30,LOW(0)
0016fa 83e8      	ST   Y,R30
0016fb 83e9      	STD  Y+1,R30
0016fc 83ea      	STD  Y+2,R30
0016fd e3ef      	LDI  R30,LOW(63)
0016fe 83eb      	STD  Y+3,R30
0016ff 931a      	ST   -Y,R17
001700 930a      	ST   -Y,R16
001701 85eb      	LDD  R30,Y+11
001702 85fc      	LDD  R31,Y+11+1
001703 3fef      	CPI  R30,LOW(0xFFFF)
001704 efaf      	LDI  R26,HIGH(0xFFFF)
001705 07fa      	CPC  R31,R26
001706 f459      	BRNE _0x200000D
001707 81ee      	LDD  R30,Y+6
001708 81ff      	LDD  R31,Y+6+1
001709 93fa      	ST   -Y,R31
00170a 93ea      	ST   -Y,R30
                +
00170b e6ea     +LDI R30 , LOW ( 2 * _0x2000000 + 0 )
00170c e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + 0 )
                 	__POINTW1FN _0x2000000,0
00170d 93fa      	ST   -Y,R31
00170e 93ea      	ST   -Y,R30
00170f 940e 180a 	CALL _strcpyf
001711 c0ae      	RJMP _0x20A0003
                 _0x200000D:
001712 3fef      	CPI  R30,LOW(0x7FFF)
001713 e7af      	LDI  R26,HIGH(0x7FFF)
001714 07fa      	CPC  R31,R26
001715 f459      	BRNE _0x200000C
001716 81ee      	LDD  R30,Y+6
001717 81ff      	LDD  R31,Y+6+1
001718 93fa      	ST   -Y,R31
001719 93ea      	ST   -Y,R30
                +
00171a e6eb     +LDI R30 , LOW ( 2 * _0x2000000 + 1 )
00171b e0f2     +LDI R31 , HIGH ( 2 * _0x2000000 + 1 )
                 	__POINTW1FN _0x2000000,1
00171c 93fa      	ST   -Y,R31
00171d 93ea      	ST   -Y,R30
00171e 940e 180a 	CALL _strcpyf
001720 c09f      	RJMP _0x20A0003
                 _0x200000C:
001721 85ac      	LDD  R26,Y+12
001722 23aa      	TST  R26
001723 f462      	BRPL _0x200000F
                +
001724 85e9     +LDD R30 , Y + 9
001725 85fa     +LDD R31 , Y + 9 + 1
001726 856b     +LDD R22 , Y + 9 + 2
001727 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
001728 940e 1d1b 	CALL __ANEGF1
00172a 940e 1c67 	CALL SUBOPT_0x9F
00172c 940e 1c6c 	CALL SUBOPT_0xA0
00172e e2ed      	LDI  R30,LOW(45)
00172f 93ec      	ST   X,R30
                 _0x200000F:
001730 85a8      	LDD  R26,Y+8
001731 30a7      	CPI  R26,LOW(0x7)
001732 f010      	BRLO _0x2000010
001733 e0e6      	LDI  R30,LOW(6)
001734 87e8      	STD  Y+8,R30
                 _0x2000010:
001735 8518      	LDD  R17,Y+8
                 _0x2000011:
001736 2fe1      	MOV  R30,R17
001737 5011      	SUBI R17,1
001738 30e0      	CPI  R30,0
001739 f029      	BREQ _0x2000013
00173a 940e 1c73 	CALL SUBOPT_0xA1
00173c 940e 1905 	CALL SUBOPT_0x25
00173e cff7      	RJMP _0x2000011
                 _0x2000013:
00173f 940e 1c78 	CALL SUBOPT_0xA2
001741 940e 1dc1 	CALL __ADDF12
001743 940e 1c67 	CALL SUBOPT_0x9F
001745 e010      	LDI  R17,LOW(0)
001746 940e 191e 	CALL SUBOPT_0x2A
001748 940e 1905 	CALL SUBOPT_0x25
                 _0x2000014:
00174a 940e 1c78 	CALL SUBOPT_0xA2
00174c 940e 1ea2 	CALL __CMPF12
00174e f050      	BRLO _0x2000016
00174f 940e 1914 	CALL SUBOPT_0x28
001751 940e 1a9f 	CALL SUBOPT_0x62
001753 940e 1e0f 	CALL __MULF12
001755 940e 1905 	CALL SUBOPT_0x25
001757 5f1f      	SUBI R17,-LOW(1)
001758 cff1      	RJMP _0x2000014
                 _0x2000016:
001759 3010      	CPI  R17,0
00175a f429      	BRNE _0x2000017
00175b 940e 1c6c 	CALL SUBOPT_0xA0
00175d e3e0      	LDI  R30,LOW(48)
00175e 93ec      	ST   X,R30
00175f c02f      	RJMP _0x2000018
                 _0x2000017:
                 _0x2000019:
001760 2fe1      	MOV  R30,R17
001761 5011      	SUBI R17,1
001762 30e0      	CPI  R30,0
001763 f159      	BREQ _0x200001B
001764 940e 1c73 	CALL SUBOPT_0xA1
                +
001766 e0a0     +LDI R26 , LOW ( 0x3F000000 )
001767 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
001768 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
001769 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00176a 940e 1dc1 	CALL __ADDF12
00176c 940e 1ccf 	CALL __PUTPARD1
00176e 940e 17f3 	CALL _floor
001770 940e 1905 	CALL SUBOPT_0x25
001772 940e 1c78 	CALL SUBOPT_0xA2
001774 940e 1e5d 	CALL __DIVF21
001776 940e 1d4e 	CALL __CFD1U
001778 2f0e      	MOV  R16,R30
001779 940e 1c6c 	CALL SUBOPT_0xA0
00177b 2fe0      	MOV  R30,R16
00177c 5de0      	SUBI R30,-LOW(48)
00177d 93ec      	ST   X,R30
00177e 2fe0      	MOV  R30,R16
00177f 940e 1914 	CALL SUBOPT_0x28
001781 27ff      	CLR  R31
001782 2766      	CLR  R22
001783 2777      	CLR  R23
001784 940e 1d87 	CALL __CDF1
001786 940e 1e0f 	CALL __MULF12
001788 940e 1c7e 	CALL SUBOPT_0xA3
00178a 940e 1a6c 	CALL SUBOPT_0x59
00178c 940e 1c67 	CALL SUBOPT_0x9F
00178e cfd1      	RJMP _0x2000019
                 _0x200001B:
                 _0x2000018:
00178f 85e8      	LDD  R30,Y+8
001790 30e0      	CPI  R30,0
001791 f151      	BREQ _0x20A0002
001792 940e 1c6c 	CALL SUBOPT_0xA0
001794 e2ee      	LDI  R30,LOW(46)
001795 93ec      	ST   X,R30
                 _0x200001D:
001796 85e8      	LDD  R30,Y+8
001797 50e1      	SUBI R30,LOW(1)
001798 87e8      	STD  Y+8,R30
001799 5fef      	SUBI R30,-LOW(1)
00179a f109      	BREQ _0x200001F
00179b 940e 1c7e 	CALL SUBOPT_0xA3
00179d 940e 1a9f 	CALL SUBOPT_0x62
00179f 940e 1e0f 	CALL __MULF12
0017a1 940e 1c67 	CALL SUBOPT_0x9F
                +
0017a3 85e9     +LDD R30 , Y + 9
0017a4 85fa     +LDD R31 , Y + 9 + 1
0017a5 856b     +LDD R22 , Y + 9 + 2
0017a6 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
0017a7 940e 1d4e 	CALL __CFD1U
0017a9 2f0e      	MOV  R16,R30
0017aa 940e 1c6c 	CALL SUBOPT_0xA0
0017ac 2fe0      	MOV  R30,R16
0017ad 5de0      	SUBI R30,-LOW(48)
0017ae 93ec      	ST   X,R30
0017af 2fe0      	MOV  R30,R16
0017b0 940e 1c7e 	CALL SUBOPT_0xA3
0017b2 27ff      	CLR  R31
0017b3 2766      	CLR  R22
0017b4 2777      	CLR  R23
0017b5 940e 1d87 	CALL __CDF1
0017b7 940e 1a6c 	CALL SUBOPT_0x59
0017b9 940e 1c67 	CALL SUBOPT_0x9F
0017bb cfda      	RJMP _0x200001D
                 _0x200001F:
                 _0x20A0002:
0017bc 81ae      	LDD  R26,Y+6
0017bd 81bf      	LDD  R27,Y+6+1
0017be e0e0      	LDI  R30,LOW(0)
0017bf 93ec      	ST   X,R30
                 _0x20A0003:
0017c0 8119      	LDD  R17,Y+1
0017c1 8108      	LDD  R16,Y+0
0017c2 962d      	ADIW R28,13
0017c3 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
0017c4 817b         ldd  r23,y+3
0017c5 816a         ldd  r22,y+2
0017c6 81f9         ldd  r31,y+1
0017c7 81e8         ld   r30,y
0017c8 fb77         bst  r23,7
0017c9 0f77         lsl  r23
0017ca fd67         sbrc r22,7
0017cb 6071         sbr  r23,1
0017cc 2f97         mov  r25,r23
0017cd 579e         subi r25,0x7e
0017ce f081         breq __ftrunc0
0017cf f078         brcs __ftrunc0
0017d0 3198         cpi  r25,24
0017d1 f490         brsh __ftrunc1
0017d2 27aa         clr  r26
0017d3 27bb         clr  r27
0017d4 2788         clr  r24
                 __ftrunc2:
0017d5 9408         sec
0017d6 9587         ror  r24
0017d7 95b7         ror  r27
0017d8 95a7         ror  r26
0017d9 959a         dec  r25
0017da f7d1         brne __ftrunc2
0017db 23ea         and  r30,r26
0017dc 23fb         and  r31,r27
0017dd 2368         and  r22,r24
0017de c005         rjmp __ftrunc1
                 __ftrunc0:
0017df 94e8         clt
0017e0 2777         clr  r23
0017e1 27ee         clr  r30
0017e2 27ff         clr  r31
0017e3 2766         clr  r22
                 __ftrunc1:
0017e4 776f         cbr  r22,0x80
0017e5 9576         lsr  r23
0017e6 f408         brcc __ftrunc3
0017e7 6860         sbr  r22,0x80
                 __ftrunc3:
0017e8 f977         bld  r23,7
0017e9 91a9         ld   r26,y+
0017ea 91b9         ld   r27,y+
0017eb 9189         ld   r24,y+
0017ec 9199         ld   r25,y+
0017ed 17ea         cp   r30,r26
0017ee 07fb         cpc  r31,r27
0017ef 0768         cpc  r22,r24
0017f0 0779         cpc  r23,r25
0017f1 fb97         bst  r25,7
0017f2 9508         ret
                 _floor:
0017f3 940e 1c3a 	CALL SUBOPT_0x98
0017f5 940e 1ccf 	CALL __PUTPARD1
0017f7 940e 17c4 	CALL _ftrunc
0017f9 940e 1c35 	CALL SUBOPT_0x97
0017fb f419          brne __floor1
                 __floor0:
0017fc 940e 1c3a 	CALL SUBOPT_0x98
0017fe c009      	RJMP _0x20A0001
                 __floor1:
0017ff f7e6          brtc __floor0
                +
001800 81a8     +LDD R26 , Y + 0
001801 81b9     +LDD R27 , Y + 0 + 1
001802 818a     +LDD R24 , Y + 0 + 2
001803 819b     +LDD R25 , Y + 0 + 3
                 	__GETD2S 0
001804 940e 191e 	CALL SUBOPT_0x2A
001806 940e 1a6c 	CALL SUBOPT_0x59
                 _0x20A0001:
001808 9624      	ADIW R28,4
001809 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
00180a 91e9          ld   r30,y+
00180b 91f9          ld   r31,y+
00180c 91a9          ld   r26,y+
00180d 91b9          ld   r27,y+
00180e 01cd          movw r24,r26
                 strcpyf0:
00180f 9005      	lpm  r0,z+
001810 920d          st   x+,r0
001811 2000          tst  r0
001812 f7e1          brne strcpyf0
001813 01fc          movw r30,r24
001814 9508          ret
                 
                 	.DSEG
                 _rx_buffer:
000160           	.BYTE 0x40
                 _tx_buffer:
0001a0           	.BYTE 0x40
                 _pik_count:
0001e0           	.BYTE 0x1
                 _led_byte:
0001e1           	.BYTE 0xA
                 _sys_time:
0001eb           	.BYTE 0x4
                 _whait_time:
0001ef           	.BYTE 0x4
                 _count_led:
0001f3           	.BYTE 0x1
                 _drebezg:
0001f4           	.BYTE 0x1
                 _count_blink:
0001f5           	.BYTE 0x2
                 _crc:
0001f7           	.BYTE 0x2
                 
                 	.ESEG
                 _reg:
000000 00
000001 00
000002 00
000003 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000004 33
000005 33
000006 93
000007 40        	.DB  LOW(0x40933333),HIGH(0x40933333),BYTE3(0x40933333),BYTE4(0x40933333)
000008 33
000009 33
00000a e3
00000b 40        	.DB  LOW(0x40E33333),HIGH(0x40E33333),BYTE3(0x40E33333),BYTE4(0x40E33333)
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000010 00
000011 00
000012 a0
000013 40        	.DB  LOW(0x40A00000),HIGH(0x40A00000),BYTE3(0x40A00000),BYTE4(0x40A00000)
000014 00
000015 00
000016 00
000017 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000018 00
000019 00
00001a 80
00001b 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
00001c 00
00001d 00
00001e 00
00001f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000020 00
000021 00
000022 80
000023 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000024 00
000025 00
000026 00
000027 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000028 00
000029 00
00002a 00
00002b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00002c 00
00002d 00
00002e 80
00002f 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000030 00
000031 00
000032 00
000033 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000034 00
000035 00
000036 a0
000037 41        	.DB  LOW(0x41A00000),HIGH(0x41A00000),BYTE3(0x41A00000),BYTE4(0x41A00000)
000038 00
000039 00
00003a 00
00003b 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
00003c 00
00003d 00
00003e 00
00003f 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
000040 00
000041 00
000042 00
000043 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000044 00
000045 00
000046 20
000047 41        	.DB  LOW(0x41200000),HIGH(0x41200000),BYTE3(0x41200000),BYTE4(0x41200000)
000048 00
000049 00
00004a 00
00004b 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
00004c 00
00004d 00
00004e a0
00004f 40        	.DB  LOW(0x40A00000),HIGH(0x40A00000),BYTE3(0x40A00000),BYTE4(0x40A00000)
000050 00
000051 00
000052 00
000053 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000054 00
000055 00
000056 00
000057 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000058 00
000059 00
00005a 80
00005b 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000060 00
000061 00
000062 80
000063 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000064 a4
000065 70
000066 31
000067 41        	.DB  LOW(0x413170A4),HIGH(0x413170A4),BYTE3(0x413170A4),BYTE4(0x413170A4)
000068 00
000069 00
00006a 80
00006b 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
00006c 00
00006d 00
00006e 00
00006f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000070 33
000071 33
000072 93
000073 40        	.DB  LOW(0x40933333),HIGH(0x40933333),BYTE3(0x40933333),BYTE4(0x40933333)
000074 33
000075 33
000076 e3
000077 40        	.DB  LOW(0x40E33333),HIGH(0x40E33333),BYTE3(0x40E33333),BYTE4(0x40E33333)
000078 00
000079 00
00007a 00
00007b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00007c 00
00007d 00
00007e a0
00007f 40        	.DB  LOW(0x40A00000),HIGH(0x40A00000),BYTE3(0x40A00000),BYTE4(0x40A00000)
000080 00
000081 00
000082 00
000083 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000084 00
000085 00
000086 80
000087 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000088 00
000089 00
00008a 00
00008b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00008c 00
00008d 00
00008e 80
00008f 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000090 00
000091 00
000092 00
000093 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000094 00
000095 00
000096 00
000097 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000098 00
000099 00
00009a 80
00009b 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000a0 00
0000a1 00
0000a2 a0
0000a3 41        	.DB  LOW(0x41A00000),HIGH(0x41A00000),BYTE3(0x41A00000),BYTE4(0x41A00000)
0000a4 00
0000a5 00
0000a6 00
0000a7 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
0000a8 00
0000a9 00
0000aa 00
0000ab 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
0000ac 00
0000ad 00
0000ae 00
0000af 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000b0 00
0000b1 00
0000b2 20
0000b3 41        	.DB  LOW(0x41200000),HIGH(0x41200000),BYTE3(0x41200000),BYTE4(0x41200000)
0000b4 00
0000b5 00
0000b6 00
0000b7 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
0000b8 00
0000b9 00
0000ba a0
0000bb 40        	.DB  LOW(0x40A00000),HIGH(0x40A00000),BYTE3(0x40A00000),BYTE4(0x40A00000)
0000bc 00
0000bd 00
0000be 00
0000bf 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000c0 00
0000c1 00
0000c2 00
0000c3 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000c4 00
0000c5 00
0000c6 80
0000c7 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
0000c8 00
0000c9 00
0000ca 00
0000cb 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000cc 00
0000cd 00
0000ce 80
0000cf 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
0000d0 a4
0000d1 70
0000d2 31
0000d3 41        	.DB  LOW(0x413170A4),HIGH(0x413170A4),BYTE3(0x413170A4),BYTE4(0x413170A4)
0000d4 00
0000d5 00
0000d6 80
0000d7 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
0000d8 00
0000d9 00
0000da 00
0000db 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0000dc 00
0000dd 3c
0000de 1c
0000df 46        	.DB  LOW(0x461C3C00),HIGH(0x461C3C00),BYTE3(0x461C3C00),BYTE4(0x461C3C00)
0000e0 00
0000e1 3c
0000e2 1c
0000e3 46        	.DB  LOW(0x461C3C00),HIGH(0x461C3C00),BYTE3(0x461C3C00),BYTE4(0x461C3C00)
0000e4 00
0000e5 00
0000e6 f0
0000e7 41        	.DB  LOW(0x41F00000),HIGH(0x41F00000),BYTE3(0x41F00000),BYTE4(0x41F00000)
0000e8 00
0000e9 00
0000ea f0
0000eb 41        	.DB  LOW(0x41F00000),HIGH(0x41F00000),BYTE3(0x41F00000),BYTE4(0x41F00000)
0000ec 00
0000ed 00
0000ee 80
0000ef 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
0000f0 00
0000f1 00
0000f2 80
0000f3 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
0000f4 00
0000f5 00
0000f6 20
0000f7 41        	.DB  LOW(0x41200000),HIGH(0x41200000),BYTE3(0x41200000),BYTE4(0x41200000)
0000f8 00
0000f9 00
0000fa 00
0000fb 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
0000fc 00
0000fd 00
0000fe 80
0000ff 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000100 00
000101 00
000102 80
000103 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000104 00
000105 00
000106 00
000107 40        	.DB  LOW(0x40000000),HIGH(0x40000000),BYTE3(0x40000000),BYTE4(0x40000000)
000108 00
000109 3c
00010a 1c
00010b 46        	.DB  LOW(0x461C3C00),HIGH(0x461C3C00),BYTE3(0x461C3C00),BYTE4(0x461C3C00)
00010c 00
00010d 3c
00010e 1c
00010f 46        	.DB  LOW(0x461C3C00),HIGH(0x461C3C00),BYTE3(0x461C3C00),BYTE4(0x461C3C00)
000110 00
000111 00
000112 20
000113 41        	.DB  LOW(0x41200000),HIGH(0x41200000),BYTE3(0x41200000),BYTE4(0x41200000)
000114 00
000115 00
000116 20
000117 41        	.DB  LOW(0x41200000),HIGH(0x41200000),BYTE3(0x41200000),BYTE4(0x41200000)
000118 00
000119 00
00011a a0
00011b 40        	.DB  LOW(0x40A00000),HIGH(0x40A00000),BYTE3(0x40A00000),BYTE4(0x40A00000)
00011c 00
00011d 00
00011e f0
00011f 41        	.DB  LOW(0x41F00000),HIGH(0x41F00000),BYTE3(0x41F00000),BYTE4(0x41F00000)
000120 00
000121 00
000122 80
000123 40        	.DB  LOW(0x40800000),HIGH(0x40800000),BYTE3(0x40800000),BYTE4(0x40800000)
000124 00
000125 00
000126 20
000127 41        	.DB  LOW(0x41200000),HIGH(0x41200000),BYTE3(0x41200000),BYTE4(0x41200000)
000128 00
000129 00
00012a 80
00012b 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
00012c 00
00012d 00
00012e 80
00012f 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000130 66
000131 66
000132 e6
000133 3f        	.DB  LOW(0x3FE66666),HIGH(0x3FE66666),BYTE3(0x3FE66666),BYTE4(0x3FE66666)
000134 00
000135 00
000136 80
000137 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000138 e1
000139 fa
00013a c7
00013b 42        	.DB  LOW(0x42C7FAE1),HIGH(0x42C7FAE1),BYTE3(0x42C7FAE1),BYTE4(0x42C7FAE1)
00013c 0a
00013d d7
00013e 4f
00013f 41        	.DB  LOW(0x414FD70A),HIGH(0x414FD70A),BYTE3(0x414FD70A),BYTE4(0x414FD70A)
000140 00
000141 00
000142 77
000143 43        	.DB  LOW(0x43770000),HIGH(0x43770000),BYTE3(0x43770000),BYTE4(0x43770000)
000144 00
000145 00
000146 00
000147 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000148 00
000149 c0
00014a 79
00014b c4        	.DB  LOW(0xC479C000),HIGH(0xC479C000),BYTE3(0xC479C000),BYTE4(0xC479C000)
00014c 00
00014d c0
00014e 79
00014f c4        	.DB  LOW(0xC479C000),HIGH(0xC479C000),BYTE3(0xC479C000),BYTE4(0xC479C000)
000150 00
000151 00
000152 00
000153 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000154 00
000155 00
000156 00
000157 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000158 00
000159 00
00015a 00
00015b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00015c 00
00015d 00
00015e 00
00015f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000160 00
000161 00
000162 00
000163 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000164 00
000165 00
000166 80
000167 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
000168 00
000169 00
00016a 00
00016b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00016c 00
00016d 00
00016e 00
00016f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000170 00
000171 00
000172 00
000173 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000174 00
000175 c0
000176 79
000177 c4        	.DB  LOW(0xC479C000),HIGH(0xC479C000),BYTE3(0xC479C000),BYTE4(0xC479C000)
000178 00
000179 c0
00017a 79
00017b c4        	.DB  LOW(0xC479C000),HIGH(0xC479C000),BYTE3(0xC479C000),BYTE4(0xC479C000)
00017c 00
00017d 00
00017e 00
00017f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000180 00
000181 00
000182 00
000183 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000184 00
000185 00
000186 00
000187 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000188 00
000189 00
00018a 00
00018b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00018c 00
00018d 00
00018e 00
00018f 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000190 00
000191 00
000192 00
000193 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000194 00
000195 00
000196 00
000197 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
000198 00
000199 00
00019a 00
00019b 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
00019c cd
00019d cc
00019e 4c
00019f 3e        	.DB  LOW(0x3E4CCCCD),HIGH(0x3E4CCCCD),BYTE3(0x3E4CCCCD),BYTE4(0x3E4CCCCD)
0001a0 00
0001a1 00
0001a2 00
0001a3 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0001a4 00
0001a5 00
0001a6 00
0001a7 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
0001a8 00
0001a9 00
0001aa 80
0001ab 3f        	.DB  LOW(0x3F800000),HIGH(0x3F800000),BYTE3(0x3F800000),BYTE4(0x3F800000)
0001ac 00
0001ad 00
0001ae 00
0001af 00        	.DB  LOW(0x0),HIGH(0x0),BYTE3(0x0),BYTE4(0x0)
                 _ee_point:
0001b0 03        	.DB  0x3
                 _crceep:
0001b1 00 00     	.DW  0x0
                 _crcstatic:
0001b3 cb 45     	.DW  0x45CB
                 _crc1digit:
0001b5 03        	.DB  0x3
                 _crc2digit:
0001b6 63        	.DB  0x63
                 _crc3digit:
0001b7 02        	.DB  0x2
                 _crc4digit:
0001b8 01        	.DB  0x1
                 
                 	.DSEG
                 _mode:
0001f9           	.BYTE 0x1
                 _point:
0001fa           	.BYTE 0x1
                 _work_point:
0001fb           	.BYTE 0x1
                 _ed:
0001fc           	.BYTE 0x1
                 _des:
0001fd           	.BYTE 0x1
                 _sot:
0001fe           	.BYTE 0x1
                 _tis:
0001ff           	.BYTE 0x1
                 _i:
000200           	.BYTE 0x1
                 _count_key:
000201           	.BYTE 0x1
                 _count_key1:
000202           	.BYTE 0x1
                 _buf:
000203           	.BYTE 0x12
                 _buf_end:
000215           	.BYTE 0x1
                 _x:
000216           	.BYTE 0x4
                 _adc_filter:
00021a           	.BYTE 0x4
                 _j:
00021e           	.BYTE 0x1
                 _count_register:
00021f           	.BYTE 0x1
                 _count_key2:
000220           	.BYTE 0x1
                 _start_time:
000221           	.BYTE 0x4
                 _start_time_mode:
000225           	.BYTE 0x4
                 _time_key:
000229           	.BYTE 0x4
                 _error:
00022d           	.BYTE 0x1
                 _adc_value1:
00022e           	.BYTE 0x4
                 _adc_value2:
000232           	.BYTE 0x4
                 _adc_value3:
000236           	.BYTE 0x4
                 __seed_G100:
00023a           	.BYTE 0x4
                 _p_S1040024:
00023e           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x0:
001815 e0f0      	LDI  R31,0
001816 5ae0      	SUBI R30,LOW(-_rx_buffer)
001817 4ffe      	SBCI R31,HIGH(-_rx_buffer)
001818 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
001819 2ded      	MOV  R30,R13
00181a e0f0      	LDI  R31,0
00181b 56e0      	SUBI R30,LOW(-_tx_buffer)
00181c 4ffe      	SBCI R31,HIGH(-_tx_buffer)
00181d 81e0      	LD   R30,Z
00181e b9ec      	OUT  0xC,R30
00181f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
001820 91a0 01e0 	LDS  R26,_pik_count
001822 5faf      	SUBI R26,-LOW(1)
001823 93a0 01e0 	STS  _pik_count,R26
001825 3ca9      	CPI  R26,LOW(0xC9)
001826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:123 WORDS
                 SUBOPT_0x3:
001827 91e0 01eb 	LDS  R30,_sys_time
001829 91f0 01ec 	LDS  R31,_sys_time+1
00182b 9160 01ed 	LDS  R22,_sys_time+2
00182d 9170 01ee 	LDS  R23,_sys_time+3
00182f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
001830 e0a0      	LDI  R26,0
001831 fc25      	SBRC R2,5
001832 e0a1      	LDI  R26,1
001833 30a0      	CPI  R26,LOW(0x0)
001834 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
001835 9468      	SET
001836 f825      	BLD  R2,5
001837 e0e0      	LDI  R30,LOW(0)
001838 93e0 01f4 	STS  _drebezg,R30
00183a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00183b e0a0      	LDI  R26,0
00183c 9999      	SBIC 0x13,1
00183d e0a1      	LDI  R26,1
00183e 30a1      	CPI  R26,LOW(0x1)
00183f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
001840 e0a0      	LDI  R26,0
001841 9986      	SBIC 0x10,6
001842 e0a1      	LDI  R26,1
001843 30a1      	CPI  R26,LOW(0x1)
001844 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
001845 e0a0      	LDI  R26,0
001846 9987      	SBIC 0x10,7
001847 e0a1      	LDI  R26,1
001848 30a1      	CPI  R26,LOW(0x1)
001849 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9:
00184a 91a0 01f4 	LDS  R26,_drebezg
00184c 5faf      	SUBI R26,-LOW(1)
00184d 93a0 01f4 	STS  _drebezg,R26
00184f 3ca9      	CPI  R26,LOW(0xC9)
001850 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
001851 e0a0      	LDI  R26,0
001852 fc34      	SBRC R3,4
001853 e0a1      	LDI  R26,1
001854 30a0      	CPI  R26,LOW(0x0)
001855 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
001856 e0a0      	LDI  R26,0
001857 fc35      	SBRC R3,5
001858 e0a1      	LDI  R26,1
001859 30a0      	CPI  R26,LOW(0x0)
00185a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
00185b e0a0      	LDI  R26,0
00185c fc46      	SBRC R4,6
00185d e0a1      	LDI  R26,1
00185e 30a1      	CPI  R26,LOW(0x1)
00185f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
001860 e0a0      	LDI  R26,0
001861 fc47      	SBRC R4,7
001862 e0a1      	LDI  R26,1
001863 30a1      	CPI  R26,LOW(0x1)
001864 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
001865 e0a0      	LDI  R26,0
001866 fc44      	SBRC R4,4
001867 e0a1      	LDI  R26,1
001868 30a1      	CPI  R26,LOW(0x1)
001869 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00186a e0a0      	LDI  R26,0
00186b fc45      	SBRC R4,5
00186c e0a1      	LDI  R26,1
00186d 30a1      	CPI  R26,LOW(0x1)
00186e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
00186f 2fe1      	MOV  R30,R17
001870 e0f0      	LDI  R31,0
001871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x11:
001872 e0a0      	LDI  R26,0
001873 fc43      	SBRC R4,3
001874 e0a1      	LDI  R26,1
001875 30a1      	CPI  R26,LOW(0x1)
001876 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12:
001877 e0a0      	LDI  R26,0
001878 fc47      	SBRC R4,7
001879 e0a1      	LDI  R26,1
00187a 30a0      	CPI  R26,LOW(0x0)
00187b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13:
00187c e0a0      	LDI  R26,0
00187d fc46      	SBRC R4,6
00187e e0a1      	LDI  R26,1
00187f 30a0      	CPI  R26,LOW(0x0)
001880 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14:
001881 7810      	ANDI R17,LOW(128)
001882 81ec      	LDD  R30,Y+4
001883 93ea      	ST   -Y,R30
001884 940e 0336 	CALL _led_calk
001886 2b1e      	OR   R17,R30
001887 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15:
001888 7810      	ANDI R17,LOW(128)
001889 81eb      	LDD  R30,Y+3
00188a 93ea      	ST   -Y,R30
00188b 940e 0336 	CALL _led_calk
00188d 2b1e      	OR   R17,R30
00188e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
00188f 7810      	ANDI R17,LOW(128)
001890 81ea      	LDD  R30,Y+2
001891 93ea      	ST   -Y,R30
001892 940e 0336 	CALL _led_calk
001894 2b1e      	OR   R17,R30
001895 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
001896 7810      	ANDI R17,LOW(128)
001897 81e9      	LDD  R30,Y+1
001898 93ea      	ST   -Y,R30
001899 940e 0336 	CALL _led_calk
00189b 2b1e      	OR   R17,R30
00189c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x18:
00189d 91e0 01f7 	LDS  R30,_crc
00189f 91f0 01f8 	LDS  R31,_crc+1
0018a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
0018a2 27ea      	EOR  R30,R26
0018a3 27fb      	EOR  R31,R27
0018a4 93e0 01f7 	STS  _crc,R30
0018a6 93f0 01f8 	STS  _crc+1,R31
0018a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
0018a9 01de      	MOVW R26,R28
0018aa 9612      	ADIW R26,2
0018ab 0fae      	ADD  R26,R30
0018ac 1fbf      	ADC  R27,R31
0018ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1B:
0018ae 2fe0      	MOV  R30,R16
0018af e0f0      	LDI  R31,0
0018b0 01de      	MOVW R26,R28
0018b1 961b      	ADIW R26,11
0018b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C:
0018b3 53e0      	SUBI R30,LOW(48)
0018b4 93e0 01fc 	STS  _ed,R30
0018b6 91e0 01ff 	LDS  R30,_tis
0018b8 30e0      	CPI  R30,0
0018b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D:
0018ba e2e0      	LDI  R30,LOW(32)
0018bb 93e0 01ff 	STS  _tis,R30
0018bd 91e0 01fe 	LDS  R30,_sot
0018bf 30e0      	CPI  R30,0
0018c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1E:
                +
0018c1 e4a8     +LDI R26 , LOW ( _reg + 72 )
0018c2 e0b0     +LDI R27 , HIGH ( _reg + 72 )
                 	__POINTW2MN _reg,72
0018c3 940e 1ce6 	CALL __EEPROMRDD
0018c5 e0a0      	LDI  R26,LOW(_i)
0018c6 e0b2      	LDI  R27,HIGH(_i)
0018c7 940e 1d4e 	CALL __CFD1U
0018c9 93ec      	ST   X,R30
0018ca 91e0 0200 	LDS  R30,_i
0018cc 30e0      	CPI  R30,0
0018cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
0018ce 91a0 0202 	LDS  R26,_count_key1
0018d0 5faf      	SUBI R26,-LOW(1)
0018d1 93a0 0202 	STS  _count_key1,R26
0018d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20:
0018d4 df52      	RCALL SUBOPT_0x3
0018d5 940e 1c8f 	CALL __SUBD12
0018d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x21:
0018d8 91e0 0215 	LDS  R30,_buf_end
0018da e0a3      	LDI  R26,LOW(_buf)
0018db e0b2      	LDI  R27,HIGH(_buf)
0018dc e0f0      	LDI  R31,0
0018dd 0fee      	LSL  R30
0018de 1fff      	ROL  R31
0018df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x22:
0018e0 91e0 021e 	LDS  R30,_j
0018e2 e0f0      	LDI  R31,0
0018e3 01de      	MOVW R26,R28
0018e4 9616      	ADIW R26,6
0018e5 0fae      	ADD  R26,R30
0018e6 1fbf      	ADC  R27,R31
0018e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x23:
0018e8 91e0 021e 	LDS  R30,_j
0018ea e0a3      	LDI  R26,LOW(_buf)
0018eb e0b2      	LDI  R27,HIGH(_buf)
0018ec e0f0      	LDI  R31,0
0018ed 0fee      	LSL  R30
0018ee 1fff      	ROL  R31
0018ef 0fae      	ADD  R26,R30
0018f0 1fbf      	ADC  R27,R31
0018f1 900d      	LD   R0,X+
0018f2 901c      	LD   R1,X
0018f3 91e0 0200 	LDS  R30,_i
0018f5 e0a3      	LDI  R26,LOW(_buf)
0018f6 e0b2      	LDI  R27,HIGH(_buf)
0018f7 e0f0      	LDI  R31,0
0018f8 0fee      	LSL  R30
0018f9 1fff      	ROL  R31
0018fa 0fae      	ADD  R26,R30
0018fb 1fbf      	ADC  R27,R31
0018fc 940e 1cc2 	CALL __GETW1P
0018fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
0018ff 91e0 0200 	LDS  R30,_i
001901 5fef      	SUBI R30,-LOW(1)
001902 93e0 0200 	STS  _i,R30
001904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
                +
001905 83ea     +STD Y + 2 , R30
001906 83fb     +STD Y + 2 + 1 , R31
001907 836c     +STD Y + 2 + 2 , R22
001908 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
001909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
                +
00190a 81ea     +LDD R30 , Y + 2
00190b 81fb     +LDD R31 , Y + 2 + 1
00190c 816c     +LDD R22 , Y + 2 + 2
00190d 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00190e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
00190f 0fae      	ADD  R26,R30
001910 1fbf      	ADC  R27,R31
001911 940e 1cc2 	CALL __GETW1P
001913 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28:
                +
001914 81aa     +LDD R26 , Y + 2
001915 81bb     +LDD R27 , Y + 2 + 1
001916 818c     +LDD R24 , Y + 2 + 2
001917 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
001918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
001919 2766      	CLR  R22
00191a 2777      	CLR  R23
00191b 940e 1d87 	CALL __CDF1
00191d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2A:
                +
00191e e0e0     +LDI R30 , LOW ( 0x3F800000 )
00191f e0f0     +LDI R31 , HIGH ( 0x3F800000 )
001920 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
001921 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
001922 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
                +
001923 e0a4     +LDI R26 , LOW ( _reg + 4 )
001924 e0b0     +LDI R27 , HIGH ( _reg + 4 )
                 	__POINTW2MN _reg,4
001925 940e 1ce6 	CALL __EEPROMRDD
001927 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
                +
001928 e0a8     +LDI R26 , LOW ( _reg + 8 )
001929 e0b0     +LDI R27 , HIGH ( _reg + 8 )
                 	__POINTW2MN _reg,8
00192a 940e 1ce6 	CALL __EEPROMRDD
00192c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2D:
00192d efef      	LDI  R30,LOW(65535)
00192e efff      	LDI  R31,HIGH(65535)
00192f 93e0 01f7 	STS  _crc,R30
001931 93f0 01f8 	STS  _crc+1,R31
001933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E:
001934 eba0      	LDI  R26,LOW(_ee_point)
001935 e0b1      	LDI  R27,HIGH(_ee_point)
001936 940e 1cee 	CALL __EEPROMRDB
001938 93e0 01fa 	STS  _point,R30
00193a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2F:
00193b deeb      	RCALL SUBOPT_0x3
00193c 93e0 0221 	STS  _start_time,R30
00193e 93f0 0222 	STS  _start_time+1,R31
001940 9360 0223 	STS  _start_time+2,R22
001942 9370 0224 	STS  _start_time+3,R23
001944 e0e1      	LDI  R30,LOW(1)
001945 93e0 021f 	STS  _count_register,R30
001947 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30:
001948 e7e6      	LDI  R30,LOW(118)
001949 93e0 01ff 	STS  _tis,R30
00194b e0e1      	LDI  R30,LOW(1)
00194c 93e0 01fe 	STS  _sot,R30
00194e e0e0      	LDI  R30,LOW(0)
00194f 93e0 01fd 	STS  _des,R30
001951 e0e1      	LDI  R30,LOW(1)
001952 93e0 01fc 	STS  _ed,R30
001954 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:157 WORDS
                 SUBOPT_0x31:
001955 91e0 01ff 	LDS  R30,_tis
001957 93ea      	ST   -Y,R30
001958 91e0 01fe 	LDS  R30,_sot
00195a 93ea      	ST   -Y,R30
00195b 91e0 01fd 	LDS  R30,_des
00195d 93ea      	ST   -Y,R30
00195e 91e0 01fc 	LDS  R30,_ed
001960 93ea      	ST   -Y,R30
001961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x32:
001962 940e 04a2 	CALL _set_digit_on
001964 cff0      	RJMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:123 WORDS
                 SUBOPT_0x33:
001965 940e 04bc 	CALL _set_digit_off
001967 e0e0      	LDI  R30,LOW(0)
001968 93ea      	ST   -Y,R30
001969 93ea      	ST   -Y,R30
00196a 93ea      	ST   -Y,R30
00196b 93ea      	ST   -Y,R30
00196c 93ea      	ST   -Y,R30
00196d 93ea      	ST   -Y,R30
00196e 93ea      	ST   -Y,R30
00196f 93ea      	ST   -Y,R30
001970 940e 03b2 	CALL _set_led_on
001972 e0e0      	LDI  R30,LOW(0)
001973 93ea      	ST   -Y,R30
001974 93ea      	ST   -Y,R30
001975 93ea      	ST   -Y,R30
001976 93ea      	ST   -Y,R30
001977 93ea      	ST   -Y,R30
001978 93ea      	ST   -Y,R30
001979 93ea      	ST   -Y,R30
00197a 93ea      	ST   -Y,R30
00197b 940e 042b 	CALL _set_led_off
00197d edec      	LDI  R30,LOW(1500)
00197e e0f5      	LDI  R31,HIGH(1500)
00197f 93fa      	ST   -Y,R31
001980 93ea      	ST   -Y,R30
001981 940c 1c83 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34:
001983 93e0 01fe 	STS  _sot,R30
001985 e0e0      	LDI  R30,LOW(0)
001986 93e0 01fd 	STS  _des,R30
001988 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35:
001989 93e0 01fc 	STS  _ed,R30
00198b cfc9      	RJMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36:
00198c 93e0 01fe 	STS  _sot,R30
00198e e0e2      	LDI  R30,LOW(2)
00198f 93e0 01fd 	STS  _des,R30
001991 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
001992 93e0 01fe 	STS  _sot,R30
001994 e2e0      	LDI  R30,LOW(32)
001995 93e0 01fd 	STS  _des,R30
001997 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x38:
001998 93fa      	ST   -Y,R31
001999 93ea      	ST   -Y,R30
00199a 940c 1c83 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x39:
                +
00199c e0e0     +LDI R30 , LOW ( 0x0 )
00199d e0f0     +LDI R31 , HIGH ( 0x0 )
00199e e060     +LDI R22 , BYTE3 ( 0x0 )
00199f e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
0019a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3A:
0019a1 93e0 0221 	STS  _start_time,R30
0019a3 93f0 0222 	STS  _start_time+1,R31
0019a5 9360 0223 	STS  _start_time+2,R22
0019a7 9370 0224 	STS  _start_time+3,R23
0019a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3B:
                +
0019aa e3a4     +LDI R26 , LOW ( _reg + 52 )
0019ab e0b0     +LDI R27 , HIGH ( _reg + 52 )
                 	__POINTW2MN _reg,52
0019ac 940e 1ce6 	CALL __EEPROMRDD
0019ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x3C:
                +
0019af abe9     +STD Y + 49 , R30
0019b0 abfa     +STD Y + 49 + 1 , R31
0019b1 ab6b     +STD Y + 49 + 2 , R22
0019b2 ab7c     +STD Y + 49 + 3 , R23
                 	__PUTD1S 49
0019b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x3D:
                +
0019b4 a9a9     +LDD R26 , Y + 49
0019b5 a9ba     +LDD R27 , Y + 49 + 1
0019b6 a98b     +LDD R24 , Y + 49 + 2
0019b7 a99c     +LDD R25 , Y + 49 + 3
                 	__GETD2S 49
0019b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E:
                +
0019b9 e0e0     +LDI R30 , LOW ( 0xC47A0000 )
0019ba e0f0     +LDI R31 , HIGH ( 0xC47A0000 )
0019bb e76a     +LDI R22 , BYTE3 ( 0xC47A0000 )
0019bc ec74     +LDI R23 , BYTE4 ( 0xC47A0000 )
                 	__GETD1N 0xC47A0000
0019bd 940e 1ea2 	CALL __CMPF12
0019bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3F:
0019c0 dff3      	RCALL SUBOPT_0x3D
                +
0019c1 e0e0     +LDI R30 , LOW ( 0xC2C80000 )
0019c2 e0f0     +LDI R31 , HIGH ( 0xC2C80000 )
0019c3 ec68     +LDI R22 , BYTE3 ( 0xC2C80000 )
0019c4 ec72     +LDI R23 , BYTE4 ( 0xC2C80000 )
                 	__GETD1N 0xC2C80000
0019c5 940e 1ea2 	CALL __CMPF12
0019c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
0019c8 dfeb      	RCALL SUBOPT_0x3D
                +
0019c9 e0e0     +LDI R30 , LOW ( 0xC1200000 )
0019ca e0f0     +LDI R31 , HIGH ( 0xC1200000 )
0019cb e260     +LDI R22 , BYTE3 ( 0xC1200000 )
0019cc ec71     +LDI R23 , BYTE4 ( 0xC1200000 )
                 	__GETD1N 0xC1200000
0019cd 940e 1ea2 	CALL __CMPF12
0019cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x41:
0019d0 dfe3      	RCALL SUBOPT_0x3D
                +
0019d1 e0e0     +LDI R30 , LOW ( 0x41200000 )
0019d2 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0019d3 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0019d4 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0019d5 940e 1ea2 	CALL __CMPF12
0019d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x42:
0019d8 dfdb      	RCALL SUBOPT_0x3D
                +
0019d9 e0e0     +LDI R30 , LOW ( 0x42C80000 )
0019da e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0019db ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0019dc e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0019dd 940e 1ea2 	CALL __CMPF12
0019df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x43:
0019e0 dfd3      	RCALL SUBOPT_0x3D
                +
0019e1 e0e0     +LDI R30 , LOW ( 0x447A0000 )
0019e2 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
0019e3 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
0019e4 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
0019e5 940e 1ea2 	CALL __CMPF12
0019e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
0019e8 91e0 01fa 	LDS  R30,_point
0019ea 93e0 01fb 	STS  _work_point,R30
0019ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 75 TIMES, CODE SIZE REDUCTION:293 WORDS
                 SUBOPT_0x45:
0019ed e0e0      	LDI  R30,LOW(0)
0019ee 93ea      	ST   -Y,R30
0019ef 93ea      	ST   -Y,R30
0019f0 93ea      	ST   -Y,R30
0019f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x46:
0019f2 e0e0      	LDI  R30,LOW(0)
0019f3 93ea      	ST   -Y,R30
0019f4 93ea      	ST   -Y,R30
0019f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x47:
0019f6 940e 03b2 	CALL _set_led_on
0019f8 cff4      	RJMP SUBOPT_0x45
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
0019f9 91a0 0221 	LDS  R26,_start_time
0019fb 91b0 0222 	LDS  R27,_start_time+1
0019fd 9180 0223 	LDS  R24,_start_time+2
0019ff 9190 0224 	LDS  R25,_start_time+3
001a01 ced2      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x49:
001a02 940e 1ce6 	CALL __EEPROMRDD
                +
001a04 e0a0     +LDI R26 , LOW ( 0x447A0000 )
001a05 e0b0     +LDI R27 , HIGH ( 0x447A0000 )
001a06 e78a     +LDI R24 , BYTE3 ( 0x447A0000 )
001a07 e494     +LDI R25 , BYTE4 ( 0x447A0000 )
                 	__GETD2N 0x447A0000
001a08 940e 1e0f 	CALL __MULF12
001a0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
001a0b e2e0      	LDI  R30,LOW(32)
001a0c 93e0 01fc 	STS  _ed,R30
001a0e 91e0 021f 	LDS  R30,_count_register
001a10 30e2      	CPI  R30,LOW(0x2)
001a11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
001a12 93e0 01ff 	STS  _tis,R30
001a14 e5ef      	LDI  R30,LOW(95)
001a15 93e0 01fe 	STS  _sot,R30
001a17 e0e2      	LDI  R30,LOW(2)
001a18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4C:
001a19 e7e0      	LDI  R30,LOW(112)
001a1a 93e0 01ff 	STS  _tis,R30
001a1c e5ef      	LDI  R30,LOW(95)
001a1d 93e0 01fe 	STS  _sot,R30
001a1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4D:
001a20 e6e3      	LDI  R30,LOW(99)
001a21 93e0 01ff 	STS  _tis,R30
001a23 e5ef      	LDI  R30,LOW(95)
001a24 93e0 01fe 	STS  _sot,R30
001a26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4E:
001a27 91e0 021f 	LDS  R30,_count_register
001a29 e0a0      	LDI  R26,LOW(_reg)
001a2a e0b0      	LDI  R27,HIGH(_reg)
001a2b e0f0      	LDI  R31,0
001a2c 940e 1c9c 	CALL __LSLW2
001a2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x4F:
001a2f 0fae      	ADD  R26,R30
001a30 1fbf      	ADC  R27,R31
001a31 940e 1ce6 	CALL __EEPROMRDD
001a33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x50:
                +
001a34 a9e9     +LDD R30 , Y + 49
001a35 a9fa     +LDD R31 , Y + 49 + 1
001a36 a96b     +LDD R22 , Y + 49 + 2
001a37 a97c     +LDD R23 , Y + 49 + 3
                 	__GETD1S 49
001a38 940e 1ccf 	CALL __PUTPARD1
001a3a 940c 04f5 	JMP  _hex2dec
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x51:
001a3c e0e1      	LDI  R30,LOW(1)
001a3d 93ea      	ST   -Y,R30
001a3e e0e0      	LDI  R30,LOW(0)
001a3f 93ea      	ST   -Y,R30
001a40 cfb5      	RJMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x52:
001a41 e0e1      	LDI  R30,LOW(1)
001a42 93ea      	ST   -Y,R30
001a43 cfae      	RJMP SUBOPT_0x46
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
001a44 e0e0      	LDI  R30,LOW(0)
001a45 93ea      	ST   -Y,R30
001a46 e0e1      	LDI  R30,LOW(1)
001a47 93ea      	ST   -Y,R30
001a48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x54:
001a49 e0e0      	LDI  R30,LOW(0)
001a4a 93ea      	ST   -Y,R30
001a4b 940c 042b 	JMP  _set_led_off
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
001a4d ddd9      	RCALL SUBOPT_0x3
001a4e cf52      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x56:
                +
001a4f a5e9     +LDD R30 , Y + 41
001a50 a5fa     +LDD R31 , Y + 41 + 1
001a51 a56b     +LDD R22 , Y + 41 + 2
001a52 a57c     +LDD R23 , Y + 41 + 3
                 	__GETD1S 41
                +
001a53 a5ad     +LDD R26 , Y + 45
001a54 a5be     +LDD R27 , Y + 45 + 1
001a55 a58f     +LDD R24 , Y + 45 + 2
001a56 a998     +LDD R25 , Y + 45 + 3
                 	__GETD2S 45
001a57 940e 1e0f 	CALL __MULF12
001a59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x57:
                +
001a5a e0a0     +LDI R26 , LOW ( 0x41A00000 )
001a5b e0b0     +LDI R27 , HIGH ( 0x41A00000 )
001a5c ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
001a5d e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
001a5e 940e 1e0f 	CALL __MULF12
001a60 01df      	MOVW R26,R30
001a61 01cb      	MOVW R24,R22
                +
001a62 e0e0     +LDI R30 , LOW ( 0x45616000 )
001a63 e6f0     +LDI R31 , HIGH ( 0x45616000 )
001a64 e661     +LDI R22 , BYTE3 ( 0x45616000 )
001a65 e475     +LDI R23 , BYTE4 ( 0x45616000 )
                 	__GETD1N 0x45616000
001a66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x58:
                +
001a67 e3a0     +LDI R26 , LOW ( _reg + 48 )
001a68 e0b0     +LDI R27 , HIGH ( _reg + 48 )
                 	__POINTW2MN _reg,48
001a69 940e 1ce6 	CALL __EEPROMRDD
001a6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x59:
001a6c 940e 1cd9 	CALL __SWAPD12
001a6e 940e 1dba 	CALL __SUBF12
001a70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5A:
001a71 940e 1e5d 	CALL __DIVF21
                +
001a73 a3ed     +STD Y + 37 , R30
001a74 a3fe     +STD Y + 37 + 1 , R31
001a75 a36f     +STD Y + 37 + 2 , R22
001a76 a778     +STD Y + 37 + 3 , R23
                 	__PUTD1S 37
001a77 cfef      	RJMP SUBOPT_0x58
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5B:
                +
001a78 a1ad     +LDD R26 , Y + 37
001a79 a1be     +LDD R27 , Y + 37 + 1
001a7a a18f     +LDD R24 , Y + 37 + 2
001a7b a598     +LDD R25 , Y + 37 + 3
                 	__GETD2S 37
001a7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
                +
001a7d e0e0     +LDI R30 , LOW ( 0x40800000 )
001a7e e0f0     +LDI R31 , HIGH ( 0x40800000 )
001a7f e860     +LDI R22 , BYTE3 ( 0x40800000 )
001a80 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
001a81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5D:
                +
001a82 a3e9     +STD Y + 33 , R30
001a83 a3fa     +STD Y + 33 + 1 , R31
001a84 a36b     +STD Y + 33 + 2 , R22
001a85 a37c     +STD Y + 33 + 3 , R23
                 	__PUTD1S 33
001a86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5E:
                +
001a87 e0e0     +LDI R30 , LOW ( 0x41A00000 )
001a88 e0f0     +LDI R31 , HIGH ( 0x41A00000 )
001a89 ea60     +LDI R22 , BYTE3 ( 0x41A00000 )
001a8a e471     +LDI R23 , BYTE4 ( 0x41A00000 )
                 	__GETD1N 0x41A00000
001a8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5F:
001a8c 01df      	MOVW R26,R30
001a8d 01cb      	MOVW R24,R22
                +
001a8e e0e0     +LDI R30 , LOW ( 0x40A00000 )
001a8f e0f0     +LDI R31 , HIGH ( 0x40A00000 )
001a90 ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
001a91 e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
001a92 cfde      	RJMP SUBOPT_0x5A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x60:
001a93 dfe4      	RCALL SUBOPT_0x5B
001a94 df07      	RCALL SUBOPT_0x39
001a95 940e 1e0f 	CALL __MULF12
001a97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x61:
001a98 dfe9      	RCALL SUBOPT_0x5D
                +
001a99 e0e0     +LDI R30 , 0
001a9a 8fed     +STD Y + 29 , R30
001a9b 8fee     +STD Y + 29 + 1 , R30
001a9c 8fef     +STD Y + 29 + 2 , R30
001a9d a3e8     +STD Y + 29 + 3 , R30
                 	__CLRD1S 29
001a9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
001a9f e0e0     +LDI R30 , LOW ( 0x41200000 )
001aa0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
001aa1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
001aa2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
001aa3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x63:
001aa4 91a0 022e 	LDS  R26,_adc_value1
001aa6 91b0 022f 	LDS  R27,_adc_value1+1
001aa8 9180 0230 	LDS  R24,_adc_value1+2
001aaa 9190 0231 	LDS  R25,_adc_value1+3
001aac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x64:
001aad 940e 1e0f 	CALL __MULF12
                +
001aaf a1a9     +LDD R26 , Y + 33
001ab0 a1ba     +LDD R27 , Y + 33 + 1
001ab1 a18b     +LDD R24 , Y + 33 + 2
001ab2 a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
001ab3 940e 1dc1 	CALL __ADDF12
001ab5 93e0 0232 	STS  _adc_value2,R30
001ab7 93f0 0233 	STS  _adc_value2+1,R31
001ab9 9360 0234 	STS  _adc_value2+2,R22
001abb 9370 0235 	STS  _adc_value2+3,R23
001abd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x65:
                +
001abe e3a8     +LDI R26 , LOW ( _reg + 56 )
001abf e0b0     +LDI R27 , HIGH ( _reg + 56 )
                 	__POINTW2MN _reg,56
001ac0 940e 1ce6 	CALL __EEPROMRDD
001ac2 01df      	MOVW R26,R30
001ac3 01cb      	MOVW R24,R22
                +
001ac4 e0e0     +LDI R30 , LOW ( 0x42C80000 )
001ac5 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
001ac6 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
001ac7 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
001ac8 940e 1e5d 	CALL __DIVF21
                +
001aca e0a0     +LDI R26 , LOW ( 0x3F800000 )
001acb e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001acc e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001acd e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001ace cf9d      	RJMP SUBOPT_0x59
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x66:
                +
001acf 8dad     +LDD R26 , Y + 29
001ad0 8dbe     +LDD R27 , Y + 29 + 1
001ad1 8d8f     +LDD R24 , Y + 29 + 2
001ad2 a198     +LDD R25 , Y + 29 + 3
                 	__GETD2S 29
001ad3 940e 1e0f 	CALL __MULF12
001ad5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x67:
                +
001ad6 e3ac     +LDI R26 , LOW ( _reg + 60 )
001ad7 e0b0     +LDI R27 , HIGH ( _reg + 60 )
                 	__POINTW2MN _reg,60
001ad8 940e 1ce6 	CALL __EEPROMRDD
001ada 01df      	MOVW R26,R30
001adb 01cb      	MOVW R24,R22
                +
001adc e0e0     +LDI R30 , LOW ( 0x42C80000 )
001add e0f0     +LDI R31 , HIGH ( 0x42C80000 )
001ade ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
001adf e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
001ae0 940e 1e5d 	CALL __DIVF21
                +
001ae2 e0a0     +LDI R26 , LOW ( 0x3F800000 )
001ae3 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001ae4 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001ae5 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001ae6 940e 1dc1 	CALL __ADDF12
                +
001ae8 8da9     +LDD R26 , Y + 25
001ae9 8dba     +LDD R27 , Y + 25 + 1
001aea 8d8b     +LDD R24 , Y + 25 + 2
001aeb 8d9c     +LDD R25 , Y + 25 + 3
                 	__GETD2S 25
001aec 940e 1e0f 	CALL __MULF12
001aee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x68:
001aef 91a0 0232 	LDS  R26,_adc_value2
001af1 91b0 0233 	LDS  R27,_adc_value2+1
001af3 9180 0234 	LDS  R24,_adc_value2+2
001af5 9190 0235 	LDS  R25,_adc_value2+3
001af7 940e 1ea2 	CALL __CMPF12
001af9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x69:
                +
001afa 89ed     +LDD R30 , Y + 21
001afb 89fe     +LDD R31 , Y + 21 + 1
001afc 896f     +LDD R22 , Y + 21 + 2
001afd 8d78     +LDD R23 , Y + 21 + 3
                 	__GETD1S 21
001afe cff0      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x6A:
                +
001aff e1ac     +LDI R26 , LOW ( _reg + 28 )
001b00 e0b0     +LDI R27 , HIGH ( _reg + 28 )
                 	__POINTW2MN _reg,28
001b01 940e 1ce6 	CALL __EEPROMRDD
001b03 01df      	MOVW R26,R30
001b04 01cb      	MOVW R24,R22
                +
001b05 e0e0     +LDI R30 , LOW ( 0x42C80000 )
001b06 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
001b07 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
001b08 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
001b09 940e 1e5d 	CALL __DIVF21
                +
001b0b e0a0     +LDI R26 , LOW ( 0x3F800000 )
001b0c e0b0     +LDI R27 , HIGH ( 0x3F800000 )
001b0d e880     +LDI R24 , BYTE3 ( 0x3F800000 )
001b0e e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
001b0f cf5c      	RJMP SUBOPT_0x59
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6B:
001b10 94e8      	CLT
001b11 f844      	BLD  R4,4
001b12 f8f0      	BLD  R15,0
                +
001b13 e1a4     +LDI R26 , LOW ( _reg + 20 )
001b14 e0b0     +LDI R27 , HIGH ( _reg + 20 )
                 	__POINTW2MN _reg,20
001b15 940e 1ce6 	CALL __EEPROMRDD
001b17 940e 1ec2 	CALL __CPD10
001b19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x6C:
                +
001b1a 30e0     +CPI R30 , LOW ( 0x3F800000 )
001b1b e0a0     +LDI R26 , HIGH ( 0x3F800000 )
001b1c 07fa     +CPC R31 , R26
001b1d e8a0     +LDI R26 , BYTE3 ( 0x3F800000 )
001b1e 076a     +CPC R22 , R26
001b1f e3af     +LDI R26 , BYTE4 ( 0x3F800000 )
001b20 077a     +CPC R23 , R26
                 	__CPD1N 0x3F800000
001b21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6D:
                +
001b22 e5a0     +LDI R26 , LOW ( _reg + 80 )
001b23 e0b0     +LDI R27 , HIGH ( _reg + 80 )
                 	__POINTW2MN _reg,80
001b24 940e 1ce6 	CALL __EEPROMRDD
001b26 940e 1ec2 	CALL __CPD10
001b28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x6E:
                +
001b29 89e9     +LDD R30 , Y + 17
001b2a 89fa     +LDD R31 , Y + 17 + 1
001b2b 896b     +LDD R22 , Y + 17 + 2
001b2c 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
001b2d cfc1      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6F:
001b2e 94e8      	CLT
001b2f f845      	BLD  R4,5
001b30 f8f1      	BLD  R15,1
                +
001b31 e1a4     +LDI R26 , LOW ( _reg + 20 )
001b32 e0b0     +LDI R27 , HIGH ( _reg + 20 )
                 	__POINTW2MN _reg,20
001b33 940e 1ce6 	CALL __EEPROMRDD
001b35 940e 1ec2 	CALL __CPD10
001b37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x70:
                +
001b38 e5a4     +LDI R26 , LOW ( _reg + 84 )
001b39 e0b0     +LDI R27 , HIGH ( _reg + 84 )
                 	__POINTW2MN _reg,84
001b3a 940e 1ce6 	CALL __EEPROMRDD
001b3c 940e 1ec2 	CALL __CPD10
001b3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x71:
001b3f 91a0 01eb 	LDS  R26,_sys_time
001b41 91b0 01ec 	LDS  R27,_sys_time+1
001b43 9180 01ed 	LDS  R24,_sys_time+2
001b45 9190 01ee 	LDS  R25,_sys_time+3
001b47 940e 1cd6 	CALL __CDF2
001b49 cf22      	RJMP SUBOPT_0x59
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x72:
001b4a 940e 1ce6 	CALL __EEPROMRDD
                +
001b4c e0a0     +LDI R26 , LOW ( 0x44480000 )
001b4d e0b0     +LDI R27 , HIGH ( 0x44480000 )
001b4e e488     +LDI R24 , BYTE3 ( 0x44480000 )
001b4f e494     +LDI R25 , BYTE4 ( 0x44480000 )
                 	__GETD2N 0x44480000
001b50 940e 1e0f 	CALL __MULF12
001b52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x73:
                +
001b53 e1a8     +LDI R26 , LOW ( _reg + 24 )
001b54 e0b0     +LDI R27 , HIGH ( _reg + 24 )
                 	__POINTW2MN _reg,24
001b55 940e 1ce6 	CALL __EEPROMRDD
001b57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
                +
001b58 e2a0     +LDI R26 , LOW ( _reg + 32 )
001b59 e0b0     +LDI R27 , HIGH ( _reg + 32 )
                 	__POINTW2MN _reg,32
001b5a 940e 1ce6 	CALL __EEPROMRDD
001b5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x75:
                +
001b5d e1a4     +LDI R26 , LOW ( _reg + 20 )
001b5e e0b0     +LDI R27 , HIGH ( _reg + 20 )
                 	__POINTW2MN _reg,20
001b5f 940e 1ce6 	CALL __EEPROMRDD
001b61 940e 1ec2 	CALL __CPD10
001b63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x76:
                +
001b64 30e0     +CPI R30 , LOW ( 0x40000000 )
001b65 e0a0     +LDI R26 , HIGH ( 0x40000000 )
001b66 07fa     +CPC R31 , R26
001b67 e0a0     +LDI R26 , BYTE3 ( 0x40000000 )
001b68 076a     +CPC R22 , R26
001b69 e4a0     +LDI R26 , BYTE4 ( 0x40000000 )
001b6a 077a     +CPC R23 , R26
                 	__CPD1N 0x40000000
001b6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x77:
001b6c e0a0      	LDI  R26,0
001b6d fc32      	SBRC R3,2
001b6e e0a1      	LDI  R26,1
001b6f 30a1      	CPI  R26,LOW(0x1)
001b70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x78:
001b71 91a0 01ef 	LDS  R26,_whait_time
001b73 91b0 01f0 	LDS  R27,_whait_time+1
001b75 9180 01f1 	LDS  R24,_whait_time+2
001b77 9190 01f2 	LDS  R25,_whait_time+3
001b79 cd5a      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x79:
                +
001b7a 3ded     +CPI R30 , LOW ( 0x5DD )
001b7b e0a5     +LDI R26 , HIGH ( 0x5DD )
001b7c 07fa     +CPC R31 , R26
001b7d e0a0     +LDI R26 , BYTE3 ( 0x5DD )
001b7e 076a     +CPC R22 , R26
001b7f e0a0     +LDI R26 , BYTE4 ( 0x5DD )
001b80 077a     +CPC R23 , R26
                 	__CPD1N 0x5DD
001b81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x7A:
001b82 dca4      	RCALL SUBOPT_0x3
001b83 93e0 0225 	STS  _start_time_mode,R30
001b85 93f0 0226 	STS  _start_time_mode+1,R31
001b87 9360 0227 	STS  _start_time_mode+2,R22
001b89 9370 0228 	STS  _start_time_mode+3,R23
001b8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7B:
                +
001b8c e2ac     +LDI R26 , LOW ( _reg + 44 )
001b8d e0b0     +LDI R27 , HIGH ( _reg + 44 )
                 	__POINTW2MN _reg,44
001b8e 940e 1ce6 	CALL __EEPROMRDD
001b90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7C:
001b91 91e0 022e 	LDS  R30,_adc_value1
001b93 91f0 022f 	LDS  R31,_adc_value1+1
001b95 9160 0230 	LDS  R22,_adc_value1+2
001b97 9170 0231 	LDS  R23,_adc_value1+3
001b99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x7D:
001b9a 91e0 0232 	LDS  R30,_adc_value2
001b9c 91f0 0233 	LDS  R31,_adc_value2+1
001b9e 9160 0234 	LDS  R22,_adc_value2+2
001ba0 9170 0235 	LDS  R23,_adc_value2+3
001ba2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x7E:
001ba3 91e0 0236 	LDS  R30,_adc_value3
001ba5 91f0 0237 	LDS  R31,_adc_value3+1
001ba7 9160 0238 	LDS  R22,_adc_value3+2
001ba9 9170 0239 	LDS  R23,_adc_value3+3
001bab 940e 1ccf 	CALL __PUTPARD1
001bad 940e 04f5 	CALL _hex2dec
001baf 91a0 01fa 	LDS  R26,_point
001bb1 30a1      	CPI  R26,LOW(0x1)
001bb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x7F:
001bb3 e0e1      	LDI  R30,LOW(1)
001bb4 93ea      	ST   -Y,R30
001bb5 ce37      	RJMP SUBOPT_0x45
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x80:
001bb6 e0e0      	LDI  R30,LOW(0)
001bb7 93ea      	ST   -Y,R30
001bb8 ce3d      	RJMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x81:
001bb9 e0e1      	LDI  R30,LOW(1)
001bba 93ea      	ST   -Y,R30
001bbb e0e0      	LDI  R30,LOW(0)
001bbc 93ea      	ST   -Y,R30
001bbd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x82:
001bbe e0e1      	LDI  R30,LOW(1)
001bbf 93ea      	ST   -Y,R30
001bc0 93ea      	ST   -Y,R30
001bc1 ce2b      	RJMP SUBOPT_0x45
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x83:
001bc2 27ff      	CLR  R31
001bc3 2766      	CLR  R22
001bc4 2777      	CLR  R23
001bc5 940e 1d87 	CALL __CDF1
001bc7 940e 1ccf 	CALL __PUTPARD1
001bc9 940c 04f5 	JMP  _hex2dec
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x84:
001bcb 93e0 01fd 	STS  _des,R30
001bcd ce24      	RJMP SUBOPT_0x46
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x85:
                +
001bce a9e9     +LDD R30 , Y + 49
001bcf a9fa     +LDD R31 , Y + 49 + 1
001bd0 a96b     +LDD R22 , Y + 49 + 2
001bd1 a97c     +LDD R23 , Y + 49 + 3
                 	__GETD1S 49
001bd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
001bd3 940e 1cb1 	CALL __EQB12
001bd5 2a0e      	OR   R0,R30
001bd6 91a0 021f 	LDS  R26,_count_register
001bd8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x87:
001bd9 e0e0      	LDI  R30,LOW(0)
001bda 93e0 01fc 	STS  _ed,R30
001bdc e0e1      	LDI  R30,LOW(1)
001bdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x88:
001bde e0e0      	LDI  R30,LOW(0)
001bdf 93e0 01ff 	STS  _tis,R30
001be1 e2ed      	LDI  R30,LOW(45)
001be2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x89:
001be3 940e 1cfa 	CALL __EEPROMWRD
                +
001be5 e3a4     +LDI R26 , LOW ( _reg + 52 )
001be6 e0b0     +LDI R27 , HIGH ( _reg + 52 )
                 	__POINTW2MN _reg,52
001be7 de9f      	RCALL SUBOPT_0x5E
001be8 940e 1cfa 	CALL __EEPROMWRD
001bea e0e3      	LDI  R30,LOW(3)
001beb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8A:
001bec ddaf      	RCALL SUBOPT_0x39
001bed 940e 1cfa 	CALL __EEPROMWRD
                +
001bef e3a4     +LDI R26 , LOW ( _reg + 52 )
001bf0 e0b0     +LDI R27 , HIGH ( _reg + 52 )
                 	__POINTW2MN _reg,52
001bf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
001bf2 91e0 01fa 	LDS  R30,_point
001bf4 eba0      	LDI  R26,LOW(_ee_point)
001bf5 e0b1      	LDI  R27,HIGH(_ee_point)
001bf6 940e 1d0a 	CALL __EEPROMWRB
001bf8 cdef      	RJMP SUBOPT_0x44
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8C:
001bf9 940e 1dc1 	CALL __ADDF12
001bfb cdb3      	RJMP SUBOPT_0x3C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x8D:
001bfc ddb7      	RCALL SUBOPT_0x3D
001bfd 940e 1ec6 	CALL __CPD02
001bff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8E:
                +
001c00 eda8     +LDI R26 , LOW ( _reg + 216 )
001c01 e0b0     +LDI R27 , HIGH ( _reg + 216 )
                 	__POINTW2MN _reg,216
001c02 91e0 021f 	LDS  R30,_count_register
001c04 e0f0      	LDI  R31,0
001c05 940e 1c9c 	CALL __LSLW2
001c07 ce27      	RJMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8F:
001c08 e0e0      	LDI  R30,LOW(0)
001c09 93e0 0201 	STS  _count_key,R30
001c0b 93e0 0202 	STS  _count_key1,R30
001c0d 93e0 0220 	STS  _count_key2,R30
001c0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x90:
001c10 dd9e      	RCALL SUBOPT_0x3C
001c11 cfea      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
                +
001c12 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
001c13 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
001c14 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
001c15 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
001c16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x92:
                +
001c17 e4a4     +LDI R26 , LOW ( _reg + 324 )
001c18 e0b1     +LDI R27 , HIGH ( _reg + 324 )
                 	__POINTW2MN _reg,324
001c19 91e0 021f 	LDS  R30,_count_register
001c1b e0f0      	LDI  R31,0
001c1c 940e 1c9c 	CALL __LSLW2
001c1e ce10      	RJMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x93:
001c1f e2e0      	LDI  R30,LOW(32)
001c20 93ea      	ST   -Y,R30
001c21 e0e3      	LDI  R30,LOW(3)
001c22 93ea      	ST   -Y,R30
001c23 e6e1      	LDI  R30,LOW(97)
001c24 93ea      	ST   -Y,R30
001c25 eeef      	LDI  R30,LOW(239)
001c26 93ea      	ST   -Y,R30
001c27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x94:
001c28 e2e0      	LDI  R30,LOW(32)
001c29 93ea      	ST   -Y,R30
001c2a 93ea      	ST   -Y,R30
001c2b 93ea      	ST   -Y,R30
001c2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x95:
001c2d e0e2      	LDI  R30,LOW(2)
001c2e 93ea      	ST   -Y,R30
001c2f 940c 1660 	JMP  _response_m_err
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x96:
001c31 e0e3      	LDI  R30,LOW(3)
001c32 93ea      	ST   -Y,R30
001c33 940c 1660 	JMP  _response_m_err
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x97:
                +
001c35 83e8     +STD Y + 0 , R30
001c36 83f9     +STD Y + 0 + 1 , R31
001c37 836a     +STD Y + 0 + 2 , R22
001c38 837b     +STD Y + 0 + 3 , R23
                 	__PUTD1S 0
001c39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x98:
                +
001c3a 81e8     +LDD R30 , Y + 0
001c3b 81f9     +LDD R31 , Y + 0 + 1
001c3c 816a     +LDD R22 , Y + 0 + 2
001c3d 817b     +LDD R23 , Y + 0 + 3
                 	__GETD1S 0
001c3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x99:
001c3f 940e 1ce6 	CALL __EEPROMRDD
001c41 cff3      	RJMP SUBOPT_0x97
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
001c42 91e0 0160 	LDS  R30,_rx_buffer
001c44 93ea      	ST   -Y,R30
001c45 940e 16ab 	CALL _mov_buf_mod
                +
001c47 91e0 0161+LDS R30 , _rx_buffer + 1
                 	__GETB1MN _rx_buffer,1
001c49 93ea      	ST   -Y,R30
001c4a 940c 16ab 	JMP  _mov_buf_mod
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9B:
001c4c 93ea      	ST   -Y,R30
001c4d 940e 16ab 	CALL _mov_buf_mod
001c4f 940c 16c1 	JMP  _crc_end
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9C:
001c51 27ee      	CLR  R30
001c52 0fa1      	ADD  R26,R17
001c53 1fbe      	ADC  R27,R30
001c54 91ec      	LD   R30,X
001c55 93ea      	ST   -Y,R30
001c56 940c 16ab 	JMP  _mov_buf_mod
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9D:
001c58 93e0 01f7 	STS  _crc,R30
001c5a 93f0 01f8 	STS  _crc+1,R31
001c5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x9E:
001c5d dc3f      	RCALL SUBOPT_0x18
001c5e 95f5      	ASR  R31
001c5f 95e7      	ROR  R30
001c60 dff7      	RCALL SUBOPT_0x9D
                +
001c61 91e0 01f8+LDS R30 , _crc + 1
001c63 77ef     +ANDI R30 , LOW ( 127 )
001c64 93e0 01f8+STS _crc + 1 , R30
                 	__ANDBMNN _crc,1,127
001c66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9F:
                +
001c67 87e9     +STD Y + 9 , R30
001c68 87fa     +STD Y + 9 + 1 , R31
001c69 876b     +STD Y + 9 + 2 , R22
001c6a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
001c6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA0:
001c6c 81ae      	LDD  R26,Y+6
001c6d 81bf      	LDD  R27,Y+6+1
001c6e 9611      	ADIW R26,1
001c6f 83ae      	STD  Y+6,R26
001c70 83bf      	STD  Y+6+1,R27
001c71 9711      	SBIW R26,1
001c72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA1:
001c73 dca0      	RCALL SUBOPT_0x28
001c74 df9d      	RCALL SUBOPT_0x91
001c75 940e 1e0f 	CALL __MULF12
001c77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA2:
001c78 dc91      	RCALL SUBOPT_0x26
                +
001c79 85a9     +LDD R26 , Y + 9
001c7a 85ba     +LDD R27 , Y + 9 + 1
001c7b 858b     +LDD R24 , Y + 9 + 2
001c7c 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001c7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA3:
                +
001c7e 85a9     +LDD R26 , Y + 9
001c7f 85ba     +LDD R27 , Y + 9 + 1
001c80 858b     +LDD R24 , Y + 9 + 2
001c81 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
001c82 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
001c83 91e9      	ld   r30,y+
001c84 91f9      	ld   r31,y+
001c85 9630      	adiw r30,0
001c86 f039      	breq __delay_ms1
                 __delay_ms0:
                +
001c87 ed80     +LDI R24 , LOW ( 0x7D0 )
001c88 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
001c89 9701     +SBIW R24 , 1
001c8a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
001c8b 95a8      	wdr
001c8c 9731      	sbiw r30,1
001c8d f7c9      	brne __delay_ms0
                 __delay_ms1:
001c8e 9508      	ret
                 
                 __SUBD12:
001c8f 1bea      	SUB  R30,R26
001c90 0bfb      	SBC  R31,R27
001c91 0b68      	SBC  R22,R24
001c92 0b79      	SBC  R23,R25
001c93 9508      	RET
                 
                 __ANEGD1:
001c94 95f0      	COM  R31
001c95 9560      	COM  R22
001c96 9570      	COM  R23
001c97 95e1      	NEG  R30
001c98 4fff      	SBCI R31,-1
001c99 4f6f      	SBCI R22,-1
001c9a 4f7f      	SBCI R23,-1
001c9b 9508      	RET
                 
                 __LSLW2:
001c9c 0fee      	LSL  R30
001c9d 1fff      	ROL  R31
001c9e 0fee      	LSL  R30
001c9f 1fff      	ROL  R31
001ca0 9508      	RET
                 
                 __ASRW8:
001ca1 2fef      	MOV  R30,R31
001ca2 27ff      	CLR  R31
001ca3 fde7      	SBRC R30,7
001ca4 efff      	SER  R31
001ca5 9508      	RET
                 
                 __CBD1:
001ca6 2ffe      	MOV  R31,R30
001ca7 0fff      	ADD  R31,R31
001ca8 0bff      	SBC  R31,R31
001ca9 2f6f      	MOV  R22,R31
001caa 2f7f      	MOV  R23,R31
001cab 9508      	RET
                 
                 __CWD1:
001cac 2f6f      	MOV  R22,R31
001cad 0f66      	ADD  R22,R22
001cae 0b66      	SBC  R22,R22
001caf 2f76      	MOV  R23,R22
001cb0 9508      	RET
                 
                 __EQB12:
001cb1 17ea      	CP   R30,R26
001cb2 e0e1      	LDI  R30,1
001cb3 f009      	BREQ __EQB12T
001cb4 27ee      	CLR  R30
                 __EQB12T:
001cb5 9508      	RET
                 
                 __LEW12:
001cb6 17ea      	CP   R30,R26
001cb7 07fb      	CPC  R31,R27
001cb8 e0e1      	LDI  R30,1
001cb9 f40c      	BRGE __LEW12T
001cba 27ee      	CLR  R30
                 __LEW12T:
001cbb 9508      	RET
                 
                 __LEW12U:
001cbc 17ea      	CP   R30,R26
001cbd 07fb      	CPC  R31,R27
001cbe e0e1      	LDI  R30,1
001cbf f408      	BRSH __LEW12UT
001cc0 27ee      	CLR  R30
                 __LEW12UT:
001cc1 9508      	RET
                 
                 __GETW1P:
001cc2 91ed      	LD   R30,X+
001cc3 91fc      	LD   R31,X
001cc4 9711      	SBIW R26,1
001cc5 9508      	RET
                 
                 __PUTDP1:
001cc6 93ed      	ST   X+,R30
001cc7 93fd      	ST   X+,R31
001cc8 936d      	ST   X+,R22
001cc9 937c      	ST   X,R23
001cca 9508      	RET
                 
                 __GETW1PF:
001ccb 9005      	LPM  R0,Z+
001ccc 91f4      	LPM  R31,Z
001ccd 2de0      	MOV  R30,R0
001cce 9508      	RET
                 
                 __PUTPARD1:
001ccf 937a      	ST   -Y,R23
001cd0 936a      	ST   -Y,R22
001cd1 93fa      	ST   -Y,R31
001cd2 93ea      	ST   -Y,R30
001cd3 9508      	RET
                 
                 __CDF2U:
001cd4 9468      	SET
001cd5 c001      	RJMP __CDF2U0
                 __CDF2:
001cd6 94e8      	CLT
                 __CDF2U0:
001cd7 d001      	RCALL __SWAPD12
001cd8 d0af      	RCALL __CDF1U0
                 
                 __SWAPD12:
001cd9 2e18      	MOV  R1,R24
001cda 2f86      	MOV  R24,R22
001cdb 2d61      	MOV  R22,R1
001cdc 2e19      	MOV  R1,R25
001cdd 2f97      	MOV  R25,R23
001cde 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
001cdf 2e1b      	MOV  R1,R27
001ce0 2fbf      	MOV  R27,R31
001ce1 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
001ce2 2e1a      	MOV  R1,R26
001ce3 2fae      	MOV  R26,R30
001ce4 2de1      	MOV  R30,R1
001ce5 9508      	RET
                 
                 __EEPROMRDD:
001ce6 9612      	ADIW R26,2
001ce7 d002      	RCALL __EEPROMRDW
001ce8 01bf      	MOVW R22,R30
001ce9 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
001cea 9611      	ADIW R26,1
001ceb d002      	RCALL __EEPROMRDB
001cec 2ffe      	MOV  R31,R30
001ced 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
001cee 99e1      	SBIC EECR,EEWE
001cef cffe      	RJMP __EEPROMRDB
001cf0 93ff      	PUSH R31
001cf1 b7ff      	IN   R31,SREG
001cf2 94f8      	CLI
001cf3 bbae      	OUT  EEARL,R26
001cf4 bbbf      	OUT  EEARH,R27
001cf5 9ae0      	SBI  EECR,EERE
001cf6 b3ed      	IN   R30,EEDR
001cf7 bfff      	OUT  SREG,R31
001cf8 91ff      	POP  R31
001cf9 9508      	RET
                 
                 __EEPROMWRD:
001cfa d007      	RCALL __EEPROMWRW
001cfb 9612      	ADIW R26,2
001cfc 010f      	MOVW R0,R30
001cfd 01fb      	MOVW R30,R22
001cfe d003      	RCALL __EEPROMWRW
001cff 01f0      	MOVW R30,R0
001d00 9712      	SBIW R26,2
001d01 9508      	RET
                 
                 __EEPROMWRW:
001d02 d007      	RCALL __EEPROMWRB
001d03 9611      	ADIW R26,1
001d04 93ef      	PUSH R30
001d05 2fef      	MOV  R30,R31
001d06 d003      	RCALL __EEPROMWRB
001d07 91ef      	POP  R30
001d08 9711      	SBIW R26,1
001d09 9508      	RET
                 
                 __EEPROMWRB:
001d0a 9be1      	SBIS EECR,EEWE
001d0b c002      	RJMP __EEPROMWRB1
001d0c 95a8      	WDR
001d0d cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
001d0e b79f      	IN   R25,SREG
001d0f 94f8      	CLI
001d10 bbae      	OUT  EEARL,R26
001d11 bbbf      	OUT  EEARH,R27
001d12 9ae0      	SBI  EECR,EERE
001d13 b38d      	IN   R24,EEDR
001d14 17e8      	CP   R30,R24
001d15 f019      	BREQ __EEPROMWRB0
001d16 bbed      	OUT  EEDR,R30
001d17 9ae2      	SBI  EECR,EEMWE
001d18 9ae1      	SBI  EECR,EEWE
                 __EEPROMWRB0:
001d19 bf9f      	OUT  SREG,R25
001d1a 9508      	RET
                 
                 __ANEGF1:
001d1b 9730      	SBIW R30,0
001d1c 4060      	SBCI R22,0
001d1d 4070      	SBCI R23,0
001d1e f009      	BREQ __ANEGF10
001d1f 5870      	SUBI R23,0x80
                 __ANEGF10:
001d20 9508      	RET
                 
                 __ROUND_REPACK:
001d21 2355      	TST  R21
001d22 f442      	BRPL __REPACK
001d23 3850      	CPI  R21,0x80
001d24 f411      	BRNE __ROUND_REPACK0
001d25 ffe0      	SBRS R30,0
001d26 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
001d27 9631      	ADIW R30,1
001d28 1f69      	ADC  R22,R25
001d29 1f79      	ADC  R23,R25
001d2a f06b      	BRVS __REPACK1
                 
                 __REPACK:
001d2b e850      	LDI  R21,0x80
001d2c 2757      	EOR  R21,R23
001d2d f411      	BRNE __REPACK0
001d2e 935f      	PUSH R21
001d2f c0cd      	RJMP __ZERORES
                 __REPACK0:
001d30 3f5f      	CPI  R21,0xFF
001d31 f031      	BREQ __REPACK1
001d32 0f66      	LSL  R22
001d33 0c00      	LSL  R0
001d34 9557      	ROR  R21
001d35 9567      	ROR  R22
001d36 2f75      	MOV  R23,R21
001d37 9508      	RET
                 __REPACK1:
001d38 935f      	PUSH R21
001d39 2000      	TST  R0
001d3a f00a      	BRMI __REPACK2
001d3b c0cd      	RJMP __MAXRES
                 __REPACK2:
001d3c c0c6      	RJMP __MINRES
                 
                 __UNPACK:
001d3d e850      	LDI  R21,0x80
001d3e 2e19      	MOV  R1,R25
001d3f 2215      	AND  R1,R21
001d40 0f88      	LSL  R24
001d41 1f99      	ROL  R25
001d42 2795      	EOR  R25,R21
001d43 0f55      	LSL  R21
001d44 9587      	ROR  R24
                 
                 __UNPACK1:
001d45 e850      	LDI  R21,0x80
001d46 2e07      	MOV  R0,R23
001d47 2205      	AND  R0,R21
001d48 0f66      	LSL  R22
001d49 1f77      	ROL  R23
001d4a 2775      	EOR  R23,R21
001d4b 0f55      	LSL  R21
001d4c 9567      	ROR  R22
001d4d 9508      	RET
                 
                 __CFD1U:
001d4e 9468      	SET
001d4f c001      	RJMP __CFD1U0
                 __CFD1:
001d50 94e8      	CLT
                 __CFD1U0:
001d51 935f      	PUSH R21
001d52 dff2      	RCALL __UNPACK1
001d53 3870      	CPI  R23,0x80
001d54 f018      	BRLO __CFD10
001d55 3f7f      	CPI  R23,0xFF
001d56 f408      	BRCC __CFD10
001d57 c0a5      	RJMP __ZERORES
                 __CFD10:
001d58 e156      	LDI  R21,22
001d59 1b57      	SUB  R21,R23
001d5a f4aa      	BRPL __CFD11
001d5b 9551      	NEG  R21
001d5c 3058      	CPI  R21,8
001d5d f40e      	BRTC __CFD19
001d5e 3059      	CPI  R21,9
                 __CFD19:
001d5f f030      	BRLO __CFD17
001d60 efef      	SER  R30
001d61 efff      	SER  R31
001d62 ef6f      	SER  R22
001d63 e77f      	LDI  R23,0x7F
001d64 f977      	BLD  R23,7
001d65 c01a      	RJMP __CFD15
                 __CFD17:
001d66 2777      	CLR  R23
001d67 2355      	TST  R21
001d68 f0b9      	BREQ __CFD15
                 __CFD18:
001d69 0fee      	LSL  R30
001d6a 1fff      	ROL  R31
001d6b 1f66      	ROL  R22
001d6c 1f77      	ROL  R23
001d6d 955a      	DEC  R21
001d6e f7d1      	BRNE __CFD18
001d6f c010      	RJMP __CFD15
                 __CFD11:
001d70 2777      	CLR  R23
                 __CFD12:
001d71 3058      	CPI  R21,8
001d72 f028      	BRLO __CFD13
001d73 2fef      	MOV  R30,R31
001d74 2ff6      	MOV  R31,R22
001d75 2f67      	MOV  R22,R23
001d76 5058      	SUBI R21,8
001d77 cff9      	RJMP __CFD12
                 __CFD13:
001d78 2355      	TST  R21
001d79 f031      	BREQ __CFD15
                 __CFD14:
001d7a 9576      	LSR  R23
001d7b 9567      	ROR  R22
001d7c 95f7      	ROR  R31
001d7d 95e7      	ROR  R30
001d7e 955a      	DEC  R21
001d7f f7d1      	BRNE __CFD14
                 __CFD15:
001d80 2000      	TST  R0
001d81 f40a      	BRPL __CFD16
001d82 df11      	RCALL __ANEGD1
                 __CFD16:
001d83 915f      	POP  R21
001d84 9508      	RET
                 
                 __CDF1U:
001d85 9468      	SET
001d86 c001      	RJMP __CDF1U0
                 __CDF1:
001d87 94e8      	CLT
                 __CDF1U0:
001d88 9730      	SBIW R30,0
001d89 4060      	SBCI R22,0
001d8a 4070      	SBCI R23,0
001d8b f0b1      	BREQ __CDF10
001d8c 2400      	CLR  R0
001d8d f026      	BRTS __CDF11
001d8e 2377      	TST  R23
001d8f f412      	BRPL __CDF11
001d90 9400      	COM  R0
001d91 df02      	RCALL __ANEGD1
                 __CDF11:
001d92 2e17      	MOV  R1,R23
001d93 e17e      	LDI  R23,30
001d94 2011      	TST  R1
                 __CDF12:
001d95 f032      	BRMI __CDF13
001d96 957a      	DEC  R23
001d97 0fee      	LSL  R30
001d98 1fff      	ROL  R31
001d99 1f66      	ROL  R22
001d9a 1c11      	ROL  R1
001d9b cff9      	RJMP __CDF12
                 __CDF13:
001d9c 2fef      	MOV  R30,R31
001d9d 2ff6      	MOV  R31,R22
001d9e 2d61      	MOV  R22,R1
001d9f 935f      	PUSH R21
001da0 df8a      	RCALL __REPACK
001da1 915f      	POP  R21
                 __CDF10:
001da2 9508      	RET
                 
                 __SWAPACC:
001da3 934f      	PUSH R20
001da4 01af      	MOVW R20,R30
001da5 01fd      	MOVW R30,R26
001da6 01da      	MOVW R26,R20
001da7 01ab      	MOVW R20,R22
001da8 01bc      	MOVW R22,R24
001da9 01ca      	MOVW R24,R20
001daa 2d40      	MOV  R20,R0
001dab 2c01      	MOV  R0,R1
001dac 2e14      	MOV  R1,R20
001dad 914f      	POP  R20
001dae 9508      	RET
                 
                 __UADD12:
001daf 0fea      	ADD  R30,R26
001db0 1ffb      	ADC  R31,R27
001db1 1f68      	ADC  R22,R24
001db2 9508      	RET
                 
                 __NEGMAN1:
001db3 95e0      	COM  R30
001db4 95f0      	COM  R31
001db5 9560      	COM  R22
001db6 5fef      	SUBI R30,-1
001db7 4fff      	SBCI R31,-1
001db8 4f6f      	SBCI R22,-1
001db9 9508      	RET
                 
                 __SUBF12:
001dba 935f      	PUSH R21
001dbb df81      	RCALL __UNPACK
001dbc 3890      	CPI  R25,0x80
001dbd f171      	BREQ __ADDF129
001dbe e850      	LDI  R21,0x80
001dbf 2615      	EOR  R1,R21
                 
001dc0 c004      	RJMP __ADDF120
                 
                 __ADDF12:
001dc1 935f      	PUSH R21
001dc2 df7a      	RCALL __UNPACK
001dc3 3890      	CPI  R25,0x80
001dc4 f139      	BREQ __ADDF129
                 
                 __ADDF120:
001dc5 3870      	CPI  R23,0x80
001dc6 f121      	BREQ __ADDF128
                 __ADDF121:
001dc7 2f57      	MOV  R21,R23
001dc8 1b59      	SUB  R21,R25
001dc9 f113      	BRVS __ADDF129
001dca f412      	BRPL __ADDF122
001dcb dfd7      	RCALL __SWAPACC
001dcc cffa      	RJMP __ADDF121
                 __ADDF122:
001dcd 3158      	CPI  R21,24
001dce f018      	BRLO __ADDF123
001dcf 27aa      	CLR  R26
001dd0 27bb      	CLR  R27
001dd1 2788      	CLR  R24
                 __ADDF123:
001dd2 3058      	CPI  R21,8
001dd3 f028      	BRLO __ADDF124
001dd4 2fab      	MOV  R26,R27
001dd5 2fb8      	MOV  R27,R24
001dd6 2788      	CLR  R24
001dd7 5058      	SUBI R21,8
001dd8 cff9      	RJMP __ADDF123
                 __ADDF124:
001dd9 2355      	TST  R21
001dda f029      	BREQ __ADDF126
                 __ADDF125:
001ddb 9586      	LSR  R24
001ddc 95b7      	ROR  R27
001ddd 95a7      	ROR  R26
001dde 955a      	DEC  R21
001ddf f7d9      	BRNE __ADDF125
                 __ADDF126:
001de0 2d50      	MOV  R21,R0
001de1 2551      	EOR  R21,R1
001de2 f062      	BRMI __ADDF127
001de3 dfcb      	RCALL __UADD12
001de4 f438      	BRCC __ADDF129
001de5 9567      	ROR  R22
001de6 95f7      	ROR  R31
001de7 95e7      	ROR  R30
001de8 9573      	INC  R23
001de9 f413      	BRVC __ADDF129
001dea c01e      	RJMP __MAXRES
                 __ADDF128:
001deb dfb7      	RCALL __SWAPACC
                 __ADDF129:
001dec df3e      	RCALL __REPACK
001ded 915f      	POP  R21
001dee 9508      	RET
                 __ADDF127:
001def 1bea      	SUB  R30,R26
001df0 0bfb      	SBC  R31,R27
001df1 0b68      	SBC  R22,R24
001df2 f051      	BREQ __ZERORES
001df3 f410      	BRCC __ADDF1210
001df4 9400      	COM  R0
001df5 dfbd      	RCALL __NEGMAN1
                 __ADDF1210:
001df6 2366      	TST  R22
001df7 f3a2      	BRMI __ADDF129
001df8 0fee      	LSL  R30
001df9 1fff      	ROL  R31
001dfa 1f66      	ROL  R22
001dfb 957a      	DEC  R23
001dfc f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
001dfd 27ee      	CLR  R30
001dfe 27ff      	CLR  R31
001dff 2766      	CLR  R22
001e00 2777      	CLR  R23
001e01 915f      	POP  R21
001e02 9508      	RET
                 
                 __MINRES:
001e03 efef      	SER  R30
001e04 efff      	SER  R31
001e05 e76f      	LDI  R22,0x7F
001e06 ef7f      	SER  R23
001e07 915f      	POP  R21
001e08 9508      	RET
                 
                 __MAXRES:
001e09 efef      	SER  R30
001e0a efff      	SER  R31
001e0b e76f      	LDI  R22,0x7F
001e0c e77f      	LDI  R23,0x7F
001e0d 915f      	POP  R21
001e0e 9508      	RET
                 
                 __MULF12:
001e0f 935f      	PUSH R21
001e10 df2c      	RCALL __UNPACK
001e11 3870      	CPI  R23,0x80
001e12 f351      	BREQ __ZERORES
001e13 3890      	CPI  R25,0x80
001e14 f341      	BREQ __ZERORES
001e15 2401      	EOR  R0,R1
001e16 9408      	SEC
001e17 1f79      	ADC  R23,R25
001e18 f423      	BRVC __MULF124
001e19 f31c      	BRLT __ZERORES
                 __MULF125:
001e1a 2000      	TST  R0
001e1b f33a      	BRMI __MINRES
001e1c cfec      	RJMP __MAXRES
                 __MULF124:
001e1d 920f      	PUSH R0
001e1e 931f      	PUSH R17
001e1f 932f      	PUSH R18
001e20 933f      	PUSH R19
001e21 934f      	PUSH R20
001e22 2711      	CLR  R17
001e23 2722      	CLR  R18
001e24 2799      	CLR  R25
001e25 9f68      	MUL  R22,R24
001e26 01a0      	MOVW R20,R0
001e27 9f8f      	MUL  R24,R31
001e28 2d30      	MOV  R19,R0
001e29 0d41      	ADD  R20,R1
001e2a 1f59      	ADC  R21,R25
001e2b 9f6b      	MUL  R22,R27
001e2c 0d30      	ADD  R19,R0
001e2d 1d41      	ADC  R20,R1
001e2e 1f59      	ADC  R21,R25
001e2f 9f8e      	MUL  R24,R30
001e30 d027      	RCALL __MULF126
001e31 9fbf      	MUL  R27,R31
001e32 d025      	RCALL __MULF126
001e33 9f6a      	MUL  R22,R26
001e34 d023      	RCALL __MULF126
001e35 9fbe      	MUL  R27,R30
001e36 d01d      	RCALL __MULF127
001e37 9faf      	MUL  R26,R31
001e38 d01b      	RCALL __MULF127
001e39 9fae      	MUL  R26,R30
001e3a 0d11      	ADD  R17,R1
001e3b 1f29      	ADC  R18,R25
001e3c 1f39      	ADC  R19,R25
001e3d 1f49      	ADC  R20,R25
001e3e 1f59      	ADC  R21,R25
001e3f 2fe3      	MOV  R30,R19
001e40 2ff4      	MOV  R31,R20
001e41 2f65      	MOV  R22,R21
001e42 2f52      	MOV  R21,R18
001e43 914f      	POP  R20
001e44 913f      	POP  R19
001e45 912f      	POP  R18
001e46 911f      	POP  R17
001e47 900f      	POP  R0
001e48 2366      	TST  R22
001e49 f02a      	BRMI __MULF122
001e4a 0f55      	LSL  R21
001e4b 1fee      	ROL  R30
001e4c 1fff      	ROL  R31
001e4d 1f66      	ROL  R22
001e4e c002      	RJMP __MULF123
                 __MULF122:
001e4f 9573      	INC  R23
001e50 f24b      	BRVS __MULF125
                 __MULF123:
001e51 decf      	RCALL __ROUND_REPACK
001e52 915f      	POP  R21
001e53 9508      	RET
                 
                 __MULF127:
001e54 0d10      	ADD  R17,R0
001e55 1d21      	ADC  R18,R1
001e56 1f39      	ADC  R19,R25
001e57 c002      	RJMP __MULF128
                 __MULF126:
001e58 0d20      	ADD  R18,R0
001e59 1d31      	ADC  R19,R1
                 __MULF128:
001e5a 1f49      	ADC  R20,R25
001e5b 1f59      	ADC  R21,R25
001e5c 9508      	RET
                 
                 __DIVF21:
001e5d 935f      	PUSH R21
001e5e dede      	RCALL __UNPACK
001e5f 3870      	CPI  R23,0x80
001e60 f421      	BRNE __DIVF210
001e61 2011      	TST  R1
                 __DIVF211:
001e62 f40a      	BRPL __DIVF219
001e63 cf9f      	RJMP __MINRES
                 __DIVF219:
001e64 cfa4      	RJMP __MAXRES
                 __DIVF210:
001e65 3890      	CPI  R25,0x80
001e66 f409      	BRNE __DIVF218
                 __DIVF217:
001e67 cf95      	RJMP __ZERORES
                 __DIVF218:
001e68 2401      	EOR  R0,R1
001e69 9408      	SEC
001e6a 0b97      	SBC  R25,R23
001e6b f41b      	BRVC __DIVF216
001e6c f3d4      	BRLT __DIVF217
001e6d 2000      	TST  R0
001e6e cff3      	RJMP __DIVF211
                 __DIVF216:
001e6f 2f79      	MOV  R23,R25
001e70 931f      	PUSH R17
001e71 932f      	PUSH R18
001e72 933f      	PUSH R19
001e73 934f      	PUSH R20
001e74 2411      	CLR  R1
001e75 2711      	CLR  R17
001e76 2722      	CLR  R18
001e77 2733      	CLR  R19
001e78 2744      	CLR  R20
001e79 2755      	CLR  R21
001e7a e290      	LDI  R25,32
                 __DIVF212:
001e7b 17ae      	CP   R26,R30
001e7c 07bf      	CPC  R27,R31
001e7d 0786      	CPC  R24,R22
001e7e 0741      	CPC  R20,R17
001e7f f030      	BRLO __DIVF213
001e80 1bae      	SUB  R26,R30
001e81 0bbf      	SBC  R27,R31
001e82 0b86      	SBC  R24,R22
001e83 0b41      	SBC  R20,R17
001e84 9408      	SEC
001e85 c001      	RJMP __DIVF214
                 __DIVF213:
001e86 9488      	CLC
                 __DIVF214:
001e87 1f55      	ROL  R21
001e88 1f22      	ROL  R18
001e89 1f33      	ROL  R19
001e8a 1c11      	ROL  R1
001e8b 1faa      	ROL  R26
001e8c 1fbb      	ROL  R27
001e8d 1f88      	ROL  R24
001e8e 1f44      	ROL  R20
001e8f 959a      	DEC  R25
001e90 f751      	BRNE __DIVF212
001e91 01f9      	MOVW R30,R18
001e92 2d61      	MOV  R22,R1
001e93 914f      	POP  R20
001e94 913f      	POP  R19
001e95 912f      	POP  R18
001e96 911f      	POP  R17
001e97 2366      	TST  R22
001e98 f032      	BRMI __DIVF215
001e99 0f55      	LSL  R21
001e9a 1fee      	ROL  R30
001e9b 1fff      	ROL  R31
001e9c 1f66      	ROL  R22
001e9d 957a      	DEC  R23
001e9e f243      	BRVS __DIVF217
                 __DIVF215:
001e9f de81      	RCALL __ROUND_REPACK
001ea0 915f      	POP  R21
001ea1 9508      	RET
                 
                 __CMPF12:
001ea2 2399      	TST  R25
001ea3 f09a      	BRMI __CMPF120
001ea4 2377      	TST  R23
001ea5 f042      	BRMI __CMPF121
001ea6 1797      	CP   R25,R23
001ea7 f048      	BRLO __CMPF122
001ea8 f429      	BRNE __CMPF121
001ea9 17ae      	CP   R26,R30
001eaa 07bf      	CPC  R27,R31
001eab 0786      	CPC  R24,R22
001eac f020      	BRLO __CMPF122
001ead f031      	BREQ __CMPF123
                 __CMPF121:
001eae 9498      	CLZ
001eaf 9488      	CLC
001eb0 9508      	RET
                 __CMPF122:
001eb1 9498      	CLZ
001eb2 9408      	SEC
001eb3 9508      	RET
                 __CMPF123:
001eb4 9418      	SEZ
001eb5 9488      	CLC
001eb6 9508      	RET
                 __CMPF120:
001eb7 2377      	TST  R23
001eb8 f7c2      	BRPL __CMPF122
001eb9 1797      	CP   R25,R23
001eba f398      	BRLO __CMPF121
001ebb f7a9      	BRNE __CMPF122
001ebc 17ea      	CP   R30,R26
001ebd 07fb      	CPC  R31,R27
001ebe 0768      	CPC  R22,R24
001ebf f388      	BRLO __CMPF122
001ec0 f399      	BREQ __CMPF123
001ec1 cfec      	RJMP __CMPF121
                 
                 __CPD10:
001ec2 9730      	SBIW R30,0
001ec3 4060      	SBCI R22,0
001ec4 4070      	SBCI R23,0
001ec5 9508      	RET
                 
                 __CPD02:
001ec6 2400      	CLR  R0
001ec7 160a      	CP   R0,R26
001ec8 060b      	CPC  R0,R27
001ec9 0608      	CPC  R0,R24
001eca 0609      	CPC  R0,R25
001ecb 9508      	RET
                 
                 __SAVELOCR4:
001ecc 933a      	ST   -Y,R19
                 __SAVELOCR3:
001ecd 932a      	ST   -Y,R18
                 __SAVELOCR2:
001ece 931a      	ST   -Y,R17
001ecf 930a      	ST   -Y,R16
001ed0 9508      	RET
                 
                 __LOADLOCR4:
001ed1 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
001ed2 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
001ed3 8119      	LDD  R17,Y+1
001ed4 8108      	LD   R16,Y
001ed5 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
001ed6 0fac      	ADD R26,R28
001ed7 1fbd      	ADC R27,R29
                 __INITLOC0:
001ed8 9005      	LPM  R0,Z+
001ed9 920d      	ST   X+,R0
001eda 958a      	DEC  R24
001edb f7e1      	BRNE __INITLOC0
001edc 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16L register use summary:
r0 :  60 r1 :  34 r2 :  39 r3 :  35 r4 :  43 r5 :   6 r6 :   8 r7 :   0 
r8 :   2 r9 :   4 r10:   0 r11:  10 r12:   6 r13:   6 r14:   0 r15:  13 
r16:  49 r17: 149 r18:  19 r19:  18 r20:  25 r21:  68 r22: 192 r23: 176 
r24: 112 r25: 104 r26: 852 r27: 333 r28:  27 r29:   2 r30:1531 r31: 285 
x  :  42 y  : 677 z  :  20 
Registers used: 32 out of 35 (91.4%)

ATmega16L instruction use summary:
adc   :  37 add   :  29 adiw  :  28 and   :   7 andi  :  24 asr   :   1 
bclr  :   0 bld   :  84 brbc  :   0 brbs  :   0 brcc  :  14 brcs  :   3 
break :   0 breq  : 119 brge  :  12 brhc  :   0 brhs  :   0 brid  :   0 
brie  :   0 brlo  :  41 brlt  :  11 brmi  :   9 brne  : 332 brpl  :  17 
brsh  :  40 brtc  :   2 brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 
bst   :   2 call  : 853 cbi   :   8 cbr   :   1 clc   :   3 clh   :   0 
cli   :   6 cln   :   0 clr   :  64 cls   :   0 clt   :  37 clv   :   0 
clz   :   2 com   :   8 cp    :  29 cpc   :  98 cpi   : 364 cpse  :   0 
dec   :  11 des   :   0 eor   :  12 fmul  :   0 fmuls :   0 fmulsu:   0 
icall :   0 ijmp  :   0 in    :  13 inc   :   6 jmp   :  59 ld    :  62 
ldd   : 325 ldi   :1023 lds   : 269 lpm   :  15 lsl   :  19 lsr   :   3 
mov   :  83 movw  :  55 mul   :  11 muls  :   0 mulsu :   0 neg   :   3 
nop   :   0 or    :   8 ori   :  17 out   :  58 pop   :  98 push  :  98 
rcall :  84 ret   : 193 reti  :   9 rjmp  : 418 rol   :  31 ror   :  16 
sbc   :  11 sbci  :  18 sbi   :  23 sbic  :  16 sbis  :   3 sbiw  :  26 
sbr   :   2 sbrc  :  56 sbrs  :   1 sec   :   5 seh   :   0 sei   :   5 
sen   :   0 ser   :   9 ses   :   0 set   :  35 sev   :   0 sez   :   1 
sleep :   0 spm   :   0 st    : 203 std   : 136 sts   : 248 sub   :   6 
subi  :  67 swap  :   0 tst   :  29 wdr   :   4 
Instructions used: 82 out of 112 (73.2%)

ATmega16L memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x003dba  15248    554  15802   16384  96.4%
[.dseg] 0x000060 0x000240      0    224    224    1024  21.9%
[.eseg] 0x000000 0x0001b9      0    441    441     512  86.1%

Assembly complete, 0 errors, 11 warnings
